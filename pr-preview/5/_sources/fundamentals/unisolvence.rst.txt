=========================
The Notion of Unisolvence
=========================

The pioneering works of\ :footcite:`kuntz, Guenther, Chung` gave constructions of nodes :math:`P_A` that turn out to be unisolvent
for downward closed :ref:`multi-index sets <fundamentals/polynomial-bases:Multi-index sets and polynomial degree>`  :math:`A= A_{m,n,1}` or :math:`A =A_{m,n,\infty}`
given by :math:`l_1`- or :math:`l_\infty`-degree.


For multi-index sets :math:`A_{m,n,p}`, :math:`1\leq p \leq \infty` and interpolation nodes
:math:`P_A=\{p_{\alpha}\}_{\alpha\in A} \subseteq \Omega =[-1,1]^m`
a set :math:`\{q_{\alpha}\}_{\alpha \in A}` of multivariate polynomials (e.g., :math:`q_{\alpha}(x) = x^\alpha:=x_1^{\alpha_1}\cdots x_m^{\alpha_m}`),
generating the polynomial space :math:`\Pi_A = \left<q_{\alpha} : \alpha \in A \right>`
the *multivariate Vandermonde matrix* is given by

.. math::
  V(P_A) = \big (q_{\beta}(p_{\alpha})\big)_{\alpha,\beta \in A} \in \mathbb{R}^{|A|\times|A|}\,.

For :math:`q_{\alpha}(x) = x^\alpha`, this results in the classic :math:`V(P_A) = \big (p_{\alpha}^\beta\big)_{\alpha,\beta \in A}`\ :footcite:`Gautschi2012`.
If :math:`V(P_A)` is (numerically) invertible, then one can interpolate `f` by solving the linear system of equations

.. math::
  V(P_A)C =F \,,  \quad C= (c_{\alpha})_{\alpha \in A} \,, \,\, \quad F= (f(p_{\alpha}))_{\alpha \in A} \in \mathbb{R}^{|A|}.

This requires :math:`\mathcal{O}(|A|^r)` operations with :math:`r>2`\ :footcite:`Strassen1969,Coppersmith1990`,
whereas the present **DDS** achieves quadratic runtime :math:`\mathcal{O}(|A|^2)`.
Indeed,

.. math::
  Q_{f,A}(x)=\sum_{\alpha \in A}c_\alpha q_\alpha \,\, \in \Pi_A

yields the unique interpolant of :math:`f` in :math:`P_A`, i.e.,  :math:`Q_{f,A}(p)=f(p)` for all :math:`p \in P_A`.
We therefore call a set of nodes :math:`P_A` *unisolvent* with respect to :math:`\Pi_A` if and only if :math:`V(P_A)`
is invertible, i.e., if and only if its null space :math:`\ker V(P_A) =0` is trivial.
The condition :math:`\ker V(P_A) =0` is equivalent to requiring that there exists no hypersurface :math:`H = Q^{-1}(0)`
generated by a polynomial :math:`0\not =Q \in \Pi_A` with :math:`P_A \subseteq H`.
Indeed, the coefficients :math:`C` of such a polynomial would be a non-trivial solution of :math:`V(P_A)C=0`.

However, even if :math:`P_A` is unisolvent, the matrix :math:`V(P_A)` rapidly becomes numerically ill-conditioned for higher dimensions or degrees
when using the canonical basis :math:`q_{\alpha}(x) =x^\alpha`, :math:`\alpha \in A`.
While previous approaches addressed this problem by *tensorial interpolation*\ :footcite:`sauertens, Dyn2014,chebfun`,
Minterpy is based on the :doc:`/fundamentals/dds` that even for non-tensorial
interpolation nodes such as the by default chosen
:doc:`Leja ordered Chebyshev-Lobatto nodes </fundamentals/interpolation-at-unisolvent-nodes>`
realizes efficient and accurate polynomial interpolation.

.. rubric:: References

.. footbibliography::
