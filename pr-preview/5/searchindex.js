Search.setIndex({"alltitles": {"1D Divided Difference Scheme": [[71, "d-divided-difference-scheme"]], "80-Character width rule": [[63, "character-width-rule"]], "ABC": [[3, null]], "API Reference": [[12, null]], "API reference": [[60, "api-reference"]], "About  the from_value_set() factory method": [[95, "about-the-from-value-set-factory-method"]], "About Us": [[53, null]], "About a generating function": [[93, "about-a-generating-function"]], "About complete multi-index sets": [[92, "about-complete-multi-index-sets"]], "About from_degree() factory method": [[92, "about-from-degree-factory-method"]], "About from_points() factory method": [[94, "about-from-points-factory-method"]], "About generating points": [[94, "about-generating-points"]], "About generating values": [[95, "about-generating-values"]], "About the branching model": [[67, "about-the-branching-model"]], "About the default constructor": [[91, "about-the-default-constructor"]], "About the documentation": [[66, "about-the-documentation"]], "About the from_function() factory method": [[93, "about-the-from-function-factory-method"]], "Add Exponents to a Grid": [[88, null]], "Add Exponents to a Multi-Index Set": [[105, null]], "Add a set of exponents to a Grid instance": [[88, "add-a-set-of-exponents-to-a-grid-instance"]], "Add a set of exponents to a MultiIndexSet instance": [[105, "add-a-set-of-exponents-to-a-multiindexset-instance"]], "Add an exponent to a Grid instance": [[88, "add-an-exponent-to-a-grid-instance"]], "Add an exponent to a MultiIndexSet instance": [[105, "add-an-exponent-to-a-multiindexset-instance"]], "Adding a notebook to documentation": [[62, "adding-a-notebook-to-documentation"]], "Adding a notebook to the source tree": [[62, "adding-a-notebook-to-the-source-tree"]], "Addition and subtraction": [[81, "addition-and-subtraction"]], "Additional tips": [[58, "additional-tips"]], "Admonitions": [[63, "admonitions"]], "Asking for support": [[68, "asking-for-support"]], "Assess the accuracy of interpolating polynomial": [[80, "assess-the-accuracy-of-interpolating-polynomial"]], "Assess the accuracy of the polynomial": [[85, "assess-the-accuracy-of-the-polynomial"]], "Assess the empirical convergence of interpolating polynomials": [[85, "assess-the-empirical-convergence-of-interpolating-polynomials"]], "Assessing 1D interpolant accuracy": [[83, "assessing-1d-interpolant-accuracy"]], "Assessing 2D interpolant accuracy": [[83, "assessing-2d-interpolant-accuracy"]], "Assessing 4D interpolant accuracy": [[83, "assessing-4d-interpolant-accuracy"]], "Attribution": [[54, "attribution"]], "Available Getting Started Guides (In-Depth Tutorials)": [[84, "id1"]], "Background information": [[4, "background-information"], [6, "background-information"], [37, "background-information"], [38, "background-information"]], "Barycentric Transformation": [[70, null]], "BarycentricDictOperator": [[42, null]], "BarycentricFactorisedOperator": [[43, null]], "BarycentricOperator": [[41, null]], "BarycentricPiecewiseOperator": [[44, null]], "Basic Arithmetic Operations with Polynomials": [[81, null]], "Basic Calculus Operations with Polynomials": [[82, null]], "Best practices": [[62, "best-practices"]], "Bibliographic citations": [[63, "bibliographic-citations"]], "Bibliography file": [[63, "bibliography-file"]], "Body": [[61, "body"]], "Building and deploying the documentation": [[65, "building-and-deploying-the-documentation"]], "Building the Documentation Locally": [[59, null]], "Building the documentation": [[59, "building-the-documentation"]], "Canonical basis": [[75, "canonical-basis"], [76, "canonical-basis"], [86, "canonical-basis"]], "Change of basis": [[86, "change-of-basis"]], "Chebyshev basis": [[75, "chebyshev-basis"], [86, "chebyshev-basis"]], "Check for Equality between Two MultiIndexSet Instances": [[111, null]], "Check for Membership (Containment)": [[112, null]], "Check for completeness": [[90, "check-for-completeness"], [107, "check-for-completeness"]], "Check for disjoint": [[106, "check-for-disjoint"]], "Check for downward-closedness": [[96, "check-for-downward-closedness"], [109, "check-for-downward-closedness"]], "Check for exponents membership": [[112, "check-for-exponents-membership"]], "Check for subset": [[106, "check-for-subset"]], "Check for superset": [[106, "check-for-superset"]], "Citations": [[63, "citations"]], "Classes": [[61, "classes"]], "Cloning the forked Minterpy repository": [[67, "cloning-the-forked-minterpy-repository"]], "Closing remark": [[87, "closing-remark"]], "Code Style": [[55, null]], "Code example blocks": [[63, "code-example-blocks"]], "Code examples": [[63, "code-examples"]], "Code of Conduct": [[54, null]], "Committing changes": [[67, "committing-changes"]], "Compare MultiIndexSet Instances": [[106, null]], "Complete multi-index set": [[75, "complete-multi-index-set"]], "Completeness vs downward-closedness": [[107, "completeness-vs-downward-closedness"]], "Completeness with respect to different polynomial degrees and l_p-degrees": [[107, "completeness-with-respect-to-different-polynomial-degrees-and-l-p-degrees"]], "Construct an interpolation grid": [[80, "construct-an-interpolation-grid"], [85, "construct-an-interpolation-grid"]], "Construction": [[110, "construction"]], "Contributing to the Codebase": [[56, null]], "Contributing to the Documentation": [[66, null]], "Contributors Guide": [[68, null]], "Contributors guides": [[60, "contributors-guides"]], "Create a Grid from an Array of Generating Points": [[94, null]], "Create a Grid from an Array of Generating Values": [[95, null]], "Create a Grid using the Default Constructor": [[91, null]], "Create a Grid with a Complete Multi-Index Set": [[92, null]], "Create a Grid with a Generating Function": [[93, null]], "Create a Lagrange polynomial": [[80, "create-a-lagrange-polynomial"]], "Create a Multi-Index Set": [[108, null]], "Create a polynomial in the Lagrange basis": [[85, "create-a-polynomial-in-the-lagrange-basis"]], "Create an Empty Multi-Index Set": [[110, null]], "Create an interpolating polynomial": [[80, "create-an-interpolating-polynomial"], [85, "create-an-interpolating-polynomial"]], "Create an ordinary regression polynomial": [[87, "create-an-ordinary-regression-polynomial"]], "Create the Union of Grid instances": [[98, null]], "Create the Union of MultiIndexSet Instances": [[114, null]], "Creating a Merge (Pull) Request": [[69, null]], "Creating a feature branch": [[67, "creating-a-feature-branch"]], "Creating a virtual environment": [[67, "creating-a-virtual-environment"]], "Cross-references": [[63, "cross-references"]], "Cross-referencing code blocks": [[63, "cross-referencing-code-blocks"]], "Currently defined hooks": [[57, "currently-defined-hooks"]], "Define a multi-index set": [[80, "define-a-multi-index-set"]], "Define a polynomial model": [[87, "define-a-polynomial-model"]], "Define the multi-index set": [[85, "define-the-multi-index-set"]], "Design principles": [[60, "design-principles"]], "Detailed description": [[61, "detailed-description"]], "Different in Spatial Dimension": [[106, "different-in-spatial-dimension"]], "Different in spatial dimension": [[112, "different-in-spatial-dimension"]], "Differentiation": [[82, "differentiation"]], "Disjoint set": [[110, "disjoint-set"]], "Displaying a list of references": [[63, "displaying-a-list-of-references"]], "Division": [[81, "division"]], "Documentation Source Structure": [[64, null]], "Documentation generator": [[65, "documentation-generator"]], "Documentation: Design": [[60, null]], "Documentation: Framework and Tools": [[65, null]], "Downward-closedness": [[75, "downward-closedness"]], "Downward-closedness vs completeness": [[109, "downward-closedness-vs-completeness"]], "Enforcement and reporting": [[54, "enforcement-and-reporting"]], "Enforcement responsibilities": [[54, "enforcement-responsibilities"]], "English spelling": [[55, "english-spelling"]], "Equality in value": [[111, "equality-in-value"]], "Evaluate a Function on a Grid": [[89, null]], "Evaluate the function at the unisolvent nodes": [[80, "evaluate-the-function-at-the-unisolvent-nodes"], [85, "evaluate-the-function-at-the-unisolvent-nodes"]], "Evaluate the polynomial": [[85, "evaluate-the-polynomial"]], "Evaluate the polynomial on a set of query points": [[80, "evaluate-the-polynomial-on-a-set-of-query-points"]], "Evaluate the regression polynomial": [[87, "evaluate-the-regression-polynomial"]], "Evaluation of Multidimensional Polynomials": [[76, null]], "Example: Function with additional arguments": [[89, "example-function-with-additional-arguments"]], "Example: Function with multi-dimensional output": [[89, "example-function-with-multi-dimensional-output"]], "Example: Function with one-dimensional output": [[89, "example-function-with-one-dimensional-output"]], "Example: Instances with different dimension": [[97, "example-instances-with-different-dimension"], [98, "example-instances-with-different-dimension"]], "Example: Instances with the same dimension": [[97, "example-instances-with-the-same-dimension"], [98, "example-instances-with-the-same-dimension"]], "Example: One-dimensional polynomial": [[86, "example-one-dimensional-polynomial"]], "Example: Two-dimensional interpolation grid": [[91, "example-two-dimensional-interpolation-grid"], [92, "example-two-dimensional-interpolation-grid"], [93, "example-two-dimensional-interpolation-grid"], [94, "example-two-dimensional-interpolation-grid"], [95, "example-two-dimensional-interpolation-grid"]], "Example: Two-dimensional polynomial": [[86, "example-two-dimensional-polynomial"]], "Examples": [[61, "examples"]], "Explanation (fundamentals, theory)": [[60, "explanation-fundamentals-theory"]], "Exponentiation": [[81, "exponentiation"]], "External resources": [[63, "external-resources"]], "Fit the regression polynomial": [[87, "fit-the-regression-polynomial"]], "Forking and cloning the repository": [[67, "forking-and-cloning-the-repository"]], "Forking the Minterpy repository": [[67, "forking-the-minterpy-repository"]], "Formatting": [[55, "formatting"]], "Four-dimension interpolant": [[83, "four-dimension-interpolant"]], "Four-dimensional function": [[83, "four-dimensional-function"]], "From Interpolant to polynomial": [[80, "from-interpolant-to-polynomial"], [85, "from-interpolant-to-polynomial"]], "From a given set of exponents and l_p-degree": [[108, "from-a-given-set-of-exponents-and-l-p-degree"]], "From a given spatial dimension, polynomial degree, and l_p-degree": [[108, "from-a-given-spatial-dimension-polynomial-degree-and-l-p-degree"]], "From interpolant to interpolating polynomial": [[86, "from-interpolant-to-interpolating-polynomial"]], "Function to evaluate": [[89, "function-to-evaluate"]], "Function values on the grid": [[89, "function-values-on-the-grid"]], "Functions and methods": [[61, "functions-and-methods"]], "Fundamentals of Minterpy": [[72, null]], "Further relationships": [[78, "further-relationships"]], "General convention": [[61, "general-convention"]], "Generating function": [[91, "generating-function"], [93, "generating-function"]], "Generating points": [[73, "generating-points"], [94, "generating-points"]], "Generating values": [[95, "generating-values"]], "Getting Started with Minterpy": [[84, null]], "Getting started with Git": [[67, "getting-started-with-git"]], "Grid": [[89, "grid"], [99, null]], "Grid instance": [[91, "grid-instance"], [93, "grid-instance"], [94, "grid-instance"], [95, "grid-instance"]], "How to contribute": [[66, "how-to-contribute"]], "How to import Minterpy": [[83, "how-to-import-minterpy"]], "How-To Guides": [[4, "how-to-guides"], [6, "how-to-guides"]], "How-to Guides": [[100, null]], "How-to guides": [[60, "how-to-guides"]], "Images": [[63, "images"]], "Implementation details": [[6, "implementation-details"], [37, "implementation-details"], [38, "implementation-details"]], "Implementation notes": [[63, "implementation-notes"]], "Import Minterpy": [[80, "import-minterpy"]], "In the (1D) Chebyshev basis": [[86, "in-the-1d-chebyshev-basis"]], "In the (1D) Lagrange basis": [[86, "in-the-1d-lagrange-basis"]], "In the (1D) Newton basis": [[86, "in-the-1d-newton-basis"]], "In the (2D) Chebyshev basis": [[86, "in-the-2d-chebyshev-basis"]], "In the (2D) Newton basis": [[86, "in-the-2d-newton-basis"]], "In the (2D) canonical basis": [[86, "in-the-2d-canonical-basis"]], "In-line code examples": [[63, "in-line-code-examples"]], "In-place multiplication": [[113, "in-place-multiplication"]], "In-place union": [[114, "in-place-union"]], "Inequality in value": [[111, "inequality-in-value"]], "Inline mathematics": [[63, "inline-mathematics"]], "Installation": [[84, "installation"]], "Installing Minterpy for development": [[67, "installing-minterpy-for-development"]], "Instances with different dimensions": [[113, "instances-with-different-dimensions"], [114, "instances-with-different-dimensions"]], "Instances with different l_p-degrees": [[113, "instances-with-different-l-p-degrees"], [114, "instances-with-different-l-p-degrees"]], "Instances with the same dimension": [[113, "instances-with-the-same-dimension"], [114, "instances-with-the-same-dimension"]], "Integrate a One-Dimensional Polynomial": [[102, null]], "Integrate an M-Dimensional Polynomial": [[103, null]], "Integration": [[82, "integration"], [101, null]], "Integration in different bases": [[102, "integration-in-different-bases"], [103, "integration-in-different-bases"]], "Integration over specified bounds": [[102, "integration-over-specified-bounds"], [103, "integration-over-specified-bounds"]], "Integration over the domain [-1, 1]": [[102, "integration-over-the-domain-1-1"]], "Integration over the domain [-1, 1]^3": [[103, "integration-over-the-domain-1-1-3"]], "Internal API": [[15, null]], "Interpolation at Unisolvent Nodes": [[73, null]], "Jupyter notebooks": [[65, "jupyter-notebooks"]], "Lagrange basis": [[75, "lagrange-basis"], [76, "lagrange-basis"], [86, "lagrange-basis"]], "Lagrange interpolation": [[73, "lagrange-interpolation"]], "Lexicographical ordering": [[75, "lexicographical-ordering"]], "Lifting the curse of dimensionality": [[74, "lifting-the-curse-of-dimensionality"]], "Maintainers and contributors": [[53, "maintainers-and-contributors"]], "Make a Grid Complete": [[90, null]], "Make a Grid Downward-Closed": [[96, null]], "Make a Multi-Index Set Complete": [[107, null]], "Make a Multi-Index Set Downward-Closed": [[109, null]], "Make complete": [[90, "make-complete"], [107, "make-complete"]], "Make downward-closed": [[96, "make-downward-closed"], [109, "make-downward-closed"]], "Making changes": [[67, "making-changes"]], "Mathematics": [[63, "mathematics"]], "Mathematics blocks": [[63, "mathematics-blocks"]], "Minterpy API elements": [[63, "minterpy-api-elements"]], "Minterpy Documentation": [[115, null]], "Modules": [[61, "modules"]], "Motivating example": [[88, "motivating-example"], [90, "motivating-example"], [96, "motivating-example"], [102, "motivating-example"], [103, "motivating-example"], [105, "motivating-example"], [106, "motivating-example"], [107, "motivating-example"], [109, "motivating-example"], [112, "motivating-example"]], "Motivating function": [[80, "motivating-function"], [82, "motivating-function"], [85, "motivating-function"]], "Motivating functions": [[81, "motivating-functions"]], "Motivating problem": [[87, "motivating-problem"]], "Multi-Index Sets": [[104, null]], "Multi-index set": [[91, "multi-index-set"], [93, "multi-index-set"], [94, "multi-index-set"], [95, "multi-index-set"]], "Multi-index sets and polynomial degree": [[75, "multi-index-sets-and-polynomial-degree"]], "Multi-index tree": [[71, "multi-index-tree"]], "Multidimensional Divided Difference Scheme (DDS)": [[71, null]], "Multidimensional Polynomial Bases": [[75, null]], "Multidimensional Polynomial Interpolation": [[74, null], [85, null]], "Multiplication": [[81, "multiplication"], [110, "multiplication"]], "Multiply Grid Instances": [[97, null]], "Multiply MultiIndexSet Instances": [[113, null]], "Newton basis": [[75, "newton-basis"], [76, "newton-basis"], [86, "newton-basis"]], "Newton interpolation": [[73, "newton-interpolation"]], "Notes": [[61, "notes"]], "Numbering and cross-referencing": [[63, "numbering-and-cross-referencing"]], "One-Dimensional Polynomial Interpolation": [[80, null]], "One-dimensional function": [[83, "one-dimensional-function"]], "One-dimensional interpolant": [[83, "one-dimensional-interpolant"]], "One-line summary": [[61, "one-line-summary"]], "Organization of tests": [[58, "organization-of-tests"]], "Other projects\u2019 documentation": [[63, "other-projects-documentation"]], "Our pledge": [[54, "our-pledge"]], "Our standards": [[54, "our-standards"]], "Page": [[63, "page"]], "Parameters": [[61, "parameters"]], "Polynomial Bases and Transformations": [[86, null]], "Polynomial Regression": [[77, null]], "Polynomial Regression with Minterpy": [[87, null]], "Polynomial interpolation": [[102, "polynomial-interpolation"], [103, "polynomial-interpolation"]], "Polynomial regression": [[87, "polynomial-regression"]], "Polynomial spaces": [[75, "polynomial-spaces"]], "Polynomials in Minterpy": [[86, "polynomials-in-minterpy"]], "Pre-Commits": [[57, null]], "Proper subset": [[106, "proper-subset"]], "Proper superset": [[106, "proper-superset"]], "Pushing changes": [[67, "pushing-changes"]], "Quick Start Guide to Function Approximations with Minterpy": [[83, null]], "Raises": [[61, "raises"]], "Reporting a bug": [[68, "reporting-a-bug"]], "Requesting a feature": [[68, "requesting-a-feature"]], "Requesting an improvement": [[68, "requesting-an-improvement"]], "Resolving the issue yourself and creating a merge (pull) request": [[68, "resolving-the-issue-yourself-and-creating-a-merge-pull-request"]], "Returns": [[61, "returns"]], "Reviewing a merge (pull) request": [[68, "reviewing-a-merge-pull-request"]], "Running and Writing Tests": [[58, null]], "Running and activating pre-commit": [[57, "running-and-activating-pre-commit"]], "Running the test suite": [[58, "running-the-test-suite"]], "Scope": [[54, "scope"]], "Section headings": [[63, "section-headings"]], "Set membership": [[110, "set-membership"]], "Setting Up a Development Environment": [[67, null]], "Setup": [[62, "setup"]], "Source organization": [[62, "source-organization"]], "Splitting Theorems": [[71, "splitting-theorems"]], "Splitting of the unisolvent nodes": [[71, "splitting-of-the-unisolvent-nodes"]], "Sponsors": [[53, "sponsors"]], "Structure": [[62, "structure"]], "Style guide": [[55, "style-guide"]], "Sub-tree recursion": [[71, "sub-tree-recursion"]], "Summary": [[60, "summary"], [65, "summary"], [80, "summary"], [81, "summary"], [82, "summary"], [83, "summary"], [85, "summary"], [86, "summary"], [87, "summary"]], "Testing": [[62, "testing"]], "Testing the Jupyter-notebook-based documentation": [[59, "testing-the-jupyter-notebook-based-documentation"]], "The Notion of Unisolvence": [[79, null]], "The interpolate() function": [[80, "the-interpolate-function"]], "Theorem: Basis transformations": [[78, "theorem-basis-transformations"]], "Todo": [[0, "id1"], [1, "id1"], [1, "id2"], [1, "id3"], [4, "id1"], [14, "id1"], [14, "id2"], [23, "id1"], [30, "id1"], [30, "id2"], [30, "id3"], [32, "id1"], [32, "id2"], [34, "id1"], [34, "id2"], [35, "id1"], [35, "id2"], [35, "id3"], [37, "id1"], [37, "id2"], [38, "id1"], [38, "id2"], [40, "id1"], [54, "id1"]], "Transform to the Newton basis": [[80, "transform-to-the-newton-basis"], [85, "transform-to-the-newton-basis"]], "Transformation Between Bases": [[78, null]], "Transformation Utility Functions": [[23, null]], "Tutorials": [[60, "tutorials"]], "Two-dimension interpolant": [[83, "two-dimension-interpolant"]], "Two-dimensional function": [[83, "two-dimensional-function"]], "Union": [[110, "union"]], "Unisolvent nodes": [[73, "unisolvent-nodes"]], "Verify the fitted polynomial": [[87, "verify-the-fitted-polynomial"]], "Weierstrass Approximation Theorem": [[74, "weierstrass-approximation-theorem"]], "What\u2019s next?": [[84, "what-s-next"]], "Writing Docstrings for API Documentation": [[61, null]], "Writing Jupyter Notebooks": [[62, null]], "Writing new tests": [[58, "writing-new-tests"]], "Writing reStructuredText Documents": [[63, null]], "arrays": [[24, null]], "barycentric": [[40, null]], "canonical": [[16, null], [48, null]], "canonical_polynomial": [[34, null]], "chebyshev": [[49, null]], "chebyshev_polynomial": [[35, null]], "common": [[17, null]], "grid": [[4, null]], "identity": [[50, null]], "in Keyword": [[112, "in-keyword"]], "interface": [[47, null]], "lagrange": [[51, null]], "lagrange_polynomial": [[37, null]], "matrix_operator": [[45, null]], "minterpy.core": [[5, null]], "minterpy.dds": [[13, null]], "minterpy.extras": [[8, null]], "minterpy.gen_points": [[14, null]], "minterpy.interpolation": [[33, null]], "minterpy.jit_compiled": [[18, null]], "minterpy.polynomials": [[36, null]], "minterpy.schemes": [[39, null]], "minterpy.transformations": [[46, null]], "minterpy.utils": [[25, null]], "multi_index": [[6, null], [19, null], [26, null]], "multivariate_polynomial_abstract": [[1, null]], "newton": [[52, null]], "newton.eval": [[21, null]], "newton_diff": [[20, null]], "newton_polynomial": [[38, null]], "operator_abstract": [[0, null]], "ordinary_regression": [[10, null]], "polynomials.canonical": [[27, null]], "polynomials.chebyshev": [[28, null]], "polynomials.lagrange": [[29, null]], "polynomials.newton": [[30, null]], "quad": [[31, null]], "reStructuredText markup language": [[65, "restructuredtext-markup-language"]], "regression": [[9, null]], "regression_abc": [[11, null]], "transformation_abstract": [[2, null]], "transformations": [[22, null]], "tree": [[7, null]], "verification": [[32, null]]}, "docnames": ["api/core/ABC/abc-operator", "api/core/ABC/abc-polynomial", "api/core/ABC/abc-transformation", "api/core/ABC/index", "api/core/grid", "api/core/index", "api/core/multi_index", "api/core/tree", "api/extras/index", "api/extras/regression/index", "api/extras/regression/ordinary_regression", "api/extras/regression/regression_abc", "api/index", "api/internal/dds", "api/internal/gen-points", "api/internal/index", "api/internal/jit_compiled/canonical", "api/internal/jit_compiled/common", "api/internal/jit_compiled/index", "api/internal/jit_compiled/multi-index", "api/internal/jit_compiled/newton-diff", "api/internal/jit_compiled/newton-eval", "api/internal/jit_compiled/transformations", "api/internal/trafoutils", "api/internal/utils/arrays", "api/internal/utils/index", "api/internal/utils/multi-index", "api/internal/utils/poly-canonical", "api/internal/utils/poly-chebyshev", "api/internal/utils/poly-lagrange", "api/internal/utils/poly-newton", "api/internal/utils/quad", "api/internal/utils/verification", "api/interpolation", "api/polynomials/canonical", "api/polynomials/chebyshev", "api/polynomials/index", "api/polynomials/lagrange", "api/polynomials/newton", "api/transformation-operators/index", "api/transformation-operators/operator-barycentric/index", "api/transformation-operators/operator-barycentric/operator-barycentric", "api/transformation-operators/operator-barycentric/operator-barycentric-dict", "api/transformation-operators/operator-barycentric/operator-barycentric-factorized", "api/transformation-operators/operator-barycentric/operator-barycentric-piecewise", "api/transformation-operators/operator-matrix", "api/transformations/index", "api/transformations/interface", "api/transformations/transformation-canonical", "api/transformations/transformation-chebyshev", "api/transformations/transformation-identity", "api/transformations/transformation-lagrange", "api/transformations/transformation-newton", "contributors/about-us", "contributors/code-of-conduct", "contributors/contrib-codebase/code-style", "contributors/contrib-codebase/index", "contributors/contrib-codebase/pre-commits", "contributors/contrib-codebase/running-writing-tests", "contributors/contrib-docs/docs-build", "contributors/contrib-docs/docs-design", "contributors/contrib-docs/docs-docstrings", "contributors/contrib-docs/docs-ipynb", "contributors/contrib-docs/docs-rest", "contributors/contrib-docs/docs-source-structure", "contributors/contrib-docs/docs-tools", "contributors/contrib-docs/index", "contributors/development-environment", "contributors/index", "contributors/merge-request", "fundamentals/barycentric-transformation", "fundamentals/dds", "fundamentals/index", "fundamentals/interpolation-at-unisolvent-nodes", "fundamentals/interpolation-problem", "fundamentals/polynomial-bases", "fundamentals/polynomial-evaluation", "fundamentals/polynomial-regression", "fundamentals/transformation", "fundamentals/unisolvence", "getting-started/1d-polynomial-interpolation", "getting-started/arithmetic-operations-with-polynomials", "getting-started/calculus-operations-with-polynomials", "getting-started/functions-approximation", "getting-started/index", "getting-started/md-polynomial-interpolation", "getting-started/polynomial-bases-and-transformations", "getting-started/polynomial-regression", "how-to/grid/grid-add", "how-to/grid/grid-call", "how-to/grid/grid-complete", "how-to/grid/grid-create-default-constructor", "how-to/grid/grid-create-from-degree", "how-to/grid/grid-create-from-function", "how-to/grid/grid-create-from-points", "how-to/grid/grid-create-from-value-set", "how-to/grid/grid-downward-closed", "how-to/grid/grid-multiply", "how-to/grid/grid-union", "how-to/grid/index", "how-to/index", "how-to/integration/index", "how-to/integration/poly-interpolant-integration-1d", "how-to/integration/poly-interpolant-integration-md", "how-to/multi-index-set/index", "how-to/multi-index-set/multi-index-set-add", "how-to/multi-index-set/multi-index-set-comparison", "how-to/multi-index-set/multi-index-set-complete", "how-to/multi-index-set/multi-index-set-create", "how-to/multi-index-set/multi-index-set-downward-closed", "how-to/multi-index-set/multi-index-set-empty", "how-to/multi-index-set/multi-index-set-equality", "how-to/multi-index-set/multi-index-set-membership", "how-to/multi-index-set/multi-index-set-multiply", "how-to/multi-index-set/multi-index-set-union", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api/core/ABC/abc-operator.rst", "api/core/ABC/abc-polynomial.rst", "api/core/ABC/abc-transformation.rst", "api/core/ABC/index.rst", "api/core/grid.rst", "api/core/index.rst", "api/core/multi_index.rst", "api/core/tree.rst", "api/extras/index.rst", "api/extras/regression/index.rst", "api/extras/regression/ordinary_regression.rst", "api/extras/regression/regression_abc.rst", "api/index.rst", "api/internal/dds.rst", "api/internal/gen-points.rst", "api/internal/index.rst", "api/internal/jit_compiled/canonical.rst", "api/internal/jit_compiled/common.rst", "api/internal/jit_compiled/index.rst", "api/internal/jit_compiled/multi-index.rst", "api/internal/jit_compiled/newton-diff.rst", "api/internal/jit_compiled/newton-eval.rst", "api/internal/jit_compiled/transformations.rst", "api/internal/trafoutils.rst", "api/internal/utils/arrays.rst", "api/internal/utils/index.rst", "api/internal/utils/multi-index.rst", "api/internal/utils/poly-canonical.rst", "api/internal/utils/poly-chebyshev.rst", "api/internal/utils/poly-lagrange.rst", "api/internal/utils/poly-newton.rst", "api/internal/utils/quad.rst", "api/internal/utils/verification.rst", "api/interpolation.rst", "api/polynomials/canonical.rst", "api/polynomials/chebyshev.rst", "api/polynomials/index.rst", "api/polynomials/lagrange.rst", "api/polynomials/newton.rst", "api/transformation-operators/index.rst", "api/transformation-operators/operator-barycentric/index.rst", "api/transformation-operators/operator-barycentric/operator-barycentric.rst", "api/transformation-operators/operator-barycentric/operator-barycentric-dict.rst", "api/transformation-operators/operator-barycentric/operator-barycentric-factorized.rst", "api/transformation-operators/operator-barycentric/operator-barycentric-piecewise.rst", "api/transformation-operators/operator-matrix.rst", "api/transformations/index.rst", "api/transformations/interface.rst", "api/transformations/transformation-canonical.rst", "api/transformations/transformation-chebyshev.rst", "api/transformations/transformation-identity.rst", "api/transformations/transformation-lagrange.rst", "api/transformations/transformation-newton.rst", "contributors/about-us.rst", "contributors/code-of-conduct.rst", "contributors/contrib-codebase/code-style.rst", "contributors/contrib-codebase/index.rst", "contributors/contrib-codebase/pre-commits.rst", "contributors/contrib-codebase/running-writing-tests.rst", "contributors/contrib-docs/docs-build.rst", "contributors/contrib-docs/docs-design.rst", "contributors/contrib-docs/docs-docstrings.rst", "contributors/contrib-docs/docs-ipynb.rst", "contributors/contrib-docs/docs-rest.rst", "contributors/contrib-docs/docs-source-structure.rst", "contributors/contrib-docs/docs-tools.rst", "contributors/contrib-docs/index.rst", "contributors/development-environment.rst", "contributors/index.rst", "contributors/merge-request.rst", "fundamentals/barycentric-transformation.rst", "fundamentals/dds.rst", "fundamentals/index.rst", "fundamentals/interpolation-at-unisolvent-nodes.rst", "fundamentals/interpolation-problem.rst", "fundamentals/polynomial-bases.rst", "fundamentals/polynomial-evaluation.rst", "fundamentals/polynomial-regression.rst", "fundamentals/transformation.rst", "fundamentals/unisolvence.rst", "getting-started/1d-polynomial-interpolation.ipynb", "getting-started/arithmetic-operations-with-polynomials.ipynb", "getting-started/calculus-operations-with-polynomials.ipynb", "getting-started/functions-approximation.ipynb", "getting-started/index.rst", "getting-started/md-polynomial-interpolation.ipynb", "getting-started/polynomial-bases-and-transformations.ipynb", "getting-started/polynomial-regression.ipynb", "how-to/grid/grid-add.ipynb", "how-to/grid/grid-call.ipynb", "how-to/grid/grid-complete.ipynb", "how-to/grid/grid-create-default-constructor.ipynb", "how-to/grid/grid-create-from-degree.ipynb", "how-to/grid/grid-create-from-function.ipynb", "how-to/grid/grid-create-from-points.ipynb", "how-to/grid/grid-create-from-value-set.ipynb", "how-to/grid/grid-downward-closed.ipynb", "how-to/grid/grid-multiply.ipynb", "how-to/grid/grid-union.ipynb", "how-to/grid/index.rst", "how-to/index.rst", "how-to/integration/index.rst", "how-to/integration/poly-interpolant-integration-1d.ipynb", "how-to/integration/poly-interpolant-integration-md.ipynb", "how-to/multi-index-set/index.rst", "how-to/multi-index-set/multi-index-set-add.ipynb", "how-to/multi-index-set/multi-index-set-comparison.ipynb", "how-to/multi-index-set/multi-index-set-complete.ipynb", "how-to/multi-index-set/multi-index-set-create.ipynb", "how-to/multi-index-set/multi-index-set-downward-closed.ipynb", "how-to/multi-index-set/multi-index-set-empty.ipynb", "how-to/multi-index-set/multi-index-set-equality.ipynb", "how-to/multi-index-set/multi-index-set-membership.ipynb", "how-to/multi-index-set/multi-index-set-multiply.ipynb", "how-to/multi-index-set/multi-index-set-union.ipynb", "index.rst"], "indexentries": {"__add__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__add__", false]], "__add__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__add__", false]], "__add__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__add__", false]], "__add__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__add__", false]], "__add__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__add__", false]], "__call__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.__call__", false]], "__call__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__call__", false]], "__call__() (minterpy.core.abc.transformation_abstract.transformationabc method)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC.__call__", false]], "__call__() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.__call__", false]], "__call__() (minterpy.extras.regression.regression_abc.regressionabc method)": [[11, "minterpy.extras.regression.regression_abc.RegressionABC.__call__", false]], "__call__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__call__", false]], "__call__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__call__", false]], "__call__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__call__", false]], "__call__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__call__", false]], "__call__() (minterpy.transformations.canonical.canonicaltochebyshev method)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev.__call__", false]], "__call__() (minterpy.transformations.canonical.canonicaltolagrange method)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange.__call__", false]], "__call__() (minterpy.transformations.canonical.canonicaltonewton method)": [[48, "minterpy.transformations.canonical.CanonicalToNewton.__call__", false]], "__call__() (minterpy.transformations.chebyshev.chebyshevtocanonical method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical.__call__", false]], "__call__() (minterpy.transformations.chebyshev.chebyshevtolagrange method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange.__call__", false]], "__call__() (minterpy.transformations.chebyshev.chebyshevtonewton method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton.__call__", false]], "__call__() (minterpy.transformations.identity.identity method)": [[50, "minterpy.transformations.identity.Identity.__call__", false]], "__call__() (minterpy.transformations.lagrange.lagrangetocanonical method)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical.__call__", false]], "__call__() (minterpy.transformations.lagrange.lagrangetochebyshev method)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev.__call__", false]], "__call__() (minterpy.transformations.lagrange.lagrangetonewton method)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton.__call__", false]], "__call__() (minterpy.transformations.newton.newtontocanonical method)": [[52, "minterpy.transformations.newton.NewtonToCanonical.__call__", false]], "__call__() (minterpy.transformations.newton.newtontochebyshev method)": [[52, "minterpy.transformations.newton.NewtonToChebyshev.__call__", false]], "__call__() (minterpy.transformations.newton.newtontolagrange method)": [[52, "minterpy.transformations.newton.NewtonToLagrange.__call__", false]], "__contains__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__contains__", false]], "__copy__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__copy__", false]], "__copy__() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.__copy__", false]], "__copy__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__copy__", false]], "__copy__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__copy__", false]], "__copy__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__copy__", false]], "__copy__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__copy__", false]], "__deepcopy__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__deepcopy__", false]], "__deepcopy__() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.__deepcopy__", false]], "__deepcopy__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__deepcopy__", false]], "__deepcopy__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__deepcopy__", false]], "__deepcopy__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__deepcopy__", false]], "__deepcopy__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__deepcopy__", false]], "__deepcopy__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__deepcopy__", false]], "__eq__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__eq__", false]], "__eq__() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.__eq__", false]], "__eq__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__eq__", false]], "__eq__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__eq__", false]], "__eq__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__eq__", false]], "__eq__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__eq__", false]], "__eq__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__eq__", false]], "__floordiv__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__floordiv__", false]], "__floordiv__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__floordiv__", false]], "__floordiv__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__floordiv__", false]], "__floordiv__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__floordiv__", false]], "__floordiv__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__floordiv__", false]], "__ge__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__ge__", false]], "__gt__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__gt__", false]], "__hash__ (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc attribute)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__hash__", false]], "__hash__ (minterpy.core.grid.grid attribute)": [[4, "minterpy.core.grid.Grid.__hash__", false]], "__hash__ (minterpy.core.multi_index.multiindexset attribute)": [[6, "minterpy.core.multi_index.MultiIndexSet.__hash__", false]], "__hash__ (minterpy.polynomials.canonical_polynomial.canonicalpolynomial attribute)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__hash__", false]], "__hash__ (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial attribute)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__hash__", false]], "__hash__ (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial attribute)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__hash__", false]], "__hash__ (minterpy.polynomials.newton_polynomial.newtonpolynomial attribute)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__hash__", false]], "__imul__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__imul__", false]], "__init__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__init__", false]], "__init__() (minterpy.core.abc.transformation_abstract.transformationabc method)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC.__init__", false]], "__init__() (minterpy.core.tree.multiindextree method)": [[7, "minterpy.core.tree.MultiIndexTree.__init__", false]], "__init__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__init__", false]], "__init__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__init__", false]], "__init__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__init__", false]], "__init__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__init__", false]], "__init__() (minterpy.schemes.barycentric.operators.barycentricdictoperator method)": [[42, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.__init__", false]], "__init__() (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator method)": [[43, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.__init__", false]], "__init__() (minterpy.schemes.barycentric.operators.barycentricoperator method)": [[41, "minterpy.schemes.barycentric.operators.BarycentricOperator.__init__", false]], "__init__() (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator method)": [[44, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.__init__", false]], "__init__() (minterpy.schemes.matrix_operator.matrixoperator method)": [[45, "minterpy.schemes.matrix_operator.MatrixOperator.__init__", false]], "__init__() (minterpy.transformations.canonical.canonicaltochebyshev method)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev.__init__", false]], "__init__() (minterpy.transformations.canonical.canonicaltolagrange method)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange.__init__", false]], "__init__() (minterpy.transformations.canonical.canonicaltonewton method)": [[48, "minterpy.transformations.canonical.CanonicalToNewton.__init__", false]], "__init__() (minterpy.transformations.chebyshev.chebyshevtocanonical method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical.__init__", false]], "__init__() (minterpy.transformations.chebyshev.chebyshevtolagrange method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange.__init__", false]], "__init__() (minterpy.transformations.chebyshev.chebyshevtonewton method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton.__init__", false]], "__init__() (minterpy.transformations.identity.identity method)": [[50, "minterpy.transformations.identity.Identity.__init__", false]], "__init__() (minterpy.transformations.lagrange.lagrangetocanonical method)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical.__init__", false]], "__init__() (minterpy.transformations.lagrange.lagrangetochebyshev method)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev.__init__", false]], "__init__() (minterpy.transformations.lagrange.lagrangetonewton method)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton.__init__", false]], "__init__() (minterpy.transformations.newton.newtontocanonical method)": [[52, "minterpy.transformations.newton.NewtonToCanonical.__init__", false]], "__init__() (minterpy.transformations.newton.newtontochebyshev method)": [[52, "minterpy.transformations.newton.NewtonToChebyshev.__init__", false]], "__init__() (minterpy.transformations.newton.newtontolagrange method)": [[52, "minterpy.transformations.newton.NewtonToLagrange.__init__", false]], "__init_subclass__() (minterpy.core.abc.transformation_abstract.transformationabc class method)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.canonical.canonicaltochebyshev class method)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.canonical.canonicaltolagrange class method)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.canonical.canonicaltonewton class method)": [[48, "minterpy.transformations.canonical.CanonicalToNewton.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.chebyshev.chebyshevtocanonical class method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.chebyshev.chebyshevtolagrange class method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.chebyshev.chebyshevtonewton class method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.identity.identity class method)": [[50, "minterpy.transformations.identity.Identity.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.lagrange.lagrangetocanonical class method)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.lagrange.lagrangetochebyshev class method)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.lagrange.lagrangetonewton class method)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.newton.newtontocanonical class method)": [[52, "minterpy.transformations.newton.NewtonToCanonical.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.newton.newtontochebyshev class method)": [[52, "minterpy.transformations.newton.NewtonToChebyshev.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.newton.newtontolagrange class method)": [[52, "minterpy.transformations.newton.NewtonToLagrange.__init_subclass__", false]], "__ior__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__ior__", false]], "__le__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__le__", false]], "__len__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__len__", false]], "__len__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__len__", false]], "__len__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__len__", false]], "__len__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__len__", false]], "__len__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__len__", false]], "__len__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__len__", false]], "__lt__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__lt__", false]], "__matmul__() (minterpy.core.abc.operator_abstract.operatorabc method)": [[0, "minterpy.core.ABC.operator_abstract.OperatorABC.__matmul__", false]], "__matmul__() (minterpy.schemes.barycentric.operators.barycentricdictoperator method)": [[42, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.__matmul__", false]], "__matmul__() (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator method)": [[43, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.__matmul__", false]], "__matmul__() (minterpy.schemes.barycentric.operators.barycentricoperator method)": [[41, "minterpy.schemes.barycentric.operators.BarycentricOperator.__matmul__", false]], "__matmul__() (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator method)": [[44, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.__matmul__", false]], "__matmul__() (minterpy.schemes.matrix_operator.matrixoperator method)": [[45, "minterpy.schemes.matrix_operator.MatrixOperator.__matmul__", false]], "__mul__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__mul__", false]], "__mul__() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.__mul__", false]], "__mul__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__mul__", false]], "__mul__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__mul__", false]], "__mul__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__mul__", false]], "__mul__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__mul__", false]], "__mul__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__mul__", false]], "__neg__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__neg__", false]], "__neg__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__neg__", false]], "__neg__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__neg__", false]], "__neg__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__neg__", false]], "__neg__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__neg__", false]], "__or__() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.__or__", false]], "__or__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__or__", false]], "__pos__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__pos__", false]], "__pos__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__pos__", false]], "__pos__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__pos__", false]], "__pos__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__pos__", false]], "__pos__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__pos__", false]], "__pow__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__pow__", false]], "__pow__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__pow__", false]], "__pow__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__pow__", false]], "__pow__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__pow__", false]], "__pow__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__pow__", false]], "__radd__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__radd__", false]], "__radd__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__radd__", false]], "__radd__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__radd__", false]], "__radd__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__radd__", false]], "__radd__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__radd__", false]], "__repr__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__repr__", false]], "__rmul__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__rmul__", false]], "__rmul__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__rmul__", false]], "__rmul__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__rmul__", false]], "__rmul__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__rmul__", false]], "__rmul__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__rmul__", false]], "__rsub__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__rsub__", false]], "__rsub__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__rsub__", false]], "__rsub__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__rsub__", false]], "__rsub__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__rsub__", false]], "__rsub__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__rsub__", false]], "__str__() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.__str__", false]], "__sub__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__sub__", false]], "__sub__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__sub__", false]], "__sub__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__sub__", false]], "__sub__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__sub__", false]], "__sub__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__sub__", false]], "__truediv__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__truediv__", false]], "__truediv__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__truediv__", false]], "__truediv__() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__truediv__", false]], "__truediv__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__truediv__", false]], "__truediv__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__truediv__", false]], "__weakref__ (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc attribute)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.__weakref__", false]], "__weakref__ (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc attribute)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__weakref__", false]], "__weakref__ (minterpy.core.abc.transformation_abstract.transformationabc attribute)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC.__weakref__", false]], "__weakref__ (minterpy.core.grid.grid attribute)": [[4, "minterpy.core.grid.Grid.__weakref__", false]], "__weakref__ (minterpy.core.multi_index.multiindexset attribute)": [[6, "minterpy.core.multi_index.MultiIndexSet.__weakref__", false]], "__weakref__ (minterpy.core.tree.multiindextree attribute)": [[7, "minterpy.core.tree.MultiIndexTree.__weakref__", false]], "__weakref__ (minterpy.extras.regression.regression_abc.regressionabc attribute)": [[11, "minterpy.extras.regression.regression_abc.RegressionABC.__weakref__", false]], "__weakref__ (minterpy.polynomials.canonical_polynomial.canonicalpolynomial attribute)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__weakref__", false]], "__weakref__ (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial attribute)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.__weakref__", false]], "__weakref__ (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial attribute)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__weakref__", false]], "__weakref__ (minterpy.polynomials.newton_polynomial.newtonpolynomial attribute)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__weakref__", false]], "__weakref__ (minterpy.schemes.barycentric.operators.barycentricdictoperator attribute)": [[42, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.__weakref__", false]], "__weakref__ (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator attribute)": [[43, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.__weakref__", false]], "__weakref__ (minterpy.schemes.barycentric.operators.barycentricoperator attribute)": [[41, "minterpy.schemes.barycentric.operators.BarycentricOperator.__weakref__", false]], "__weakref__ (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator attribute)": [[44, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.__weakref__", false]], "__weakref__ (minterpy.schemes.matrix_operator.matrixoperator attribute)": [[45, "minterpy.schemes.matrix_operator.MatrixOperator.__weakref__", false]], "__weakref__ (minterpy.transformations.canonical.canonicaltochebyshev attribute)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev.__weakref__", false]], "__weakref__ (minterpy.transformations.canonical.canonicaltolagrange attribute)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange.__weakref__", false]], "__weakref__ (minterpy.transformations.canonical.canonicaltonewton attribute)": [[48, "minterpy.transformations.canonical.CanonicalToNewton.__weakref__", false]], "__weakref__ (minterpy.transformations.chebyshev.chebyshevtocanonical attribute)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical.__weakref__", false]], "__weakref__ (minterpy.transformations.chebyshev.chebyshevtolagrange attribute)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange.__weakref__", false]], "__weakref__ (minterpy.transformations.chebyshev.chebyshevtonewton attribute)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton.__weakref__", false]], "__weakref__ (minterpy.transformations.identity.identity attribute)": [[50, "minterpy.transformations.identity.Identity.__weakref__", false]], "__weakref__ (minterpy.transformations.lagrange.lagrangetocanonical attribute)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical.__weakref__", false]], "__weakref__ (minterpy.transformations.lagrange.lagrangetochebyshev attribute)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev.__weakref__", false]], "__weakref__ (minterpy.transformations.lagrange.lagrangetonewton attribute)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton.__weakref__", false]], "__weakref__ (minterpy.transformations.newton.newtontocanonical attribute)": [[52, "minterpy.transformations.newton.NewtonToCanonical.__weakref__", false]], "__weakref__ (minterpy.transformations.newton.newtontochebyshev attribute)": [[52, "minterpy.transformations.newton.NewtonToChebyshev.__weakref__", false]], "__weakref__ (minterpy.transformations.newton.newtontolagrange attribute)": [[52, "minterpy.transformations.newton.NewtonToLagrange.__weakref__", false]], "_add() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._add", false]], "_add() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._add", false]], "_add() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._add", false]], "_add() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._add", false]], "_apply_transformation() (minterpy.core.abc.transformation_abstract.transformationabc method)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.canonical.canonicaltochebyshev method)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.canonical.canonicaltolagrange method)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.canonical.canonicaltonewton method)": [[48, "minterpy.transformations.canonical.CanonicalToNewton._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.chebyshev.chebyshevtocanonical method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.chebyshev.chebyshevtolagrange method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.chebyshev.chebyshevtonewton method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.identity.identity method)": [[50, "minterpy.transformations.identity.Identity._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.lagrange.lagrangetocanonical method)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.lagrange.lagrangetochebyshev method)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.lagrange.lagrangetonewton method)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.newton.newtontocanonical method)": [[52, "minterpy.transformations.newton.NewtonToCanonical._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.newton.newtontochebyshev method)": [[52, "minterpy.transformations.newton.NewtonToChebyshev._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.newton.newtontolagrange method)": [[52, "minterpy.transformations.newton.NewtonToLagrange._apply_transformation", false]], "_create_generating_points() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid._create_generating_points", false]], "_diff() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc static method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._diff", false]], "_diff() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._diff", false]], "_diff() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._diff", false]], "_diff() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._diff", false]], "_diff() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._diff", false]], "_div() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._div", false]], "_div() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._div", false]], "_div() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._div", false]], "_div() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._div", false]], "_eval() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc static method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC._eval", false]], "_eval() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc static method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._eval", false]], "_eval() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._eval", false]], "_eval() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._eval", false]], "_eval() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._eval", false]], "_eval() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._eval", false]], "_gen_grid_default() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc static method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._gen_grid_default", false]], "_gen_grid_default() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._gen_grid_default", false]], "_gen_grid_default() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._gen_grid_default", false]], "_gen_grid_default() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._gen_grid_default", false]], "_gen_grid_default() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._gen_grid_default", false]], "_get_array_repr() (minterpy.core.abc.operator_abstract.operatorabc method)": [[0, "minterpy.core.ABC.operator_abstract.OperatorABC._get_array_repr", false]], "_get_array_repr() (minterpy.schemes.barycentric.operators.barycentricdictoperator method)": [[42, "minterpy.schemes.barycentric.operators.BarycentricDictOperator._get_array_repr", false]], "_get_array_repr() (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator method)": [[43, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator._get_array_repr", false]], "_get_array_repr() (minterpy.schemes.barycentric.operators.barycentricoperator method)": [[41, "minterpy.schemes.barycentric.operators.BarycentricOperator._get_array_repr", false]], "_get_array_repr() (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator method)": [[44, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator._get_array_repr", false]], "_get_array_repr() (minterpy.schemes.matrix_operator.matrixoperator method)": [[45, "minterpy.schemes.matrix_operator.MatrixOperator._get_array_repr", false]], "_get_transformation_operator() (minterpy.core.abc.transformation_abstract.transformationabc method)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.canonical.canonicaltochebyshev method)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.canonical.canonicaltolagrange method)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.canonical.canonicaltonewton method)": [[48, "minterpy.transformations.canonical.CanonicalToNewton._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.chebyshev.chebyshevtocanonical method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.chebyshev.chebyshevtolagrange method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.chebyshev.chebyshevtonewton method)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.identity.identity method)": [[50, "minterpy.transformations.identity.Identity._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.lagrange.lagrangetocanonical method)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.lagrange.lagrangetochebyshev method)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.lagrange.lagrangetonewton method)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.newton.newtontocanonical method)": [[52, "minterpy.transformations.newton.NewtonToCanonical._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.newton.newtontochebyshev method)": [[52, "minterpy.transformations.newton.NewtonToChebyshev._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.newton.newtontolagrange method)": [[52, "minterpy.transformations.newton.NewtonToLagrange._get_transformation_operator", false]], "_integrate_over() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc static method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._integrate_over", false]], "_integrate_over() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._integrate_over", false]], "_integrate_over() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._integrate_over", false]], "_integrate_over() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._integrate_over", false]], "_integrate_over() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._integrate_over", false]], "_match_dims() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._match_dims", false]], "_match_dims() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._match_dims", false]], "_match_dims() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._match_dims", false]], "_match_dims() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._match_dims", false]], "_match_dims() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._match_dims", false]], "_mul() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._mul", false]], "_mul() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._mul", false]], "_mul() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._mul", false]], "_mul() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._mul", false]], "_new_instance() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid._new_instance", false]], "_new_instance_if_necessary() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._new_instance_if_necessary", false]], "_new_instance_if_necessary() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._new_instance_if_necessary", false]], "_new_instance_if_necessary() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._new_instance_if_necessary", false]], "_new_instance_if_necessary() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._new_instance_if_necessary", false]], "_new_instance_if_necessary() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._new_instance_if_necessary", false]], "_partial_diff() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc static method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._partial_diff", false]], "_partial_diff() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._partial_diff", false]], "_partial_diff() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._partial_diff", false]], "_partial_diff() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._partial_diff", false]], "_partial_diff() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._partial_diff", false]], "_pow() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._pow", false]], "_pow() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._pow", false]], "_pow() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._pow", false]], "_pow() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._pow", false]], "_scalar_add() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._scalar_add", false]], "_scalar_add() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._scalar_add", false]], "_scalar_add() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._scalar_add", false]], "_scalar_add() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._scalar_add", false]], "_sub() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._sub", false]], "_sub() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._sub", false]], "_sub() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._sub", false]], "_sub() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._sub", false]], "_target_indices (minterpy.core.abc.transformation_abstract.transformationabc property)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC._target_indices", false]], "_target_indices (minterpy.transformations.canonical.canonicaltochebyshev property)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev._target_indices", false]], "_target_indices (minterpy.transformations.canonical.canonicaltolagrange property)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange._target_indices", false]], "_target_indices (minterpy.transformations.canonical.canonicaltonewton property)": [[48, "minterpy.transformations.canonical.CanonicalToNewton._target_indices", false]], "_target_indices (minterpy.transformations.chebyshev.chebyshevtocanonical property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical._target_indices", false]], "_target_indices (minterpy.transformations.chebyshev.chebyshevtolagrange property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange._target_indices", false]], "_target_indices (minterpy.transformations.chebyshev.chebyshevtonewton property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton._target_indices", false]], "_target_indices (minterpy.transformations.identity.identity property)": [[50, "minterpy.transformations.identity.Identity._target_indices", false]], "_target_indices (minterpy.transformations.lagrange.lagrangetocanonical property)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical._target_indices", false]], "_target_indices (minterpy.transformations.lagrange.lagrangetochebyshev property)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev._target_indices", false]], "_target_indices (minterpy.transformations.lagrange.lagrangetonewton property)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton._target_indices", false]], "_target_indices (minterpy.transformations.newton.newtontocanonical property)": [[52, "minterpy.transformations.newton.NewtonToCanonical._target_indices", false]], "_target_indices (minterpy.transformations.newton.newtontochebyshev property)": [[52, "minterpy.transformations.newton.NewtonToChebyshev._target_indices", false]], "_target_indices (minterpy.transformations.newton.newtontolagrange property)": [[52, "minterpy.transformations.newton.NewtonToLagrange._target_indices", false]], "_verify_generating_points() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid._verify_generating_points", false]], "_verify_grid_max_exponent() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid._verify_grid_max_exponent", false]], "_verify_matching_gen_function_and_points() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid._verify_matching_gen_function_and_points", false]], "_verify_operands() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._verify_operands", false]], "_verify_operands() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._verify_operands", false]], "_verify_operands() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial._verify_operands", false]], "_verify_operands() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._verify_operands", false]], "_verify_operands() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._verify_operands", false]], "add_exponents() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.add_exponents", false]], "add_exponents() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.add_exponents", false]], "add_newton() (in module minterpy.polynomials.newton_polynomial)": [[38, "minterpy.polynomials.newton_polynomial.add_newton", false]], "add_points() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.add_points", false]], "add_points() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.add_points", false]], "add_points() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.add_points", false]], "add_points() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.add_points", false]], "add_points() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.add_points", false]], "all_indices_are_contained() (in module minterpy.jit_compiled.multi_index)": [[19, "minterpy.jit_compiled.multi_index.all_indices_are_contained", false]], "array_repr_full (minterpy.core.abc.operator_abstract.operatorabc property)": [[0, "minterpy.core.ABC.operator_abstract.OperatorABC.array_repr_full", false]], "array_repr_full (minterpy.schemes.barycentric.operators.barycentricdictoperator property)": [[42, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.array_repr_full", false]], "array_repr_full (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator property)": [[43, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.array_repr_full", false]], "array_repr_full (minterpy.schemes.barycentric.operators.barycentricoperator property)": [[41, "minterpy.schemes.barycentric.operators.BarycentricOperator.array_repr_full", false]], "array_repr_full (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator property)": [[44, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.array_repr_full", false]], "array_repr_full (minterpy.schemes.matrix_operator.matrixoperator property)": [[45, "minterpy.schemes.matrix_operator.MatrixOperator.array_repr_full", false]], "array_repr_sparse (minterpy.core.abc.operator_abstract.operatorabc property)": [[0, "minterpy.core.ABC.operator_abstract.OperatorABC.array_repr_sparse", false]], "array_repr_sparse (minterpy.schemes.barycentric.operators.barycentricdictoperator property)": [[42, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.array_repr_sparse", false]], "array_repr_sparse (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator property)": [[43, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.array_repr_sparse", false]], "array_repr_sparse (minterpy.schemes.barycentric.operators.barycentricoperator property)": [[41, "minterpy.schemes.barycentric.operators.BarycentricOperator.array_repr_sparse", false]], "array_repr_sparse (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator property)": [[44, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.array_repr_sparse", false]], "array_repr_sparse (minterpy.schemes.matrix_operator.matrixoperator property)": [[45, "minterpy.schemes.matrix_operator.MatrixOperator.array_repr_sparse", false]], "array_representation (minterpy.schemes.barycentric.operators.barycentricdictoperator property)": [[42, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.array_representation", false]], "array_representation (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator property)": [[43, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.array_representation", false]], "array_representation (minterpy.schemes.barycentric.operators.barycentricoperator property)": [[41, "minterpy.schemes.barycentric.operators.BarycentricOperator.array_representation", false]], "array_representation (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator property)": [[44, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.array_representation", false]], "barycentricdictoperator (class in minterpy.schemes.barycentric.operators)": [[42, "minterpy.schemes.barycentric.operators.BarycentricDictOperator", false]], "barycentricfactorisedoperator (class in minterpy.schemes.barycentric.operators)": [[43, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator", false]], "barycentricoperator (class in minterpy.schemes.barycentric.operators)": [[41, "minterpy.schemes.barycentric.operators.BarycentricOperator", false]], "barycentricpiecewiseoperator (class in minterpy.schemes.barycentric.operators)": [[44, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator", false]], "build_canonical_to_chebyshev_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_canonical_to_chebyshev_operator", false]], "build_canonical_to_lagrange_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_canonical_to_lagrange_operator", false]], "build_canonical_to_newton_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_canonical_to_newton_operator", false]], "build_chebyshev_to_canonical_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_chebyshev_to_canonical_operator", false]], "build_chebyshev_to_lagrange_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_chebyshev_to_lagrange_operator", false]], "build_chebyshev_to_newton_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_chebyshev_to_newton_operator", false]], "build_lagrange_to_canonical_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_lagrange_to_canonical_operator", false]], "build_lagrange_to_chebyshev_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_lagrange_to_chebyshev_operator", false]], "build_lagrange_to_newton_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_lagrange_to_newton_operator", false]], "build_newton_to_canonical_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_newton_to_canonical_operator", false]], "build_newton_to_chebyshev_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_newton_to_chebyshev_operator", false]], "build_newton_to_lagrange_operator() (in module minterpy.transformations.utils)": [[23, "minterpy.transformations.utils.build_newton_to_lagrange_operator", false]], "can_eval_mult() (in module minterpy.jit_compiled.canonical)": [[16, "minterpy.jit_compiled.canonical.can_eval_mult", false]], "canonicalpolynomial (class in minterpy.polynomials.canonical_polynomial)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial", false]], "canonicaltochebyshev (class in minterpy.transformations.canonical)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev", false]], "canonicaltolagrange (class in minterpy.transformations.canonical)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange", false]], "canonicaltonewton (class in minterpy.transformations.canonical)": [[48, "minterpy.transformations.canonical.CanonicalToNewton", false]], "cartesian_product() (in module minterpy.utils.arrays)": [[24, "minterpy.utils.arrays.cartesian_product", false]], "chebychev_2nd_order() (in module minterpy.gen_points)": [[14, "minterpy.gen_points.chebychev_2nd_order", false]], "chebyshevpolynomial (class in minterpy.polynomials.chebyshev_polynomial)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial", false]], "chebyshevtocanonical (class in minterpy.transformations.chebyshev)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical", false]], "chebyshevtolagrange (class in minterpy.transformations.chebyshev)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange", false]], "chebyshevtonewton (class in minterpy.transformations.chebyshev)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton", false]], "check_dimensionality() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.check_dimensionality", false]], "check_domain_fit() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.check_domain_fit", false]], "check_dtype() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.check_dtype", false]], "check_shape() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.check_shape", false]], "check_type() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.check_type", false]], "check_values() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.check_values", false]], "coeffs (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc property)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.coeffs", false]], "coeffs (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc property)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.coeffs", false]], "coeffs (minterpy.extras.regression.ordinary_regression.ordinaryregression property)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.coeffs", false]], "coeffs (minterpy.polynomials.canonical_polynomial.canonicalpolynomial property)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.coeffs", false]], "coeffs (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial property)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.coeffs", false]], "coeffs (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial property)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.coeffs", false]], "coeffs (minterpy.polynomials.newton_polynomial.newtonpolynomial property)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.coeffs", false]], "combinations_iter() (in module minterpy.jit_compiled.common)": [[17, "minterpy.jit_compiled.common.combinations_iter", false]], "compute_coeffs_poly_prod() (in module minterpy.jit_compiled.canonical)": [[16, "minterpy.jit_compiled.canonical.compute_coeffs_poly_prod", false]], "compute_monomials_from_lut() (in module minterpy.jit_compiled.newton.diff)": [[20, "minterpy.jit_compiled.newton.diff.compute_monomials_from_lut", false]], "compute_vandermonde_n2c() (in module minterpy.jit_compiled.transformations)": [[22, "minterpy.jit_compiled.transformations.compute_vandermonde_n2c", false]], "contains_these_exponents() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.contains_these_exponents", false]], "create_lua_differentiated() (in module minterpy.jit_compiled.newton.diff)": [[20, "minterpy.jit_compiled.newton.diff.create_lua_differentiated", false]], "create_lut_difference() (in module minterpy.jit_compiled.newton.diff)": [[20, "minterpy.jit_compiled.newton.diff.create_lut_difference", false]], "create_lut_differentiated() (in module minterpy.jit_compiled.newton.diff)": [[20, "minterpy.jit_compiled.newton.diff.create_lut_differentiated", false]], "cross_and_sum() (in module minterpy.jit_compiled.multi_index)": [[19, "minterpy.jit_compiled.multi_index.cross_and_sum", false]], "deriv_newt_eval() (in module minterpy.utils.polynomials.newton)": [[30, "minterpy.utils.polynomials.newton.deriv_newt_eval", false]], "diff() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.diff", false]], "diff() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.diff", false]], "diff() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.diff", false]], "diff() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.diff", false]], "diff() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.diff", false]], "diff_newton() (in module minterpy.polynomials.newton_polynomial)": [[38, "minterpy.polynomials.newton_polynomial.diff_newton", false]], "dot() (in module minterpy.jit_compiled.common)": [[17, "minterpy.jit_compiled.common.dot", false]], "dummy() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.dummy", false]], "eval_monomials_single_query() (in module minterpy.jit_compiled.newton.diff)": [[20, "minterpy.jit_compiled.newton.diff.eval_monomials_single_query", false]], "eval_multiple_query() (in module minterpy.jit_compiled.newton.diff)": [[20, "minterpy.jit_compiled.newton.diff.eval_multiple_query", false]], "eval_multiple_query_par() (in module minterpy.jit_compiled.newton.diff)": [[20, "minterpy.jit_compiled.newton.diff.eval_multiple_query_par", false]], "eval_newton() (in module minterpy.polynomials.newton_polynomial)": [[38, "minterpy.polynomials.newton_polynomial.eval_newton", false]], "eval_newton_monomials() (in module minterpy.utils.polynomials.newton)": [[30, "minterpy.utils.polynomials.newton.eval_newton_monomials", false]], "eval_newton_monomials_multiple() (in module minterpy.jit_compiled.newton.eval)": [[21, "minterpy.jit_compiled.newton.eval.eval_newton_monomials_multiple", false]], "eval_newton_monomials_single() (in module minterpy.jit_compiled.newton.eval)": [[21, "minterpy.jit_compiled.newton.eval.eval_newton_monomials_single", false]], "eval_newton_polynomials() (in module minterpy.utils.polynomials.newton)": [[30, "minterpy.utils.polynomials.newton.eval_newton_polynomials", false]], "eval_newton_polynomials_batch() (in module minterpy.utils.polynomials.newton)": [[30, "minterpy.utils.polynomials.newton.eval_newton_polynomials_batch", false]], "eval_poly (minterpy.extras.regression.ordinary_regression.ordinaryregression property)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.eval_poly", false]], "eval_polynomials() (in module minterpy.utils.polynomials.canonical)": [[27, "minterpy.utils.polynomials.canonical.eval_polynomials", false]], "evaluate_monomials() (in module minterpy.utils.polynomials.chebyshev)": [[28, "minterpy.utils.polynomials.chebyshev.evaluate_monomials", false]], "evaluate_polynomials() (in module minterpy.utils.polynomials.chebyshev)": [[28, "minterpy.utils.polynomials.chebyshev.evaluate_polynomials", false]], "expand_dim() (in module minterpy.utils.arrays)": [[24, "minterpy.utils.arrays.expand_dim", false]], "expand_dim() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.expand_dim", false]], "expand_dim() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.expand_dim", false]], "expand_dim() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.expand_dim", false]], "expand_dim() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.expand_dim", false]], "expand_dim() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.expand_dim", false]], "expand_dim() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.expand_dim", false]], "expand_dim() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.expand_dim", false]], "exponents (minterpy.core.multi_index.multiindexset property)": [[6, "minterpy.core.multi_index.MultiIndexSet.exponents", false]], "fct (minterpy.interpolation.interpolant attribute)": [[33, "minterpy.interpolation.Interpolant.fct", false]], "fill_match_positions() (in module minterpy.jit_compiled.multi_index)": [[19, "minterpy.jit_compiled.multi_index.fill_match_positions", false]], "find_match_between() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.find_match_between", false]], "fit() (minterpy.extras.regression.ordinary_regression.ordinaryregression method)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.fit", false]], "fit() (minterpy.extras.regression.regression_abc.regressionabc method)": [[11, "minterpy.extras.regression.regression_abc.RegressionABC.fit", false]], "from_degree() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc class method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.from_degree", false]], "from_degree() (minterpy.core.grid.grid class method)": [[4, "minterpy.core.grid.Grid.from_degree", false]], "from_degree() (minterpy.core.multi_index.multiindexset class method)": [[6, "minterpy.core.multi_index.MultiIndexSet.from_degree", false]], "from_degree() (minterpy.interpolation.interpolant class method)": [[33, "minterpy.interpolation.Interpolant.from_degree", false]], "from_degree() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial class method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.from_degree", false]], "from_degree() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial class method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.from_degree", false]], "from_degree() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial class method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.from_degree", false]], "from_degree() (minterpy.polynomials.newton_polynomial.newtonpolynomial class method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.from_degree", false]], "from_function() (minterpy.core.grid.grid class method)": [[4, "minterpy.core.grid.Grid.from_function", false]], "from_grid() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc class method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.from_grid", false]], "from_grid() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial class method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.from_grid", false]], "from_grid() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial class method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.from_grid", false]], "from_grid() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial class method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.from_grid", false]], "from_grid() (minterpy.polynomials.newton_polynomial.newtonpolynomial class method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.from_grid", false]], "from_points() (minterpy.core.grid.grid class method)": [[4, "minterpy.core.grid.Grid.from_points", false]], "from_poly() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc class method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.from_poly", false]], "from_poly() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial class method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.from_poly", false]], "from_poly() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial class method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.from_poly", false]], "from_poly() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial class method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.from_poly", false]], "from_poly() (minterpy.polynomials.newton_polynomial.newtonpolynomial class method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.from_poly", false]], "from_value_set() (minterpy.core.grid.grid class method)": [[4, "minterpy.core.grid.Grid.from_value_set", false]], "gauss_leg() (in module minterpy.utils.quad)": [[31, "minterpy.utils.quad.gauss_leg", false]], "gen_backward_neighbors() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.gen_backward_neighbors", false]], "gen_chebychev_2nd_order_leja_ordered() (in module minterpy.gen_points)": [[14, "minterpy.gen_points.gen_chebychev_2nd_order_leja_ordered", false]], "gen_missing_backward_neighbors() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.gen_missing_backward_neighbors", false]], "gen_points_chebyshev() (in module minterpy.gen_points)": [[14, "minterpy.gen_points.gen_points_chebyshev", false]], "gen_points_from_values() (in module minterpy.gen_points)": [[14, "minterpy.gen_points.gen_points_from_values", false]], "generate_internal_domain() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.generate_internal_domain", false]], "generate_internal_domain() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.generate_internal_domain", false]], "generate_internal_domain() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.generate_internal_domain", false]], "generate_internal_domain() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.generate_internal_domain", false]], "generate_user_domain() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.generate_user_domain", false]], "generate_user_domain() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial static method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.generate_user_domain", false]], "generate_user_domain() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.generate_user_domain", false]], "generate_user_domain() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.generate_user_domain", false]], "generating_function (minterpy.core.grid.grid property)": [[4, "minterpy.core.grid.Grid.generating_function", false]], "generating_points (minterpy.core.grid.grid property)": [[4, "minterpy.core.grid.Grid.generating_points", false]], "get_exponent_matrix() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.get_exponent_matrix", false]], "get_max_columnwise() (in module minterpy.jit_compiled.common)": [[17, "minterpy.jit_compiled.common.get_max_columnwise", false]], "get_poly_degree() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.get_poly_degree", false]], "get_regression_matrix() (minterpy.extras.regression.ordinary_regression.ordinaryregression method)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.get_regression_matrix", false]], "get_transformation() (in module minterpy.transformations.interface)": [[47, "minterpy.transformations.interface.get_transformation", false]], "get_transformation_class() (in module minterpy.transformations.interface)": [[47, "minterpy.transformations.interface.get_transformation_class", false]], "grid (class in minterpy.core.grid)": [[4, "minterpy.core.grid.Grid", false]], "grid (minterpy.core.abc.transformation_abstract.transformationabc property)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC.grid", false]], "grid (minterpy.extras.regression.ordinary_regression.ordinaryregression property)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.grid", false]], "grid (minterpy.interpolation.interpolator attribute)": [[33, "minterpy.interpolation.Interpolator.grid", false]], "grid (minterpy.transformations.canonical.canonicaltochebyshev property)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev.grid", false]], "grid (minterpy.transformations.canonical.canonicaltolagrange property)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange.grid", false]], "grid (minterpy.transformations.canonical.canonicaltonewton property)": [[48, "minterpy.transformations.canonical.CanonicalToNewton.grid", false]], "grid (minterpy.transformations.chebyshev.chebyshevtocanonical property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical.grid", false]], "grid (minterpy.transformations.chebyshev.chebyshevtolagrange property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange.grid", false]], "grid (minterpy.transformations.chebyshev.chebyshevtonewton property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton.grid", false]], "grid (minterpy.transformations.identity.identity property)": [[50, "minterpy.transformations.identity.Identity.grid", false]], "grid (minterpy.transformations.lagrange.lagrangetocanonical property)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical.grid", false]], "grid (minterpy.transformations.lagrange.lagrangetochebyshev property)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev.grid", false]], "grid (minterpy.transformations.lagrange.lagrangetonewton property)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton.grid", false]], "grid (minterpy.transformations.newton.newtontocanonical property)": [[52, "minterpy.transformations.newton.NewtonToCanonical.grid", false]], "grid (minterpy.transformations.newton.newtontochebyshev property)": [[52, "minterpy.transformations.newton.NewtonToChebyshev.grid", false]], "grid (minterpy.transformations.newton.newtontolagrange property)": [[52, "minterpy.transformations.newton.NewtonToLagrange.grid", false]], "has_generating_function (minterpy.core.grid.grid property)": [[4, "minterpy.core.grid.Grid.has_generating_function", false]], "has_matching_dimension() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.has_matching_dimension", false]], "has_matching_dimension() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.has_matching_dimension", false]], "has_matching_dimension() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.has_matching_dimension", false]], "has_matching_dimension() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.has_matching_dimension", false]], "has_matching_dimension() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.has_matching_dimension", false]], "has_matching_domain() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.has_matching_domain", false]], "has_matching_domain() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.has_matching_domain", false]], "has_matching_domain() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.has_matching_domain", false]], "has_matching_domain() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.has_matching_domain", false]], "has_matching_domain() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.has_matching_domain", false]], "identity (class in minterpy.transformations.identity)": [[50, "minterpy.transformations.identity.Identity", false]], "insert_lexicographically() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.insert_lexicographically", false]], "integrate_monomials() (in module minterpy.utils.polynomials.canonical)": [[27, "minterpy.utils.polynomials.canonical.integrate_monomials", false]], "integrate_monomials_lagrange() (in module minterpy.utils.polynomials.lagrange)": [[29, "minterpy.utils.polynomials.lagrange.integrate_monomials_lagrange", false]], "integrate_monomials_newton() (in module minterpy.utils.polynomials.newton)": [[30, "minterpy.utils.polynomials.newton.integrate_monomials_newton", false]], "integrate_over() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.integrate_over", false]], "integrate_over() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.integrate_over", false]], "integrate_over() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.integrate_over", false]], "integrate_over() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.integrate_over", false]], "integrate_over() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.integrate_over", false]], "integrate_over_newton() (in module minterpy.polynomials.newton_polynomial)": [[38, "minterpy.polynomials.newton_polynomial.integrate_over_newton", false]], "internal_domain (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc attribute)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.internal_domain", false]], "interpolant (class in minterpy.interpolation)": [[33, "minterpy.interpolation.Interpolant", false]], "interpolate() (in module minterpy.interpolation)": [[33, "minterpy.interpolation.interpolate", false]], "interpolator (class in minterpy.interpolation)": [[33, "minterpy.interpolation.Interpolator", false]], "interpolator (minterpy.interpolation.interpolant attribute)": [[33, "minterpy.interpolation.Interpolant.interpolator", false]], "is_compatible() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.is_compatible", false]], "is_complete (minterpy.core.grid.grid property)": [[4, "minterpy.core.grid.Grid.is_complete", false]], "is_complete (minterpy.core.multi_index.multiindexset property)": [[6, "minterpy.core.multi_index.MultiIndexSet.is_complete", false]], "is_complete() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.is_complete", false]], "is_disjoint() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.is_disjoint", false]], "is_disjoint() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.is_disjoint", false]], "is_downward_closed (minterpy.core.grid.grid property)": [[4, "minterpy.core.grid.Grid.is_downward_closed", false]], "is_downward_closed (minterpy.core.multi_index.multiindexset property)": [[6, "minterpy.core.multi_index.MultiIndexSet.is_downward_closed", false]], "is_downward_closed() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.is_downward_closed", false]], "is_index_contained() (in module minterpy.jit_compiled.multi_index)": [[19, "minterpy.jit_compiled.multi_index.is_index_contained", false]], "is_lex_smaller_or_equal() (in module minterpy.jit_compiled.multi_index)": [[19, "minterpy.jit_compiled.multi_index.is_lex_smaller_or_equal", false]], "is_lex_sorted() (in module minterpy.jit_compiled.multi_index)": [[19, "minterpy.jit_compiled.multi_index.is_lex_sorted", false]], "is_propsubset() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.is_propsubset", false]], "is_propsuperset() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.is_propsuperset", false]], "is_real_scalar() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.is_real_scalar", false]], "is_subset() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.is_subset", false]], "is_superset() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.is_superset", false]], "is_unique() (in module minterpy.utils.arrays)": [[24, "minterpy.utils.arrays.is_unique", false]], "lagrange_coeffs (minterpy.interpolation.interpolant property)": [[33, "minterpy.interpolation.Interpolant.lagrange_coeffs", false]], "lagrangepolynomial (class in minterpy.polynomials.lagrange_polynomial)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial", false]], "lagrangetocanonical (class in minterpy.transformations.lagrange)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical", false]], "lagrangetochebyshev (class in minterpy.transformations.lagrange)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev", false]], "lagrangetonewton (class in minterpy.transformations.lagrange)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton", false]], "lex_sort() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.lex_sort", false]], "list_insert_single() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.list_insert_single", false]], "loocv_error (minterpy.extras.regression.ordinary_regression.ordinaryregression property)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.loocv_error", false]], "lp_degree (minterpy.core.multi_index.multiindexset property)": [[6, "minterpy.core.multi_index.MultiIndexSet.lp_degree", false]], "lp_degree (minterpy.interpolation.interpolant property)": [[33, "minterpy.interpolation.Interpolant.lp_degree", false]], "lp_degree (minterpy.interpolation.interpolator attribute)": [[33, "minterpy.interpolation.Interpolator.lp_degree", false]], "lp_norm() (in module minterpy.utils.arrays)": [[24, "minterpy.utils.arrays.lp_norm", false]], "lp_sum() (in module minterpy.utils.arrays)": [[24, "minterpy.utils.arrays.lp_sum", false]], "make_coeffs_2d() (in module minterpy.utils.arrays)": [[24, "minterpy.utils.arrays.make_coeffs_2d", false]], "make_complete() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.make_complete", false]], "make_complete() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.make_complete", false]], "make_complete() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.make_complete", false]], "make_complete() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.make_complete", false]], "make_complete() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.make_complete", false]], "make_complete() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.make_complete", false]], "make_complete() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.make_complete", false]], "make_complete() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.make_complete", false]], "make_derivable() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.make_derivable", false]], "make_downward_closed() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.make_downward_closed", false]], "make_downward_closed() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.make_downward_closed", false]], "make_downward_closed() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.make_downward_closed", false]], "matrixoperator (class in minterpy.schemes.matrix_operator)": [[45, "minterpy.schemes.matrix_operator.MatrixOperator", false]], "max_exponent (minterpy.core.grid.grid property)": [[4, "minterpy.core.grid.Grid.max_exponent", false]], "max_exponent (minterpy.core.multi_index.multiindexset property)": [[6, "minterpy.core.multi_index.MultiIndexSet.max_exponent", false]], "max_exponents (minterpy.core.multi_index.multiindexset property)": [[6, "minterpy.core.multi_index.MultiIndexSet.max_exponents", false]], "merge() (minterpy.core.grid.grid method)": [[4, "minterpy.core.grid.Grid.merge", false]], "merging_fct() (minterpy.schemes.barycentric.operators.barycentricdictoperator method)": [[42, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.merging_fct", false]], "merging_fct() (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator method)": [[43, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.merging_fct", false]], "merging_fct() (minterpy.schemes.barycentric.operators.barycentricoperator static method)": [[41, "minterpy.schemes.barycentric.operators.BarycentricOperator.merging_fct", false]], "merging_fct() (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator method)": [[44, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.merging_fct", false]], "minterpy.core": [[5, "module-minterpy.core", false]], "minterpy.core.abc": [[3, "module-minterpy.core.ABC", false]], "minterpy.core.abc.multivariate_polynomial_abstract": [[1, "module-minterpy.core.ABC.multivariate_polynomial_abstract", false]], "minterpy.core.abc.operator_abstract": [[0, "module-minterpy.core.ABC.operator_abstract", false]], "minterpy.core.abc.transformation_abstract": [[2, "module-minterpy.core.ABC.transformation_abstract", false]], "minterpy.core.grid": [[4, "module-minterpy.core.grid", false]], "minterpy.core.multi_index": [[6, "module-minterpy.core.multi_index", false]], "minterpy.core.tree": [[7, "module-minterpy.core.tree", false]], "minterpy.dds": [[13, "module-minterpy.dds", false]], "minterpy.extras.regression": [[9, "module-minterpy.extras.regression", false]], "minterpy.extras.regression.ordinary_regression": [[10, "module-minterpy.extras.regression.ordinary_regression", false]], "minterpy.extras.regression.regression_abc": [[11, "module-minterpy.extras.regression.regression_abc", false]], "minterpy.gen_points": [[14, "module-minterpy.gen_points", false]], "minterpy.interpolation": [[33, "module-minterpy.interpolation", false]], "minterpy.jit_compiled": [[18, "module-minterpy.jit_compiled", false]], "minterpy.jit_compiled.canonical": [[16, "module-minterpy.jit_compiled.canonical", false]], "minterpy.jit_compiled.common": [[17, "module-minterpy.jit_compiled.common", false]], "minterpy.jit_compiled.multi_index": [[19, "module-minterpy.jit_compiled.multi_index", false]], "minterpy.jit_compiled.newton.diff": [[20, "module-minterpy.jit_compiled.newton.diff", false]], "minterpy.jit_compiled.newton.eval": [[21, "module-minterpy.jit_compiled.newton.eval", false]], "minterpy.jit_compiled.transformations": [[22, "module-minterpy.jit_compiled.transformations", false]], "minterpy.polynomials": [[36, "module-minterpy.polynomials", false]], "minterpy.polynomials.canonical_polynomial": [[34, "module-minterpy.polynomials.canonical_polynomial", false]], "minterpy.polynomials.chebyshev_polynomial": [[35, "module-minterpy.polynomials.chebyshev_polynomial", false]], "minterpy.polynomials.lagrange_polynomial": [[37, "module-minterpy.polynomials.lagrange_polynomial", false]], "minterpy.polynomials.newton_polynomial": [[38, "module-minterpy.polynomials.newton_polynomial", false]], "minterpy.schemes": [[39, "module-minterpy.schemes", false]], "minterpy.schemes.barycentric": [[40, "module-minterpy.schemes.barycentric", false]], "minterpy.schemes.barycentric.operators": [[41, "module-minterpy.schemes.barycentric.operators", false]], "minterpy.schemes.matrix_operator": [[45, "module-minterpy.schemes.matrix_operator", false]], "minterpy.transformations": [[46, "module-minterpy.transformations", false]], "minterpy.transformations.canonical": [[48, "module-minterpy.transformations.canonical", false]], "minterpy.transformations.chebyshev": [[49, "module-minterpy.transformations.chebyshev", false]], "minterpy.transformations.identity": [[50, "module-minterpy.transformations.identity", false]], "minterpy.transformations.interface": [[47, "module-minterpy.transformations.interface", false]], "minterpy.transformations.lagrange": [[51, "module-minterpy.transformations.lagrange", false]], "minterpy.transformations.newton": [[52, "module-minterpy.transformations.newton", false]], "minterpy.transformations.utils": [[23, "module-minterpy.transformations.utils", false]], "minterpy.utils": [[25, "module-minterpy.utils", false]], "minterpy.utils.arrays": [[24, "module-minterpy.utils.arrays", false]], "minterpy.utils.multi_index": [[26, "module-minterpy.utils.multi_index", false]], "minterpy.utils.polynomials.canonical": [[27, "module-minterpy.utils.polynomials.canonical", false]], "minterpy.utils.polynomials.chebyshev": [[28, "module-minterpy.utils.polynomials.chebyshev", false]], "minterpy.utils.polynomials.lagrange": [[29, "module-minterpy.utils.polynomials.lagrange", false]], "minterpy.utils.polynomials.newton": [[30, "module-minterpy.utils.polynomials.newton", false]], "minterpy.utils.quad": [[31, "module-minterpy.utils.quad", false]], "minterpy.utils.verification": [[32, "module-minterpy.utils.verification", false]], "module": [[0, "module-minterpy.core.ABC.operator_abstract", false], [1, "module-minterpy.core.ABC.multivariate_polynomial_abstract", false], [2, "module-minterpy.core.ABC.transformation_abstract", false], [3, "module-minterpy.core.ABC", false], [4, "module-minterpy.core.grid", false], [5, "module-minterpy.core", false], [6, "module-minterpy.core.multi_index", false], [7, "module-minterpy.core.tree", false], [9, "module-minterpy.extras.regression", false], [10, "module-minterpy.extras.regression.ordinary_regression", false], [11, "module-minterpy.extras.regression.regression_abc", false], [13, "module-minterpy.dds", false], [14, "module-minterpy.gen_points", false], [16, "module-minterpy.jit_compiled.canonical", false], [17, "module-minterpy.jit_compiled.common", false], [18, "module-minterpy.jit_compiled", false], [19, "module-minterpy.jit_compiled.multi_index", false], [20, "module-minterpy.jit_compiled.newton.diff", false], [21, "module-minterpy.jit_compiled.newton.eval", false], [22, "module-minterpy.jit_compiled.transformations", false], [23, "module-minterpy.transformations.utils", false], [24, "module-minterpy.utils.arrays", false], [25, "module-minterpy.utils", false], [26, "module-minterpy.utils.multi_index", false], [27, "module-minterpy.utils.polynomials.canonical", false], [28, "module-minterpy.utils.polynomials.chebyshev", false], [29, "module-minterpy.utils.polynomials.lagrange", false], [30, "module-minterpy.utils.polynomials.newton", false], [31, "module-minterpy.utils.quad", false], [32, "module-minterpy.utils.verification", false], [33, "module-minterpy.interpolation", false], [34, "module-minterpy.polynomials.canonical_polynomial", false], [35, "module-minterpy.polynomials.chebyshev_polynomial", false], [36, "module-minterpy.polynomials", false], [37, "module-minterpy.polynomials.lagrange_polynomial", false], [38, "module-minterpy.polynomials.newton_polynomial", false], [39, "module-minterpy.schemes", false], [40, "module-minterpy.schemes.barycentric", false], [41, "module-minterpy.schemes.barycentric.operators", false], [45, "module-minterpy.schemes.matrix_operator", false], [46, "module-minterpy.transformations", false], [47, "module-minterpy.transformations.interface", false], [48, "module-minterpy.transformations.canonical", false], [49, "module-minterpy.transformations.chebyshev", false], [50, "module-minterpy.transformations.identity", false], [51, "module-minterpy.transformations.lagrange", false], [52, "module-minterpy.transformations.newton", false]], "mul_newton() (in module minterpy.polynomials.newton_polynomial)": [[38, "minterpy.polynomials.newton_polynomial.mul_newton", false]], "multi_index (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc attribute)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.multi_index", false]], "multi_index (minterpy.core.abc.transformation_abstract.transformationabc property)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC.multi_index", false]], "multi_index (minterpy.core.grid.grid property)": [[4, "minterpy.core.grid.Grid.multi_index", false]], "multi_index (minterpy.core.tree.multiindextree property)": [[7, "minterpy.core.tree.MultiIndexTree.multi_index", false]], "multi_index (minterpy.extras.regression.ordinary_regression.ordinaryregression property)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.multi_index", false]], "multi_index (minterpy.interpolation.interpolator attribute)": [[33, "minterpy.interpolation.Interpolator.multi_index", false]], "multi_index (minterpy.transformations.canonical.canonicaltochebyshev property)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev.multi_index", false]], "multi_index (minterpy.transformations.canonical.canonicaltolagrange property)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange.multi_index", false]], "multi_index (minterpy.transformations.canonical.canonicaltonewton property)": [[48, "minterpy.transformations.canonical.CanonicalToNewton.multi_index", false]], "multi_index (minterpy.transformations.chebyshev.chebyshevtocanonical property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical.multi_index", false]], "multi_index (minterpy.transformations.chebyshev.chebyshevtolagrange property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange.multi_index", false]], "multi_index (minterpy.transformations.chebyshev.chebyshevtonewton property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton.multi_index", false]], "multi_index (minterpy.transformations.identity.identity property)": [[50, "minterpy.transformations.identity.Identity.multi_index", false]], "multi_index (minterpy.transformations.lagrange.lagrangetocanonical property)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical.multi_index", false]], "multi_index (minterpy.transformations.lagrange.lagrangetochebyshev property)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev.multi_index", false]], "multi_index (minterpy.transformations.lagrange.lagrangetonewton property)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton.multi_index", false]], "multi_index (minterpy.transformations.newton.newtontocanonical property)": [[52, "minterpy.transformations.newton.NewtonToCanonical.multi_index", false]], "multi_index (minterpy.transformations.newton.newtontochebyshev property)": [[52, "minterpy.transformations.newton.NewtonToChebyshev.multi_index", false]], "multi_index (minterpy.transformations.newton.newtontolagrange property)": [[52, "minterpy.transformations.newton.NewtonToLagrange.multi_index", false]], "multiindexset (class in minterpy.core.multi_index)": [[6, "minterpy.core.multi_index.MultiIndexSet", false]], "multiindextree (class in minterpy.core.tree)": [[7, "minterpy.core.tree.MultiIndexTree", false]], "multiply() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.multiply", false]], "multiply_indices() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.multiply_indices", false]], "multivariatepolynomialabc (class in minterpy.core.abc.multivariate_polynomial_abstract)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC", false]], "multivariatepolynomialsingleabc (class in minterpy.core.abc.multivariate_polynomial_abstract)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC", false]], "n_choose_r() (in module minterpy.jit_compiled.common)": [[17, "minterpy.jit_compiled.common.n_choose_r", false]], "newtonpolynomial (class in minterpy.polynomials.newton_polynomial)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial", false]], "newtontocanonical (class in minterpy.transformations.newton)": [[52, "minterpy.transformations.newton.NewtonToCanonical", false]], "newtontochebyshev (class in minterpy.transformations.newton)": [[52, "minterpy.transformations.newton.NewtonToChebyshev", false]], "newtontolagrange (class in minterpy.transformations.newton)": [[52, "minterpy.transformations.newton.NewtonToLagrange", false]], "num_active_monomials (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc property)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.num_active_monomials", false]], "num_active_monomials (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc property)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.num_active_monomials", false]], "num_active_monomials (minterpy.polynomials.canonical_polynomial.canonicalpolynomial property)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.num_active_monomials", false]], "num_active_monomials (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial property)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.num_active_monomials", false]], "num_active_monomials (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial property)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.num_active_monomials", false]], "num_active_monomials (minterpy.polynomials.newton_polynomial.newtonpolynomial property)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.num_active_monomials", false]], "operatorabc (class in minterpy.core.abc.operator_abstract)": [[0, "minterpy.core.ABC.operator_abstract.OperatorABC", false]], "ordinaryregression (class in minterpy.extras.regression.ordinary_regression)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression", false]], "origin_poly (minterpy.extras.regression.ordinary_regression.ordinaryregression property)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.origin_poly", false]], "origin_type (minterpy.core.abc.transformation_abstract.transformationabc property)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC.origin_type", false]], "origin_type (minterpy.transformations.canonical.canonicaltochebyshev attribute)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev.origin_type", false]], "origin_type (minterpy.transformations.canonical.canonicaltolagrange attribute)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange.origin_type", false]], "origin_type (minterpy.transformations.canonical.canonicaltonewton attribute)": [[48, "minterpy.transformations.canonical.CanonicalToNewton.origin_type", false]], "origin_type (minterpy.transformations.chebyshev.chebyshevtocanonical attribute)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical.origin_type", false]], "origin_type (minterpy.transformations.chebyshev.chebyshevtolagrange attribute)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange.origin_type", false]], "origin_type (minterpy.transformations.chebyshev.chebyshevtonewton attribute)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton.origin_type", false]], "origin_type (minterpy.transformations.identity.identity attribute)": [[50, "minterpy.transformations.identity.Identity.origin_type", false]], "origin_type (minterpy.transformations.lagrange.lagrangetocanonical attribute)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical.origin_type", false]], "origin_type (minterpy.transformations.lagrange.lagrangetochebyshev attribute)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev.origin_type", false]], "origin_type (minterpy.transformations.lagrange.lagrangetonewton attribute)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton.origin_type", false]], "origin_type (minterpy.transformations.newton.newtontocanonical attribute)": [[52, "minterpy.transformations.newton.NewtonToCanonical.origin_type", false]], "origin_type (minterpy.transformations.newton.newtontochebyshev attribute)": [[52, "minterpy.transformations.newton.NewtonToChebyshev.origin_type", false]], "origin_type (minterpy.transformations.newton.newtontolagrange attribute)": [[52, "minterpy.transformations.newton.NewtonToLagrange.origin_type", false]], "partial_diff() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.partial_diff", false]], "partial_diff() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.partial_diff", false]], "partial_diff() (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial method)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.partial_diff", false]], "partial_diff() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.partial_diff", false]], "partial_diff() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.partial_diff", false]], "partial_diff_newton() (in module minterpy.polynomials.newton_polynomial)": [[38, "minterpy.polynomials.newton_polynomial.partial_diff_newton", false]], "pep 3119": [[1, "index-0", false]], "poly_degree (minterpy.core.multi_index.multiindexset property)": [[6, "minterpy.core.multi_index.MultiIndexSet.poly_degree", false]], "poly_degree (minterpy.interpolation.interpolant property)": [[33, "minterpy.interpolation.Interpolant.poly_degree", false]], "poly_degree (minterpy.interpolation.interpolator attribute)": [[33, "minterpy.interpolation.Interpolator.poly_degree", false]], "predict() (minterpy.extras.regression.ordinary_regression.ordinaryregression method)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.predict", false]], "predict() (minterpy.extras.regression.regression_abc.regressionabc method)": [[11, "minterpy.extras.regression.regression_abc.RegressionABC.predict", false]], "python enhancement proposals": [[1, "index-0", false]], "regfit_l2_error (minterpy.extras.regression.ordinary_regression.ordinaryregression property)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.regfit_l2_error", false]], "regfit_linf_error (minterpy.extras.regression.ordinary_regression.ordinaryregression property)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.regfit_linf_error", false]], "regressionabc (class in minterpy.extras.regression.regression_abc)": [[11, "minterpy.extras.regression.regression_abc.RegressionABC", false]], "search_lex_sorted() (in module minterpy.jit_compiled.multi_index)": [[19, "minterpy.jit_compiled.multi_index.search_lex_sorted", false]], "shape_eval_output() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.shape_eval_output", false]], "show() (minterpy.extras.regression.ordinary_regression.ordinaryregression method)": [[10, "minterpy.extras.regression.ordinary_regression.OrdinaryRegression.show", false]], "show() (minterpy.extras.regression.regression_abc.regressionabc method)": [[11, "minterpy.extras.regression.regression_abc.RegressionABC.show", false]], "spatial_dimension (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc property)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.spatial_dimension", false]], "spatial_dimension (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc property)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.spatial_dimension", false]], "spatial_dimension (minterpy.core.grid.grid property)": [[4, "minterpy.core.grid.Grid.spatial_dimension", false]], "spatial_dimension (minterpy.core.multi_index.multiindexset property)": [[6, "minterpy.core.multi_index.MultiIndexSet.spatial_dimension", false]], "spatial_dimension (minterpy.interpolation.interpolant property)": [[33, "minterpy.interpolation.Interpolant.spatial_dimension", false]], "spatial_dimension (minterpy.interpolation.interpolator attribute)": [[33, "minterpy.interpolation.Interpolator.spatial_dimension", false]], "spatial_dimension (minterpy.polynomials.canonical_polynomial.canonicalpolynomial property)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.spatial_dimension", false]], "spatial_dimension (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial property)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.spatial_dimension", false]], "spatial_dimension (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial property)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.spatial_dimension", false]], "spatial_dimension (minterpy.polynomials.newton_polynomial.newtonpolynomial property)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.spatial_dimension", false]], "stored_masks (minterpy.core.tree.multiindextree property)": [[7, "minterpy.core.tree.MultiIndexTree.stored_masks", false]], "target_type (minterpy.core.abc.transformation_abstract.transformationabc property)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC.target_type", false]], "target_type (minterpy.transformations.canonical.canonicaltochebyshev attribute)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev.target_type", false]], "target_type (minterpy.transformations.canonical.canonicaltolagrange attribute)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange.target_type", false]], "target_type (minterpy.transformations.canonical.canonicaltonewton attribute)": [[48, "minterpy.transformations.canonical.CanonicalToNewton.target_type", false]], "target_type (minterpy.transformations.chebyshev.chebyshevtocanonical attribute)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical.target_type", false]], "target_type (minterpy.transformations.chebyshev.chebyshevtolagrange attribute)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange.target_type", false]], "target_type (minterpy.transformations.chebyshev.chebyshevtonewton attribute)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton.target_type", false]], "target_type (minterpy.transformations.identity.identity attribute)": [[50, "minterpy.transformations.identity.Identity.target_type", false]], "target_type (minterpy.transformations.lagrange.lagrangetocanonical attribute)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical.target_type", false]], "target_type (minterpy.transformations.lagrange.lagrangetochebyshev attribute)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev.target_type", false]], "target_type (minterpy.transformations.lagrange.lagrangetonewton attribute)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton.target_type", false]], "target_type (minterpy.transformations.newton.newtontocanonical attribute)": [[52, "minterpy.transformations.newton.NewtonToCanonical.target_type", false]], "target_type (minterpy.transformations.newton.newtontochebyshev attribute)": [[52, "minterpy.transformations.newton.NewtonToChebyshev.target_type", false]], "target_type (minterpy.transformations.newton.newtontolagrange attribute)": [[52, "minterpy.transformations.newton.NewtonToLagrange.target_type", false]], "to_canonical() (minterpy.interpolation.interpolant method)": [[33, "minterpy.interpolation.Interpolant.to_canonical", false]], "to_chebyshev() (minterpy.interpolation.interpolant method)": [[33, "minterpy.interpolation.Interpolant.to_chebyshev", false]], "to_lagrange() (minterpy.interpolation.interpolant method)": [[33, "minterpy.interpolation.Interpolant.to_lagrange", false]], "to_newton() (minterpy.interpolation.interpolant method)": [[33, "minterpy.interpolation.Interpolant.to_newton", false]], "transformation_fct() (minterpy.schemes.barycentric.operators.barycentricdictoperator method)": [[42, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.transformation_fct", false]], "transformation_fct() (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator method)": [[43, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.transformation_fct", false]], "transformation_fct() (minterpy.schemes.barycentric.operators.barycentricoperator static method)": [[41, "minterpy.schemes.barycentric.operators.BarycentricOperator.transformation_fct", false]], "transformation_fct() (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator method)": [[44, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.transformation_fct", false]], "transformation_operator (minterpy.core.abc.transformation_abstract.transformationabc property)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC.transformation_operator", false]], "transformation_operator (minterpy.transformations.canonical.canonicaltochebyshev property)": [[48, "minterpy.transformations.canonical.CanonicalToChebyshev.transformation_operator", false]], "transformation_operator (minterpy.transformations.canonical.canonicaltolagrange property)": [[48, "minterpy.transformations.canonical.CanonicalToLagrange.transformation_operator", false]], "transformation_operator (minterpy.transformations.canonical.canonicaltonewton property)": [[48, "minterpy.transformations.canonical.CanonicalToNewton.transformation_operator", false]], "transformation_operator (minterpy.transformations.chebyshev.chebyshevtocanonical property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToCanonical.transformation_operator", false]], "transformation_operator (minterpy.transformations.chebyshev.chebyshevtolagrange property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToLagrange.transformation_operator", false]], "transformation_operator (minterpy.transformations.chebyshev.chebyshevtonewton property)": [[49, "minterpy.transformations.chebyshev.ChebyshevToNewton.transformation_operator", false]], "transformation_operator (minterpy.transformations.identity.identity property)": [[50, "minterpy.transformations.identity.Identity.transformation_operator", false]], "transformation_operator (minterpy.transformations.lagrange.lagrangetocanonical property)": [[51, "minterpy.transformations.lagrange.LagrangeToCanonical.transformation_operator", false]], "transformation_operator (minterpy.transformations.lagrange.lagrangetochebyshev property)": [[51, "minterpy.transformations.lagrange.LagrangeToChebyshev.transformation_operator", false]], "transformation_operator (minterpy.transformations.lagrange.lagrangetonewton property)": [[51, "minterpy.transformations.lagrange.LagrangeToNewton.transformation_operator", false]], "transformation_operator (minterpy.transformations.newton.newtontocanonical property)": [[52, "minterpy.transformations.newton.NewtonToCanonical.transformation_operator", false]], "transformation_operator (minterpy.transformations.newton.newtontochebyshev property)": [[52, "minterpy.transformations.newton.NewtonToChebyshev.transformation_operator", false]], "transformation_operator (minterpy.transformations.newton.newtontolagrange property)": [[52, "minterpy.transformations.newton.NewtonToLagrange.transformation_operator", false]], "transformationabc (class in minterpy.core.abc.transformation_abstract)": [[2, "minterpy.core.ABC.transformation_abstract.TransformationABC", false]], "tree (minterpy.core.grid.grid property)": [[4, "minterpy.core.grid.Grid.tree", false]], "union() (minterpy.core.multi_index.multiindexset method)": [[6, "minterpy.core.multi_index.MultiIndexSet.union", false]], "union_indices() (in module minterpy.utils.multi_index)": [[26, "minterpy.utils.multi_index.union_indices", false]], "unique_indices() (in module minterpy.jit_compiled.multi_index)": [[19, "minterpy.jit_compiled.multi_index.unique_indices", false]], "unisolvent_nodes (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc property)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc property)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.core.grid.grid property)": [[4, "minterpy.core.grid.Grid.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.polynomials.canonical_polynomial.canonicalpolynomial property)": [[34, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.polynomials.chebyshev_polynomial.chebyshevpolynomial property)": [[35, "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial property)": [[37, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.polynomials.newton_polynomial.newtonpolynomial property)": [[38, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.unisolvent_nodes", false]], "user_domain (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc attribute)": [[1, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.user_domain", false]], "verify_domain() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.verify_domain", false]], "verify_lp_degree() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.verify_lp_degree", false]], "verify_poly_coeffs() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.verify_poly_coeffs", false]], "verify_poly_degree() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.verify_poly_degree", false]], "verify_poly_domain() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.verify_poly_domain", false]], "verify_poly_power() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.verify_poly_power", false]], "verify_query_points() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.verify_query_points", false]], "verify_spatial_dimension() (in module minterpy.utils.verification)": [[32, "minterpy.utils.verification.verify_spatial_dimension", false]]}, "objects": {"minterpy": [[5, 0, 0, "-", "core"], [13, 0, 0, "-", "dds"], [14, 0, 0, "-", "gen_points"], [33, 0, 0, "-", "interpolation"], [18, 0, 0, "-", "jit_compiled"], [36, 0, 0, "-", "polynomials"], [39, 0, 0, "-", "schemes"], [46, 0, 0, "-", "transformations"], [25, 0, 0, "-", "utils"]], "minterpy.core": [[3, 0, 0, "-", "ABC"], [4, 0, 0, "-", "grid"], [6, 0, 0, "-", "multi_index"], [7, 0, 0, "-", "tree"]], "minterpy.core.ABC": [[1, 0, 0, "-", "multivariate_polynomial_abstract"], [0, 0, 0, "-", "operator_abstract"], [2, 0, 0, "-", "transformation_abstract"]], "minterpy.core.ABC.multivariate_polynomial_abstract": [[1, 1, 1, "", "MultivariatePolynomialABC"], [1, 1, 1, "", "MultivariatePolynomialSingleABC"]], "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC": [[1, 2, 1, "", "__call__"], [1, 3, 1, "", "__weakref__"], [1, 2, 1, "", "_eval"], [1, 4, 1, "", "coeffs"], [1, 4, 1, "", "num_active_monomials"], [1, 4, 1, "", "spatial_dimension"], [1, 4, 1, "", "unisolvent_nodes"]], "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC": [[1, 2, 1, "", "__add__"], [1, 2, 1, "", "__call__"], [1, 2, 1, "", "__copy__"], [1, 2, 1, "", "__deepcopy__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__floordiv__"], [1, 3, 1, "", "__hash__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__len__"], [1, 2, 1, "", "__mul__"], [1, 2, 1, "", "__neg__"], [1, 2, 1, "", "__pos__"], [1, 2, 1, "", "__pow__"], [1, 2, 1, "", "__radd__"], [1, 2, 1, "", "__rmul__"], [1, 2, 1, "", "__rsub__"], [1, 2, 1, "", "__sub__"], [1, 2, 1, "", "__truediv__"], [1, 3, 1, "", "__weakref__"], [1, 2, 1, "", "_diff"], [1, 2, 1, "", "_eval"], [1, 2, 1, "", "_gen_grid_default"], [1, 2, 1, "", "_integrate_over"], [1, 2, 1, "", "_match_dims"], [1, 2, 1, "", "_new_instance_if_necessary"], [1, 2, 1, "", "_partial_diff"], [1, 2, 1, "", "_verify_operands"], [1, 2, 1, "", "add_points"], [1, 4, 1, "", "coeffs"], [1, 2, 1, "", "diff"], [1, 2, 1, "", "expand_dim"], [1, 2, 1, "", "from_degree"], [1, 2, 1, "", "from_grid"], [1, 2, 1, "", "from_poly"], [1, 2, 1, "", "has_matching_dimension"], [1, 2, 1, "", "has_matching_domain"], [1, 2, 1, "", "integrate_over"], [1, 3, 1, "", "internal_domain"], [1, 2, 1, "", "make_complete"], [1, 3, 1, "", "multi_index"], [1, 4, 1, "", "num_active_monomials"], [1, 2, 1, "", "partial_diff"], [1, 4, 1, "", "spatial_dimension"], [1, 4, 1, "", "unisolvent_nodes"], [1, 3, 1, "", "user_domain"]], "minterpy.core.ABC.operator_abstract": [[0, 1, 1, "", "OperatorABC"]], "minterpy.core.ABC.operator_abstract.OperatorABC": [[0, 2, 1, "", "__matmul__"], [0, 2, 1, "", "_get_array_repr"], [0, 4, 1, "", "array_repr_full"], [0, 4, 1, "", "array_repr_sparse"]], "minterpy.core.ABC.transformation_abstract": [[2, 1, 1, "", "TransformationABC"]], "minterpy.core.ABC.transformation_abstract.TransformationABC": [[2, 2, 1, "", "__call__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "__init_subclass__"], [2, 3, 1, "", "__weakref__"], [2, 2, 1, "", "_apply_transformation"], [2, 2, 1, "", "_get_transformation_operator"], [2, 4, 1, "", "_target_indices"], [2, 4, 1, "", "grid"], [2, 4, 1, "", "multi_index"], [2, 4, 1, "", "origin_type"], [2, 4, 1, "", "target_type"], [2, 4, 1, "", "transformation_operator"]], "minterpy.core.grid": [[4, 1, 1, "", "Grid"]], "minterpy.core.grid.Grid": [[4, 2, 1, "", "__call__"], [4, 2, 1, "", "__copy__"], [4, 2, 1, "", "__deepcopy__"], [4, 2, 1, "", "__eq__"], [4, 3, 1, "", "__hash__"], [4, 2, 1, "", "__mul__"], [4, 2, 1, "", "__or__"], [4, 3, 1, "", "__weakref__"], [4, 2, 1, "", "_create_generating_points"], [4, 2, 1, "", "_new_instance"], [4, 2, 1, "", "_verify_generating_points"], [4, 2, 1, "", "_verify_grid_max_exponent"], [4, 2, 1, "", "_verify_matching_gen_function_and_points"], [4, 2, 1, "", "add_exponents"], [4, 2, 1, "", "expand_dim"], [4, 2, 1, "", "from_degree"], [4, 2, 1, "", "from_function"], [4, 2, 1, "", "from_points"], [4, 2, 1, "", "from_value_set"], [4, 4, 1, "", "generating_function"], [4, 4, 1, "", "generating_points"], [4, 4, 1, "", "has_generating_function"], [4, 2, 1, "", "is_compatible"], [4, 4, 1, "", "is_complete"], [4, 4, 1, "", "is_downward_closed"], [4, 2, 1, "", "make_complete"], [4, 2, 1, "", "make_downward_closed"], [4, 4, 1, "", "max_exponent"], [4, 2, 1, "", "merge"], [4, 4, 1, "", "multi_index"], [4, 4, 1, "", "spatial_dimension"], [4, 4, 1, "", "tree"], [4, 4, 1, "", "unisolvent_nodes"]], "minterpy.core.multi_index": [[6, 1, 1, "", "MultiIndexSet"]], "minterpy.core.multi_index.MultiIndexSet": [[6, 2, 1, "", "__contains__"], [6, 2, 1, "", "__deepcopy__"], [6, 2, 1, "", "__eq__"], [6, 2, 1, "", "__ge__"], [6, 2, 1, "", "__gt__"], [6, 3, 1, "", "__hash__"], [6, 2, 1, "", "__imul__"], [6, 2, 1, "", "__ior__"], [6, 2, 1, "", "__le__"], [6, 2, 1, "", "__len__"], [6, 2, 1, "", "__lt__"], [6, 2, 1, "", "__mul__"], [6, 2, 1, "", "__or__"], [6, 2, 1, "", "__repr__"], [6, 2, 1, "", "__str__"], [6, 3, 1, "", "__weakref__"], [6, 2, 1, "", "add_exponents"], [6, 2, 1, "", "contains_these_exponents"], [6, 2, 1, "", "expand_dim"], [6, 4, 1, "", "exponents"], [6, 2, 1, "", "from_degree"], [6, 4, 1, "", "is_complete"], [6, 2, 1, "", "is_disjoint"], [6, 4, 1, "", "is_downward_closed"], [6, 2, 1, "", "is_propsubset"], [6, 2, 1, "", "is_propsuperset"], [6, 2, 1, "", "is_subset"], [6, 2, 1, "", "is_superset"], [6, 4, 1, "", "lp_degree"], [6, 2, 1, "", "make_complete"], [6, 2, 1, "", "make_downward_closed"], [6, 4, 1, "", "max_exponent"], [6, 4, 1, "", "max_exponents"], [6, 2, 1, "", "multiply"], [6, 4, 1, "", "poly_degree"], [6, 4, 1, "", "spatial_dimension"], [6, 2, 1, "", "union"]], "minterpy.core.tree": [[7, 1, 1, "", "MultiIndexTree"]], "minterpy.core.tree.MultiIndexTree": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "__weakref__"], [7, 4, 1, "", "multi_index"], [7, 4, 1, "", "stored_masks"]], "minterpy.extras": [[9, 0, 0, "-", "regression"]], "minterpy.extras.regression": [[10, 0, 0, "-", "ordinary_regression"], [11, 0, 0, "-", "regression_abc"]], "minterpy.extras.regression.ordinary_regression": [[10, 1, 1, "", "OrdinaryRegression"]], "minterpy.extras.regression.ordinary_regression.OrdinaryRegression": [[10, 4, 1, "", "coeffs"], [10, 4, 1, "", "eval_poly"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "get_regression_matrix"], [10, 4, 1, "", "grid"], [10, 4, 1, "", "loocv_error"], [10, 4, 1, "", "multi_index"], [10, 4, 1, "", "origin_poly"], [10, 2, 1, "", "predict"], [10, 4, 1, "", "regfit_l2_error"], [10, 4, 1, "", "regfit_linf_error"], [10, 2, 1, "", "show"]], "minterpy.extras.regression.regression_abc": [[11, 1, 1, "", "RegressionABC"]], "minterpy.extras.regression.regression_abc.RegressionABC": [[11, 2, 1, "", "__call__"], [11, 3, 1, "", "__weakref__"], [11, 2, 1, "", "fit"], [11, 2, 1, "", "predict"], [11, 2, 1, "", "show"]], "minterpy.gen_points": [[14, 5, 1, "", "chebychev_2nd_order"], [14, 5, 1, "", "gen_chebychev_2nd_order_leja_ordered"], [14, 5, 1, "", "gen_points_chebyshev"], [14, 5, 1, "", "gen_points_from_values"]], "minterpy.interpolation": [[33, 1, 1, "", "Interpolant"], [33, 1, 1, "", "Interpolator"], [33, 5, 1, "", "interpolate"]], "minterpy.interpolation.Interpolant": [[33, 3, 1, "", "fct"], [33, 2, 1, "", "from_degree"], [33, 3, 1, "", "interpolator"], [33, 4, 1, "", "lagrange_coeffs"], [33, 4, 1, "", "lp_degree"], [33, 4, 1, "", "poly_degree"], [33, 4, 1, "", "spatial_dimension"], [33, 2, 1, "", "to_canonical"], [33, 2, 1, "", "to_chebyshev"], [33, 2, 1, "", "to_lagrange"], [33, 2, 1, "", "to_newton"]], "minterpy.interpolation.Interpolator": [[33, 3, 1, "", "grid"], [33, 3, 1, "", "lp_degree"], [33, 3, 1, "", "multi_index"], [33, 3, 1, "", "poly_degree"], [33, 3, 1, "", "spatial_dimension"]], "minterpy.jit_compiled": [[16, 0, 0, "-", "canonical"], [17, 0, 0, "-", "common"], [19, 0, 0, "-", "multi_index"], [22, 0, 0, "-", "transformations"]], "minterpy.jit_compiled.canonical": [[16, 5, 1, "", "can_eval_mult"], [16, 5, 1, "", "compute_coeffs_poly_prod"]], "minterpy.jit_compiled.common": [[17, 5, 1, "", "combinations_iter"], [17, 5, 1, "", "dot"], [17, 5, 1, "", "get_max_columnwise"], [17, 5, 1, "", "n_choose_r"]], "minterpy.jit_compiled.multi_index": [[19, 5, 1, "", "all_indices_are_contained"], [19, 5, 1, "", "cross_and_sum"], [19, 5, 1, "", "fill_match_positions"], [19, 5, 1, "", "is_index_contained"], [19, 5, 1, "", "is_lex_smaller_or_equal"], [19, 5, 1, "", "is_lex_sorted"], [19, 5, 1, "", "search_lex_sorted"], [19, 5, 1, "", "unique_indices"]], "minterpy.jit_compiled.newton": [[20, 0, 0, "-", "diff"], [21, 0, 0, "-", "eval"]], "minterpy.jit_compiled.newton.diff": [[20, 5, 1, "", "compute_monomials_from_lut"], [20, 5, 1, "", "create_lua_differentiated"], [20, 5, 1, "", "create_lut_difference"], [20, 5, 1, "", "create_lut_differentiated"], [20, 5, 1, "", "eval_monomials_single_query"], [20, 5, 1, "", "eval_multiple_query"], [20, 5, 1, "", "eval_multiple_query_par"]], "minterpy.jit_compiled.newton.eval": [[21, 5, 1, "", "eval_newton_monomials_multiple"], [21, 5, 1, "", "eval_newton_monomials_single"]], "minterpy.jit_compiled.transformations": [[22, 5, 1, "", "compute_vandermonde_n2c"]], "minterpy.polynomials": [[34, 0, 0, "-", "canonical_polynomial"], [35, 0, 0, "-", "chebyshev_polynomial"], [37, 0, 0, "-", "lagrange_polynomial"], [38, 0, 0, "-", "newton_polynomial"]], "minterpy.polynomials.canonical_polynomial": [[34, 1, 1, "", "CanonicalPolynomial"]], "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial": [[34, 2, 1, "", "__add__"], [34, 2, 1, "", "__call__"], [34, 2, 1, "", "__copy__"], [34, 2, 1, "", "__deepcopy__"], [34, 2, 1, "", "__eq__"], [34, 2, 1, "", "__floordiv__"], [34, 3, 1, "", "__hash__"], [34, 2, 1, "", "__init__"], [34, 2, 1, "", "__len__"], [34, 2, 1, "", "__mul__"], [34, 2, 1, "", "__neg__"], [34, 2, 1, "", "__pos__"], [34, 2, 1, "", "__pow__"], [34, 2, 1, "", "__radd__"], [34, 2, 1, "", "__rmul__"], [34, 2, 1, "", "__rsub__"], [34, 2, 1, "", "__sub__"], [34, 2, 1, "", "__truediv__"], [34, 3, 1, "", "__weakref__"], [34, 2, 1, "", "_add"], [34, 2, 1, "", "_diff"], [34, 2, 1, "", "_div"], [34, 2, 1, "", "_eval"], [34, 2, 1, "", "_gen_grid_default"], [34, 2, 1, "", "_integrate_over"], [34, 2, 1, "", "_match_dims"], [34, 2, 1, "", "_mul"], [34, 2, 1, "", "_new_instance_if_necessary"], [34, 2, 1, "", "_partial_diff"], [34, 2, 1, "", "_pow"], [34, 2, 1, "", "_scalar_add"], [34, 2, 1, "", "_sub"], [34, 2, 1, "", "_verify_operands"], [34, 2, 1, "", "add_points"], [34, 4, 1, "", "coeffs"], [34, 2, 1, "", "diff"], [34, 2, 1, "", "expand_dim"], [34, 2, 1, "", "from_degree"], [34, 2, 1, "", "from_grid"], [34, 2, 1, "", "from_poly"], [34, 2, 1, "", "generate_internal_domain"], [34, 2, 1, "", "generate_user_domain"], [34, 2, 1, "", "has_matching_dimension"], [34, 2, 1, "", "has_matching_domain"], [34, 2, 1, "", "integrate_over"], [34, 2, 1, "", "make_complete"], [34, 4, 1, "", "num_active_monomials"], [34, 2, 1, "", "partial_diff"], [34, 4, 1, "", "spatial_dimension"], [34, 4, 1, "", "unisolvent_nodes"]], "minterpy.polynomials.chebyshev_polynomial": [[35, 1, 1, "", "ChebyshevPolynomial"]], "minterpy.polynomials.chebyshev_polynomial.ChebyshevPolynomial": [[35, 2, 1, "", "__add__"], [35, 2, 1, "", "__call__"], [35, 2, 1, "", "__copy__"], [35, 2, 1, "", "__deepcopy__"], [35, 2, 1, "", "__eq__"], [35, 2, 1, "", "__floordiv__"], [35, 3, 1, "", "__hash__"], [35, 2, 1, "", "__init__"], [35, 2, 1, "", "__len__"], [35, 2, 1, "", "__mul__"], [35, 2, 1, "", "__neg__"], [35, 2, 1, "", "__pos__"], [35, 2, 1, "", "__pow__"], [35, 2, 1, "", "__radd__"], [35, 2, 1, "", "__rmul__"], [35, 2, 1, "", "__rsub__"], [35, 2, 1, "", "__sub__"], [35, 2, 1, "", "__truediv__"], [35, 3, 1, "", "__weakref__"], [35, 2, 1, "", "_add"], [35, 2, 1, "", "_diff"], [35, 2, 1, "", "_div"], [35, 2, 1, "", "_eval"], [35, 2, 1, "", "_gen_grid_default"], [35, 2, 1, "", "_integrate_over"], [35, 2, 1, "", "_match_dims"], [35, 2, 1, "", "_mul"], [35, 2, 1, "", "_new_instance_if_necessary"], [35, 2, 1, "", "_partial_diff"], [35, 2, 1, "", "_pow"], [35, 2, 1, "", "_scalar_add"], [35, 2, 1, "", "_sub"], [35, 2, 1, "", "_verify_operands"], [35, 2, 1, "", "add_points"], [35, 4, 1, "", "coeffs"], [35, 2, 1, "", "diff"], [35, 2, 1, "", "expand_dim"], [35, 2, 1, "", "from_degree"], [35, 2, 1, "", "from_grid"], [35, 2, 1, "", "from_poly"], [35, 2, 1, "", "generate_internal_domain"], [35, 2, 1, "", "generate_user_domain"], [35, 2, 1, "", "has_matching_dimension"], [35, 2, 1, "", "has_matching_domain"], [35, 2, 1, "", "integrate_over"], [35, 2, 1, "", "make_complete"], [35, 4, 1, "", "num_active_monomials"], [35, 2, 1, "", "partial_diff"], [35, 4, 1, "", "spatial_dimension"], [35, 4, 1, "", "unisolvent_nodes"]], "minterpy.polynomials.lagrange_polynomial": [[37, 1, 1, "", "LagrangePolynomial"]], "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial": [[37, 2, 1, "", "__add__"], [37, 2, 1, "", "__call__"], [37, 2, 1, "", "__copy__"], [37, 2, 1, "", "__deepcopy__"], [37, 2, 1, "", "__eq__"], [37, 2, 1, "", "__floordiv__"], [37, 3, 1, "", "__hash__"], [37, 2, 1, "", "__init__"], [37, 2, 1, "", "__len__"], [37, 2, 1, "", "__mul__"], [37, 2, 1, "", "__neg__"], [37, 2, 1, "", "__pos__"], [37, 2, 1, "", "__pow__"], [37, 2, 1, "", "__radd__"], [37, 2, 1, "", "__rmul__"], [37, 2, 1, "", "__rsub__"], [37, 2, 1, "", "__sub__"], [37, 2, 1, "", "__truediv__"], [37, 3, 1, "", "__weakref__"], [37, 2, 1, "", "_add"], [37, 2, 1, "", "_diff"], [37, 2, 1, "", "_div"], [37, 2, 1, "", "_eval"], [37, 2, 1, "", "_gen_grid_default"], [37, 2, 1, "", "_integrate_over"], [37, 2, 1, "", "_match_dims"], [37, 2, 1, "", "_mul"], [37, 2, 1, "", "_new_instance_if_necessary"], [37, 2, 1, "", "_partial_diff"], [37, 2, 1, "", "_pow"], [37, 2, 1, "", "_scalar_add"], [37, 2, 1, "", "_sub"], [37, 2, 1, "", "_verify_operands"], [37, 2, 1, "", "add_points"], [37, 4, 1, "", "coeffs"], [37, 2, 1, "", "diff"], [37, 2, 1, "", "expand_dim"], [37, 2, 1, "", "from_degree"], [37, 2, 1, "", "from_grid"], [37, 2, 1, "", "from_poly"], [37, 2, 1, "", "generate_internal_domain"], [37, 2, 1, "", "generate_user_domain"], [37, 2, 1, "", "has_matching_dimension"], [37, 2, 1, "", "has_matching_domain"], [37, 2, 1, "", "integrate_over"], [37, 2, 1, "", "make_complete"], [37, 4, 1, "", "num_active_monomials"], [37, 2, 1, "", "partial_diff"], [37, 4, 1, "", "spatial_dimension"], [37, 4, 1, "", "unisolvent_nodes"]], "minterpy.polynomials.newton_polynomial": [[38, 1, 1, "", "NewtonPolynomial"], [38, 5, 1, "", "add_newton"], [38, 5, 1, "", "diff_newton"], [38, 5, 1, "", "eval_newton"], [38, 5, 1, "", "integrate_over_newton"], [38, 5, 1, "", "mul_newton"], [38, 5, 1, "", "partial_diff_newton"]], "minterpy.polynomials.newton_polynomial.NewtonPolynomial": [[38, 2, 1, "", "__add__"], [38, 2, 1, "", "__call__"], [38, 2, 1, "", "__copy__"], [38, 2, 1, "", "__deepcopy__"], [38, 2, 1, "", "__eq__"], [38, 2, 1, "", "__floordiv__"], [38, 3, 1, "", "__hash__"], [38, 2, 1, "", "__init__"], [38, 2, 1, "", "__len__"], [38, 2, 1, "", "__mul__"], [38, 2, 1, "", "__neg__"], [38, 2, 1, "", "__pos__"], [38, 2, 1, "", "__pow__"], [38, 2, 1, "", "__radd__"], [38, 2, 1, "", "__rmul__"], [38, 2, 1, "", "__rsub__"], [38, 2, 1, "", "__sub__"], [38, 2, 1, "", "__truediv__"], [38, 3, 1, "", "__weakref__"], [38, 2, 1, "", "_add"], [38, 2, 1, "", "_diff"], [38, 2, 1, "", "_div"], [38, 2, 1, "", "_eval"], [38, 2, 1, "", "_gen_grid_default"], [38, 2, 1, "", "_integrate_over"], [38, 2, 1, "", "_match_dims"], [38, 2, 1, "", "_mul"], [38, 2, 1, "", "_new_instance_if_necessary"], [38, 2, 1, "", "_partial_diff"], [38, 2, 1, "", "_pow"], [38, 2, 1, "", "_scalar_add"], [38, 2, 1, "", "_sub"], [38, 2, 1, "", "_verify_operands"], [38, 2, 1, "", "add_points"], [38, 4, 1, "", "coeffs"], [38, 2, 1, "", "diff"], [38, 2, 1, "", "expand_dim"], [38, 2, 1, "", "from_degree"], [38, 2, 1, "", "from_grid"], [38, 2, 1, "", "from_poly"], [38, 2, 1, "", "generate_internal_domain"], [38, 2, 1, "", "generate_user_domain"], [38, 2, 1, "", "has_matching_dimension"], [38, 2, 1, "", "has_matching_domain"], [38, 2, 1, "", "integrate_over"], [38, 2, 1, "", "make_complete"], [38, 4, 1, "", "num_active_monomials"], [38, 2, 1, "", "partial_diff"], [38, 4, 1, "", "spatial_dimension"], [38, 4, 1, "", "unisolvent_nodes"]], "minterpy.schemes": [[40, 0, 0, "-", "barycentric"], [45, 0, 0, "-", "matrix_operator"]], "minterpy.schemes.barycentric": [[41, 0, 0, "-", "operators"]], "minterpy.schemes.barycentric.operators": [[42, 1, 1, "", "BarycentricDictOperator"], [43, 1, 1, "", "BarycentricFactorisedOperator"], [41, 1, 1, "", "BarycentricOperator"], [44, 1, 1, "", "BarycentricPiecewiseOperator"]], "minterpy.schemes.barycentric.operators.BarycentricDictOperator": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "__matmul__"], [42, 3, 1, "", "__weakref__"], [42, 2, 1, "", "_get_array_repr"], [42, 4, 1, "", "array_repr_full"], [42, 4, 1, "", "array_repr_sparse"], [42, 4, 1, "", "array_representation"], [42, 2, 1, "", "merging_fct"], [42, 2, 1, "", "transformation_fct"]], "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "__matmul__"], [43, 3, 1, "", "__weakref__"], [43, 2, 1, "", "_get_array_repr"], [43, 4, 1, "", "array_repr_full"], [43, 4, 1, "", "array_repr_sparse"], [43, 4, 1, "", "array_representation"], [43, 2, 1, "", "merging_fct"], [43, 2, 1, "", "transformation_fct"]], "minterpy.schemes.barycentric.operators.BarycentricOperator": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "__matmul__"], [41, 3, 1, "", "__weakref__"], [41, 2, 1, "", "_get_array_repr"], [41, 4, 1, "", "array_repr_full"], [41, 4, 1, "", "array_repr_sparse"], [41, 4, 1, "", "array_representation"], [41, 2, 1, "", "merging_fct"], [41, 2, 1, "", "transformation_fct"]], "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "__matmul__"], [44, 3, 1, "", "__weakref__"], [44, 2, 1, "", "_get_array_repr"], [44, 4, 1, "", "array_repr_full"], [44, 4, 1, "", "array_repr_sparse"], [44, 4, 1, "", "array_representation"], [44, 2, 1, "", "merging_fct"], [44, 2, 1, "", "transformation_fct"]], "minterpy.schemes.matrix_operator": [[45, 1, 1, "", "MatrixOperator"]], "minterpy.schemes.matrix_operator.MatrixOperator": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "__matmul__"], [45, 3, 1, "", "__weakref__"], [45, 2, 1, "", "_get_array_repr"], [45, 4, 1, "", "array_repr_full"], [45, 4, 1, "", "array_repr_sparse"]], "minterpy.transformations": [[48, 0, 0, "-", "canonical"], [49, 0, 0, "-", "chebyshev"], [50, 0, 0, "-", "identity"], [47, 0, 0, "-", "interface"], [51, 0, 0, "-", "lagrange"], [52, 0, 0, "-", "newton"], [23, 0, 0, "-", "utils"]], "minterpy.transformations.canonical": [[48, 1, 1, "", "CanonicalToChebyshev"], [48, 1, 1, "", "CanonicalToLagrange"], [48, 1, 1, "", "CanonicalToNewton"]], "minterpy.transformations.canonical.CanonicalToChebyshev": [[48, 2, 1, "", "__call__"], [48, 2, 1, "", "__init__"], [48, 2, 1, "", "__init_subclass__"], [48, 3, 1, "", "__weakref__"], [48, 2, 1, "", "_apply_transformation"], [48, 2, 1, "", "_get_transformation_operator"], [48, 4, 1, "", "_target_indices"], [48, 4, 1, "", "grid"], [48, 4, 1, "", "multi_index"], [48, 3, 1, "", "origin_type"], [48, 3, 1, "", "target_type"], [48, 4, 1, "", "transformation_operator"]], "minterpy.transformations.canonical.CanonicalToLagrange": [[48, 2, 1, "", "__call__"], [48, 2, 1, "", "__init__"], [48, 2, 1, "", "__init_subclass__"], [48, 3, 1, "", "__weakref__"], [48, 2, 1, "", "_apply_transformation"], [48, 2, 1, "", "_get_transformation_operator"], [48, 4, 1, "", "_target_indices"], [48, 4, 1, "", "grid"], [48, 4, 1, "", "multi_index"], [48, 3, 1, "", "origin_type"], [48, 3, 1, "", "target_type"], [48, 4, 1, "", "transformation_operator"]], "minterpy.transformations.canonical.CanonicalToNewton": [[48, 2, 1, "", "__call__"], [48, 2, 1, "", "__init__"], [48, 2, 1, "", "__init_subclass__"], [48, 3, 1, "", "__weakref__"], [48, 2, 1, "", "_apply_transformation"], [48, 2, 1, "", "_get_transformation_operator"], [48, 4, 1, "", "_target_indices"], [48, 4, 1, "", "grid"], [48, 4, 1, "", "multi_index"], [48, 3, 1, "", "origin_type"], [48, 3, 1, "", "target_type"], [48, 4, 1, "", "transformation_operator"]], "minterpy.transformations.chebyshev": [[49, 1, 1, "", "ChebyshevToCanonical"], [49, 1, 1, "", "ChebyshevToLagrange"], [49, 1, 1, "", "ChebyshevToNewton"]], "minterpy.transformations.chebyshev.ChebyshevToCanonical": [[49, 2, 1, "", "__call__"], [49, 2, 1, "", "__init__"], [49, 2, 1, "", "__init_subclass__"], [49, 3, 1, "", "__weakref__"], [49, 2, 1, "", "_apply_transformation"], [49, 2, 1, "", "_get_transformation_operator"], [49, 4, 1, "", "_target_indices"], [49, 4, 1, "", "grid"], [49, 4, 1, "", "multi_index"], [49, 3, 1, "", "origin_type"], [49, 3, 1, "", "target_type"], [49, 4, 1, "", "transformation_operator"]], "minterpy.transformations.chebyshev.ChebyshevToLagrange": [[49, 2, 1, "", "__call__"], [49, 2, 1, "", "__init__"], [49, 2, 1, "", "__init_subclass__"], [49, 3, 1, "", "__weakref__"], [49, 2, 1, "", "_apply_transformation"], [49, 2, 1, "", "_get_transformation_operator"], [49, 4, 1, "", "_target_indices"], [49, 4, 1, "", "grid"], [49, 4, 1, "", "multi_index"], [49, 3, 1, "", "origin_type"], [49, 3, 1, "", "target_type"], [49, 4, 1, "", "transformation_operator"]], "minterpy.transformations.chebyshev.ChebyshevToNewton": [[49, 2, 1, "", "__call__"], [49, 2, 1, "", "__init__"], [49, 2, 1, "", "__init_subclass__"], [49, 3, 1, "", "__weakref__"], [49, 2, 1, "", "_apply_transformation"], [49, 2, 1, "", "_get_transformation_operator"], [49, 4, 1, "", "_target_indices"], [49, 4, 1, "", "grid"], [49, 4, 1, "", "multi_index"], [49, 3, 1, "", "origin_type"], [49, 3, 1, "", "target_type"], [49, 4, 1, "", "transformation_operator"]], "minterpy.transformations.identity": [[50, 1, 1, "", "Identity"]], "minterpy.transformations.identity.Identity": [[50, 2, 1, "", "__call__"], [50, 2, 1, "", "__init__"], [50, 2, 1, "", "__init_subclass__"], [50, 3, 1, "", "__weakref__"], [50, 2, 1, "", "_apply_transformation"], [50, 2, 1, "", "_get_transformation_operator"], [50, 4, 1, "", "_target_indices"], [50, 4, 1, "", "grid"], [50, 4, 1, "", "multi_index"], [50, 3, 1, "", "origin_type"], [50, 3, 1, "", "target_type"], [50, 4, 1, "", "transformation_operator"]], "minterpy.transformations.interface": [[47, 5, 1, "", "get_transformation"], [47, 5, 1, "", "get_transformation_class"]], "minterpy.transformations.lagrange": [[51, 1, 1, "", "LagrangeToCanonical"], [51, 1, 1, "", "LagrangeToChebyshev"], [51, 1, 1, "", "LagrangeToNewton"]], "minterpy.transformations.lagrange.LagrangeToCanonical": [[51, 2, 1, "", "__call__"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "__init_subclass__"], [51, 3, 1, "", "__weakref__"], [51, 2, 1, "", "_apply_transformation"], [51, 2, 1, "", "_get_transformation_operator"], [51, 4, 1, "", "_target_indices"], [51, 4, 1, "", "grid"], [51, 4, 1, "", "multi_index"], [51, 3, 1, "", "origin_type"], [51, 3, 1, "", "target_type"], [51, 4, 1, "", "transformation_operator"]], "minterpy.transformations.lagrange.LagrangeToChebyshev": [[51, 2, 1, "", "__call__"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "__init_subclass__"], [51, 3, 1, "", "__weakref__"], [51, 2, 1, "", "_apply_transformation"], [51, 2, 1, "", "_get_transformation_operator"], [51, 4, 1, "", "_target_indices"], [51, 4, 1, "", "grid"], [51, 4, 1, "", "multi_index"], [51, 3, 1, "", "origin_type"], [51, 3, 1, "", "target_type"], [51, 4, 1, "", "transformation_operator"]], "minterpy.transformations.lagrange.LagrangeToNewton": [[51, 2, 1, "", "__call__"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "__init_subclass__"], [51, 3, 1, "", "__weakref__"], [51, 2, 1, "", "_apply_transformation"], [51, 2, 1, "", "_get_transformation_operator"], [51, 4, 1, "", "_target_indices"], [51, 4, 1, "", "grid"], [51, 4, 1, "", "multi_index"], [51, 3, 1, "", "origin_type"], [51, 3, 1, "", "target_type"], [51, 4, 1, "", "transformation_operator"]], "minterpy.transformations.newton": [[52, 1, 1, "", "NewtonToCanonical"], [52, 1, 1, "", "NewtonToChebyshev"], [52, 1, 1, "", "NewtonToLagrange"]], "minterpy.transformations.newton.NewtonToCanonical": [[52, 2, 1, "", "__call__"], [52, 2, 1, "", "__init__"], [52, 2, 1, "", "__init_subclass__"], [52, 3, 1, "", "__weakref__"], [52, 2, 1, "", "_apply_transformation"], [52, 2, 1, "", "_get_transformation_operator"], [52, 4, 1, "", "_target_indices"], [52, 4, 1, "", "grid"], [52, 4, 1, "", "multi_index"], [52, 3, 1, "", "origin_type"], [52, 3, 1, "", "target_type"], [52, 4, 1, "", "transformation_operator"]], "minterpy.transformations.newton.NewtonToChebyshev": [[52, 2, 1, "", "__call__"], [52, 2, 1, "", "__init__"], [52, 2, 1, "", "__init_subclass__"], [52, 3, 1, "", "__weakref__"], [52, 2, 1, "", "_apply_transformation"], [52, 2, 1, "", "_get_transformation_operator"], [52, 4, 1, "", "_target_indices"], [52, 4, 1, "", "grid"], [52, 4, 1, "", "multi_index"], [52, 3, 1, "", "origin_type"], [52, 3, 1, "", "target_type"], [52, 4, 1, "", "transformation_operator"]], "minterpy.transformations.newton.NewtonToLagrange": [[52, 2, 1, "", "__call__"], [52, 2, 1, "", "__init__"], [52, 2, 1, "", "__init_subclass__"], [52, 3, 1, "", "__weakref__"], [52, 2, 1, "", "_apply_transformation"], [52, 2, 1, "", "_get_transformation_operator"], [52, 4, 1, "", "_target_indices"], [52, 4, 1, "", "grid"], [52, 4, 1, "", "multi_index"], [52, 3, 1, "", "origin_type"], [52, 3, 1, "", "target_type"], [52, 4, 1, "", "transformation_operator"]], "minterpy.transformations.utils": [[23, 5, 1, "", "build_canonical_to_chebyshev_operator"], [23, 5, 1, "", "build_canonical_to_lagrange_operator"], [23, 5, 1, "", "build_canonical_to_newton_operator"], [23, 5, 1, "", "build_chebyshev_to_canonical_operator"], [23, 5, 1, "", "build_chebyshev_to_lagrange_operator"], [23, 5, 1, "", "build_chebyshev_to_newton_operator"], [23, 5, 1, "", "build_lagrange_to_canonical_operator"], [23, 5, 1, "", "build_lagrange_to_chebyshev_operator"], [23, 5, 1, "", "build_lagrange_to_newton_operator"], [23, 5, 1, "", "build_newton_to_canonical_operator"], [23, 5, 1, "", "build_newton_to_chebyshev_operator"], [23, 5, 1, "", "build_newton_to_lagrange_operator"]], "minterpy.utils": [[24, 0, 0, "-", "arrays"], [26, 0, 0, "-", "multi_index"], [31, 0, 0, "-", "quad"], [32, 0, 0, "-", "verification"]], "minterpy.utils.arrays": [[24, 5, 1, "", "cartesian_product"], [24, 5, 1, "", "expand_dim"], [24, 5, 1, "", "is_unique"], [24, 5, 1, "", "lp_norm"], [24, 5, 1, "", "lp_sum"], [24, 5, 1, "", "make_coeffs_2d"]], "minterpy.utils.multi_index": [[26, 5, 1, "", "find_match_between"], [26, 5, 1, "", "gen_backward_neighbors"], [26, 5, 1, "", "gen_missing_backward_neighbors"], [26, 5, 1, "", "get_exponent_matrix"], [26, 5, 1, "", "get_poly_degree"], [26, 5, 1, "", "insert_lexicographically"], [26, 5, 1, "", "is_complete"], [26, 5, 1, "", "is_disjoint"], [26, 5, 1, "", "is_downward_closed"], [26, 5, 1, "", "lex_sort"], [26, 5, 1, "", "list_insert_single"], [26, 5, 1, "", "make_complete"], [26, 5, 1, "", "make_derivable"], [26, 5, 1, "", "make_downward_closed"], [26, 5, 1, "", "multiply_indices"], [26, 5, 1, "", "union_indices"]], "minterpy.utils.polynomials": [[27, 0, 0, "-", "canonical"], [28, 0, 0, "-", "chebyshev"], [29, 0, 0, "-", "lagrange"], [30, 0, 0, "-", "newton"]], "minterpy.utils.polynomials.canonical": [[27, 5, 1, "", "eval_polynomials"], [27, 5, 1, "", "integrate_monomials"]], "minterpy.utils.polynomials.chebyshev": [[28, 5, 1, "", "evaluate_monomials"], [28, 5, 1, "", "evaluate_polynomials"]], "minterpy.utils.polynomials.lagrange": [[29, 5, 1, "", "integrate_monomials_lagrange"]], "minterpy.utils.polynomials.newton": [[30, 5, 1, "", "deriv_newt_eval"], [30, 5, 1, "", "eval_newton_monomials"], [30, 5, 1, "", "eval_newton_polynomials"], [30, 5, 1, "", "eval_newton_polynomials_batch"], [30, 5, 1, "", "integrate_monomials_newton"]], "minterpy.utils.quad": [[31, 5, 1, "", "gauss_leg"]], "minterpy.utils.verification": [[32, 5, 1, "", "check_dimensionality"], [32, 5, 1, "", "check_domain_fit"], [32, 5, 1, "", "check_dtype"], [32, 5, 1, "", "check_shape"], [32, 5, 1, "", "check_type"], [32, 5, 1, "", "check_values"], [32, 5, 1, "", "dummy"], [32, 5, 1, "", "is_real_scalar"], [32, 5, 1, "", "shape_eval_output"], [32, 5, 1, "", "verify_domain"], [32, 5, 1, "", "verify_lp_degree"], [32, 5, 1, "", "verify_poly_coeffs"], [32, 5, 1, "", "verify_poly_degree"], [32, 5, 1, "", "verify_poly_domain"], [32, 5, 1, "", "verify_poly_power"], [32, 5, 1, "", "verify_query_points"], [32, 5, 1, "", "verify_spatial_dimension"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "terms": {"": [1, 4, 6, 18, 20, 24, 27, 28, 30, 32, 34, 35, 37, 38, 53, 54, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 74, 76, 79, 80, 83, 85, 86, 94, 95, 106, 110, 111, 115], "0": [1, 4, 6, 12, 16, 17, 19, 24, 26, 30, 32, 34, 35, 37, 38, 43, 61, 63, 70, 71, 73, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "00": [82, 85], "000": [80, 83, 85], "003": [82, 85], "008": [63, 79], "01": 80, "02392": 76, "0490183": 102, "05": [82, 83, 85, 86, 87], "08": 79, "09": [63, 79], "0_12": 75, "1": [1, 4, 10, 12, 14, 16, 19, 20, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 53, 54, 60, 61, 62, 63, 65, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "10": [16, 32, 63, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 96, 97, 98], "100": [58, 62, 83, 85, 87], "1000": [80, 81, 83, 85, 86], "10000": [81, 82, 83, 87, 102], "100000": 83, "1007": [71, 73, 75, 78, 79], "1016": [63, 79], "107": 74, "108": 74, "10824": [53, 71, 73, 74, 76], "11": 74, "116": 74, "118": 74, "12": [71, 73, 74, 75, 80, 81, 82, 83, 85, 86, 87], "121": [82, 83, 85, 86, 87], "122": [82, 83, 85, 86, 87], "123": 32, "125": 86, "128": [80, 85], "13": [73, 74, 79], "131": 87, "132": [67, 87], "1324": 67, "133": 87, "14": [74, 79, 80, 81, 82, 83, 85, 86, 87], "145": 74, "15": [16, 74, 81, 87], "16": [1, 34, 35, 37, 38, 74, 80, 81, 82, 83, 85, 91, 92, 93, 94, 95, 102], "163": 70, "17": [12, 115], "177": [63, 79], "18": 80, "181": 79, "1885": 74, "190": 79, "1901": 74, "1912": 74, "1914": 74, "192": 70, "194": 83, "1957": 73, "1959": 74, "1960": 79, "1969": 79, "197": 74, "1970": 79, "1972": [63, 74], "1976": 76, "1977": [63, 74, 79], "1978": [63, 74], "1979": [82, 85], "1988": 74, "1990": 79, "1994": 70, "1999": 70, "1d": [1, 24, 30, 34, 35, 37, 38, 42, 43, 61, 84], "1e": [1, 34, 35, 37, 38, 80], "1st": [20, 30, 86], "2": [1, 4, 6, 10, 16, 19, 20, 24, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 54, 61, 63, 65, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "20": [32, 74, 82, 85, 103], "200": [63, 76], "2002": [71, 73, 74, 75], "2004": [70, 79], "2007": 74, "2010": [53, 63, 71, 73, 74, 76], "2012": [71, 73, 75, 78, 79], "2013": [63, 79], "2014": [63, 79], "2017": [60, 74], "2018": [74, 75], "2019": [70, 73], "202": 70, "2020": [53, 71, 73, 74, 76], "2024": [12, 115], "21105": 76, "212": 76, "224": 74, "233": 75, "2392": 76, "24": 79, "243": 74, "245": 79, "25": [80, 81, 82, 83, 85, 86], "250": 85, "251": 79, "256": 80, "27": [63, 74], "28": 70, "280": 79, "282": 75, "287": 65, "29289322": 86, "2_2": 77, "2d": [1, 16, 24, 30, 34, 35, 37, 38, 71, 82, 85, 87], "2m": 74, "2nd": 20, "2y": 75, "3": [4, 16, 19, 20, 24, 26, 30, 32, 61, 63, 67, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 85, 86, 88, 89, 91, 92, 93, 94, 95, 97, 98, 102, 105, 107, 108, 110, 112, 113, 114], "30": [81, 102], "300": 80, "3119": 1, "315": 74, "319": [74, 75], "32": [80, 83], "331": 74, "34": [63, 79], "342": 74, "343": 74, "35": 70, "354": 79, "356": 79, "363": 74, "36727660": [82, 85], "37": 74, "375": 86, "3d": [82, 83, 85, 86, 87], "3rd": [20, 30], "4": [19, 24, 32, 63, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 91, 93, 94, 95, 97, 98, 102, 105], "4064": 73, "42": [63, 79], "46": [70, 74], "4837": 74, "4844": 74, "49": [82, 85], "5": [4, 16, 19, 24, 32, 63, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 94, 96, 97, 98, 102, 107, 110], "50": [63, 67, 74, 82, 85], "500": [82, 83, 87], "501": 70, "517": [70, 79], "52": 70, "522": 79, "54": 76, "5697": 24, "57": [63, 74], "57735035": [94, 95], "5j": 32, "6": [24, 32, 63, 74, 77, 79, 81, 82, 85, 86, 87], "62": [63, 74], "633": 74, "639": 74, "64": 80, "7": [16, 32, 71, 74, 79, 82, 85, 86], "707106781": 86, "7171": 79, "72456": 75, "73": 79, "735": 79, "743": 79, "75": [81, 82, 85], "79": [61, 82, 85], "8": [32, 57, 67, 71, 73, 74, 75, 79, 80, 83, 86, 87], "80013": 79, "80th": 75, "8176": [71, 73, 75, 78, 79], "822": 74, "824": 74, "8259": [71, 73, 75, 78, 79], "9": [63, 74, 79, 82, 85, 86], "90": 74, "9271": 87, "978": [71, 73, 75, 78, 79], "A": [0, 1, 4, 6, 10, 12, 14, 16, 17, 19, 20, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 47, 57, 58, 60, 61, 62, 63, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114], "And": [58, 83, 97, 98, 102, 103, 107, 109], "As": [1, 45, 58, 59, 63, 64, 65, 66, 67, 71, 73, 74, 80, 81, 82, 83, 85, 86, 87, 89, 92, 94, 95, 97, 98, 105, 106, 107, 109, 110, 111, 112, 113, 114], "At": [20, 67], "Be": [58, 59, 67], "Being": 54, "But": [58, 80, 83], "By": [19, 43, 59, 62, 63, 69, 74, 80, 85, 87, 89, 113, 114], "For": [1, 4, 6, 7, 10, 15, 16, 20, 25, 26, 29, 34, 35, 37, 38, 54, 55, 58, 61, 62, 63, 64, 66, 67, 69, 73, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 97, 98, 102, 103, 105, 106, 107, 109, 110, 112, 113], "If": [1, 2, 4, 6, 8, 16, 17, 19, 24, 27, 30, 32, 33, 34, 35, 37, 38, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 78, 79, 83, 84, 86, 91, 97, 98, 103, 106, 110, 111, 112, 113, 114], "In": [1, 8, 10, 14, 17, 19, 34, 35, 37, 38, 57, 58, 60, 61, 62, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 87, 89, 91, 94, 95, 102, 103, 105, 107, 108, 109, 110, 112], "It": [1, 4, 6, 16, 19, 26, 30, 34, 35, 37, 38, 53, 60, 61, 62, 63, 67, 76, 83, 93, 112], "No": [32, 82, 85], "Not": 58, "On": [58, 60, 63, 72, 74, 78, 79, 106], "One": [1, 4, 34, 35, 37, 38, 84, 85, 100, 101, 112], "Or": [30, 60], "Such": [17, 69, 76, 86, 110], "That": [60, 66, 73, 81, 87, 113, 114], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "Their": 16, "Then": [67, 71, 78, 80, 85, 86, 87, 102, 103], "There": [19, 60, 61, 63, 65, 67, 68, 69, 71, 74, 80, 85], "These": [1, 15, 25, 34, 35, 37, 38, 41, 53, 57, 58, 59, 60, 61, 62, 63, 65, 67, 69, 80, 81, 82, 84, 85, 86, 87], "To": [57, 58, 59, 62, 63, 67, 68, 69, 74, 75, 77, 80, 82, 83, 84, 85, 86, 87, 89, 97, 98, 99, 101, 102, 103, 104, 105, 106, 110, 111, 113, 114, 115], "With": [24, 61, 67, 72, 78, 80, 81, 86, 103], "_": [10, 63, 74, 75, 77, 78, 79, 85, 86, 87, 108, 109], "__add__": [1, 34, 35, 37, 38], "__call__": [1, 2, 4, 11, 34, 35, 37, 38, 48, 49, 50, 51, 52], "__contains__": 6, "__copy__": [1, 4, 34, 35, 37, 38], "__deepcopy__": [1, 4, 6, 34, 35, 37, 38], "__eq__": [1, 4, 6, 34, 35, 37, 38], "__floordiv__": [1, 34, 35, 37, 38], "__ge__": 6, "__gt__": 6, "__hash__": [1, 4, 6, 34, 35, 37, 38], "__imul__": 6, "__init__": [1, 2, 7, 34, 35, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 61], "__init_subclass__": [2, 48, 49, 50, 51, 52], "__ior__": 6, "__le__": 6, "__len__": [1, 6, 34, 35, 37, 38, 110], "__lt__": 6, "__matmul__": [0, 41, 42, 43, 44, 45], "__mul__": [1, 4, 6, 34, 35, 37, 38], "__neg__": [1, 34, 35, 37, 38], "__or__": [4, 6], "__pos__": [1, 34, 35, 37, 38], "__pow__": [1, 34, 35, 37, 38], "__radd__": [1, 34, 35, 37, 38], "__repr__": 6, "__rmul__": [1, 34, 35, 37, 38], "__rsub__": [1, 34, 35, 37, 38], "__str__": 6, "__sub__": [1, 34, 35, 37, 38], "__truediv__": [1, 34, 35, 37, 38], "__weakref__": [1, 2, 4, 6, 7, 11, 34, 35, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52], "_a": [77, 78], "_add": [34, 35, 37, 38], "_all_": 62, "_apply_transform": [2, 48, 49, 50, 51, 52], "_code": 63, "_complete_": 62, "_create_generating_point": 4, "_deepai": 63, "_diff": [1, 34, 35, 37, 38], "_div": [34, 35, 37, 38], "_eval": [1, 34, 35, 37, 38], "_gen_grid_default": [1, 34, 35, 37, 38], "_get_array_repr": [0, 41, 42, 43, 44, 45], "_get_transformation_oper": [2, 48, 49, 50, 51, 52], "_integrate_ov": [1, 34, 35, 37, 38], "_match_dim": [1, 34, 35, 37, 38], "_mul": [34, 35, 37, 38], "_n": [73, 74], "_new_inst": 4, "_new_instance_if_necessari": [1, 34, 35, 37, 38], "_o": 76, "_p": [4, 63, 74, 75], "_partial_diff": [1, 34, 35, 37, 38], "_pow": [34, 35, 37, 38], "_scalar_add": [34, 35, 37, 38], "_sub": [34, 35, 37, 38], "_target_indic": [2, 48, 49, 50, 51, 52], "_verify_generating_point": 4, "_verify_grid_max_expon": 4, "_verify_matching_gen_function_and_point": 4, "_verify_operand": [1, 34, 35, 37, 38], "_wikipedia": 63, "a_": [4, 63, 70, 71, 73, 74, 75, 78, 79, 85, 92], "a_i": 75, "ab": [10, 80, 81, 82, 83, 85, 87, 89, 103], "abbrev": 62, "abbrevi": 62, "abc": [0, 1, 2, 5, 45, 50], "abl": [24, 30, 62], "abort": 19, "about": [23, 33, 48, 49, 51, 52, 54, 60, 61, 64, 68, 81, 82, 83, 84, 97, 98], "abov": [16, 40, 59, 61, 63, 67, 71, 76, 78, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 97, 98, 103, 105, 106, 107, 108, 109, 111], "absolut": [74, 80, 87], "abstract": [0, 1, 2, 3, 5, 9, 11, 12, 25, 34, 35, 36, 37, 38, 39, 41, 46, 50, 60], "abus": 54, "ac": [82, 85], "acad": 74, "academ": [63, 76], "acceler": [15, 18, 21, 30], "accept": [1, 4, 32, 34, 35, 37, 38, 54, 61, 80, 82, 83, 85, 89, 91, 92, 93, 94, 95], "access": [1, 10, 34, 35, 37, 38, 62, 87], "accommod": 4, "accompani": [63, 66], "accomplish": 115, "accord": [30, 32, 55, 57, 65, 67, 75, 85, 86, 97, 98, 110], "accordingli": [62, 63, 71, 111], "account": 67, "accur": [16, 68, 74, 76, 78, 79, 80, 81, 83, 85, 87], "accuraci": [74, 81, 82], "achiev": [39, 62, 63, 70, 74, 79, 83, 84], "acosta": 53, "acquir": 62, "across": [0, 1, 2, 15, 25, 26, 32, 62, 63, 65, 81, 87, 94, 95, 108], "act": [43, 54, 58, 64], "acta": 74, "action": [54, 62, 63], "activ": [0, 1, 34, 35, 37, 38, 41, 42, 43, 44, 45, 55, 67], "actual": [0, 1, 20, 34, 35, 37, 38, 63, 65, 67, 68, 69, 80, 85, 86], "ad": [1, 4, 6, 34, 35, 37, 38, 57, 66, 67, 68, 81, 88, 105, 115], "adapt": [54, 60], "add": [1, 2, 4, 6, 24, 34, 35, 37, 38, 48, 49, 50, 51, 52, 59, 62, 63, 66, 67, 69, 81, 99, 100, 104], "add_expon": [4, 6, 61, 88, 105], "add_newton": 38, "add_point": [1, 34, 35, 37, 38], "addit": [1, 4, 8, 10, 11, 24, 34, 35, 37, 38, 60, 61, 63, 64, 66, 71, 73, 80, 82, 83, 85, 86, 88, 105, 109], "addition": [60, 62, 63, 67, 68, 74, 75, 76, 83, 87, 94, 95], "address": [54, 57, 59, 69, 74, 79, 115], "adher": [55, 56, 57, 61, 62, 68], "adjust": [80, 83], "admit": 79, "admonit": 62, "adopt": [55, 57, 97, 98, 113, 114], "advanc": [18, 27, 53, 54, 60, 72, 80, 83, 84, 91], "advantag": [30, 76], "advis": 5, "advoc": 58, "affect": 54, "aforement": 93, "after": [1, 6, 10, 26, 34, 35, 37, 38, 61, 62, 63, 76, 80, 83, 84, 88, 105], "afterward": 66, "ag": 54, "again": [67, 68, 69, 81, 83, 85, 113, 114], "against": [24, 32, 57, 80], "agnost": 21, "agrang": [70, 79], "agre": 83, "aim": [57, 58, 63, 70], "aitken": 76, "akademi": 74, "akin": 63, "al": [53, 63, 74], "albeit": [62, 77], "albert": 75, "algebra": 70, "algorithm": [21, 53, 61, 70, 71, 74, 76], "alia": [48, 49, 50, 51, 52], "align": [54, 58, 60, 64, 75, 82, 85, 86, 87, 89, 106, 112, 113, 114], "all": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 28, 30, 33, 34, 35, 36, 37, 38, 39, 43, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 73, 74, 75, 78, 79, 80, 81, 82, 85, 86, 90, 92, 94, 95, 99, 101, 104, 105, 107, 108, 109, 112], "all_indices_are_contain": 19, "allow": [1, 6, 11, 19, 26, 32, 35, 57, 61, 62, 63, 65, 66, 70, 71, 80, 82, 84, 87], "along": [1, 20, 24, 30, 34, 35, 37, 38, 59, 73, 80, 81, 82, 83, 85, 86, 87], "alongsid": 66, "alpha": [4, 30, 62, 63, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 90, 92, 105, 107, 108, 109], "alpha_1": [4, 62, 71, 73, 74, 75, 79, 85, 86, 90, 92, 105, 107, 108, 109], "alpha_2": [71, 105, 107, 108], "alpha_3": [71, 105, 107, 108], "alpha_4": 105, "alpha_i": [63, 71], "alpha_j": [71, 73, 75, 76, 86], "alpha_m": [4, 62, 71, 73, 74, 75, 79, 85, 86, 90, 92, 107, 108, 109], "alreadi": [4, 6, 19, 26, 58, 60, 62, 65, 67, 68, 69, 78, 83, 87, 91, 105], "also": [1, 2, 4, 6, 10, 13, 25, 26, 33, 34, 35, 37, 38, 48, 49, 50, 51, 52, 58, 60, 61, 63, 64, 65, 66, 68, 73, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 98, 102, 103, 105, 106, 108, 110, 111, 112, 113, 114], "alt": 63, "alter": [1, 34, 35, 37, 38, 57, 64, 87, 106], "altern": [1, 4, 17, 34, 35, 37, 38, 58, 59, 63, 71, 73, 80, 93, 106, 108, 113, 114], "although": [25, 62, 63, 86], "alwai": [4, 6, 17, 19, 57, 58, 62, 63, 66, 67, 69, 80, 83, 107, 115], "american": [55, 61, 74], "among": 84, "amount": [30, 73], "an": [0, 1, 2, 4, 6, 8, 9, 10, 14, 17, 19, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 86, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 112, 113, 114, 115], "analog": 71, "analogi": 62, "analysi": [71, 73, 75, 78, 79], "analyt": [74, 103], "analytisch": 74, "analyz": 57, "anchor": 63, "ancient": 74, "ani": [2, 4, 5, 8, 16, 17, 19, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 37, 38, 45, 48, 49, 50, 51, 52, 54, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 74, 75, 77, 80, 83, 85, 87, 93, 94, 95, 107, 108, 109, 110, 112], "annal": 73, "anoth": [1, 2, 3, 4, 6, 19, 20, 26, 34, 35, 37, 38, 39, 40, 46, 61, 63, 66, 72, 78, 80, 81, 82, 85, 86, 97, 98, 106, 111, 112], "answer": [54, 68, 72], "antialias": [82, 83, 85, 86, 87], "anyon": 54, "anyth": [33, 66, 68], "anywai": 17, "ap": 73, "api": [62, 64, 65, 66, 115], "apolog": 54, "appear": [20, 37, 54, 61, 63], "append_ax": [82, 83, 85, 86, 87], "appl": 76, "appli": [0, 2, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 68, 71, 74, 76, 78, 81, 82, 85, 86, 87, 110], "applic": [38, 63, 67, 70, 73, 74, 77, 80, 83, 85, 95], "appreci": [66, 83], "approach": [16, 21, 63, 65, 67, 68, 70, 76, 79], "appropri": [54, 59, 62, 63, 67, 68], "approv": [53, 67], "approx": 74, "approxim": [30, 37, 63, 72, 73, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87], "ar": [1, 4, 6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 37, 38, 41, 43, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "arang": [85, 103], "arbitrari": [72, 73, 76, 81, 83, 87], "arbitrarili": [71, 109], "architectur": 64, "area": [66, 69], "aren": [58, 68], "arg": [4, 10, 11, 32, 34, 35, 37, 38, 41, 87], "argmax": 77, "arguabl": 86, "arguemnt": 30, "argument": [1, 2, 4, 10, 14, 17, 24, 32, 34, 35, 37, 38, 48, 49, 50, 51, 52, 61, 80, 82, 83, 85, 91, 92, 93, 94, 95, 108], "aris": [63, 85, 87, 110], "arithmet": [38, 79, 80, 82, 84, 86, 87], "around": 68, "arr": [17, 24, 33], "arrai": [0, 1, 4, 6, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 41, 42, 43, 44, 45, 61, 75, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "arrang": 77, "array_dict": 29, "array_lik": [1, 24, 32, 34, 35, 37, 38], "array_repr_ful": [0, 41, 42, 43, 44, 45, 86], "array_repr_spars": [0, 41, 42, 43, 44, 45], "array_represent": [41, 42, 43, 44], "articl": [37, 60, 63], "artifact": 65, "arxiv": [53, 71, 73, 74, 76], "asi": 80, "ask": [69, 74], "aspect": [62, 63], "assert": [58, 74, 75], "asset": 63, "assign": [1, 4, 6, 34, 35, 37, 38, 43, 60, 61, 63, 69, 71], "assist": 57, "associ": [4, 67, 75, 80, 85, 86, 94], "assum": [16, 19, 25, 30, 34, 35, 38, 60, 62, 67, 73, 75], "assumpt": [16, 61, 71], "ast": 57, "astronomi": 74, "atleast_2d": 24, "atom": [42, 43], "attach": 10, "attack": 54, "attempt": [1, 34, 35, 37, 38, 57, 81], "attent": [1, 54, 63], "attr": 63, "attract": [53, 63], "attribut": [0, 4, 11, 33, 61, 63], "audienc": 62, "author": [60, 62, 63, 68], "autobuild": 59, "autom": 68, "automat": [55, 58, 59, 63, 65, 69, 86, 90, 107, 112], "autosectionlabel": 63, "aux": 73, "avail": [1, 2, 4, 10, 12, 17, 34, 35, 37, 38, 40, 48, 49, 50, 51, 52, 54, 62, 63, 67, 68, 69, 73, 76, 82, 87, 99, 101, 103, 104], "available_transform": 47, "avoid": [17, 20, 30, 32, 58, 60, 63, 65, 74, 78, 92], "awai": 66, "awar": 63, "awkward": 68, "ax": [24, 80, 81, 82, 85, 86, 88, 90, 96, 97, 98], "axes_grid1": [82, 83, 85, 86, 87], "axi": [1, 17, 24, 34, 35, 37, 38, 71, 80, 81, 82, 83, 85, 86, 87, 89, 103], "axs_1": [82, 83, 85, 86, 87], "axs_2": [82, 83, 85, 86, 87], "axs_3": 87, "b": [16, 32, 63, 67, 74, 79, 84, 105, 106, 112, 113, 114], "b_i": 75, "back": [29, 66, 74], "backend": 38, "background": 60, "backslash": [61, 63], "backtick": 63, "backward": 26, "bajda": 53, "ban": 54, "bare": 37, "barycentr": [13, 23, 39, 41, 42, 43, 44, 51, 52, 72, 74, 78], "barycentricdictoper": 41, "barycentricfactorisedoper": 41, "barycentricoper": [42, 43, 44], "barycentricpiecewiseoper": 41, "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 19, 20, 25, 30, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 58, 61, 62, 63, 66, 69, 71, 72, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 91, 92, 93, 94, 95, 113, 114], "basi": [0, 1, 2, 3, 4, 6, 7, 10, 12, 16, 18, 20, 21, 23, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 61, 70, 72, 73, 77, 79, 81, 82, 87, 89, 91, 92, 93, 94, 95, 102, 103, 108], "basic": [1, 38, 43, 60, 62, 84, 85], "bat": 59, "batch": [30, 35], "batch_siz": 30, "bb": 17, "becaus": [1, 4, 10, 25, 32, 34, 35, 37, 38, 58, 60, 73, 76, 80, 85, 86, 90, 94, 95, 96, 103, 105, 106, 107, 109, 112, 113, 114], "becom": [6, 30, 60, 62, 63, 69, 79, 83, 84, 86, 87, 91], "been": [1, 6, 30, 34, 35, 37, 38, 58, 62, 63, 68, 74, 80, 82, 85, 86, 113, 114], "befor": [1, 34, 35, 37, 38, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 80, 81, 82, 84, 85, 86, 87, 88, 89, 105, 112, 113, 114], "beforehand": 26, "began": 82, "begin": [60, 62, 68, 71, 75, 82, 85, 86, 87, 89, 106, 111, 112, 113, 114], "behav": [1, 61, 86], "behavior": [0, 1, 2, 34, 35, 37, 38, 54, 58, 61, 68, 80, 81, 87, 89, 106, 112], "behind": [60, 72, 88, 115], "being": [1, 4, 13, 25, 37, 57, 58, 61, 63, 71, 81, 87], "believ": [60, 68], "belong": [58, 62, 64, 71], "below": [1, 17, 21, 34, 35, 37, 38, 57, 60, 61, 62, 63, 65, 66, 67, 68, 71, 73, 75, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103], "beneath": 61, "ber": 74, "berlin": 74, "bernstein": 74, "berrut": 70, "besid": 63, "best": [54, 63, 67, 68, 83, 84, 87], "beta": [71, 73, 75, 78, 79, 80, 85, 86], "beta_1": 75, "beta_i": 71, "beta_j": 71, "beta_m": 75, "better": [53, 60, 68, 72, 83, 91], "between": [0, 1, 3, 4, 6, 7, 16, 19, 20, 23, 26, 29, 34, 35, 37, 38, 50, 58, 60, 61, 67, 71, 72, 77, 81, 82, 83, 84, 85, 86, 87, 96, 97, 98, 109, 110, 113, 114], "beyond": [8, 63, 81, 82], "bf02165411": 79, "bib": 63, "bibl": 76, "bibtex": 63, "big": [24, 71, 79], "bigger": 26, "bin": 67, "binari": 19, "binomi": 17, "binomin": 17, "birkh\u00e4us": [71, 73, 75, 78, 79], "birthdai": 75, "bit": 83, "bivari": 74, "black": [55, 57, 80, 85], "blank": [61, 67, 73], "bmbf": 53, "bodi": [54, 67], "boldsymbol": [4, 10, 62, 63, 70, 75, 76, 77, 78, 82, 83, 85, 86, 87, 89, 90, 92, 103, 105, 107, 108, 109], "book": [62, 63], "bool": [1, 4, 6, 10, 19, 21, 24, 26, 30, 32, 34, 35, 37, 38, 61], "boolean": [19, 32], "boor": [63, 74], "boston": [71, 73, 75, 78, 79], "both": [1, 4, 6, 20, 24, 26, 30, 32, 34, 35, 37, 38, 44, 60, 62, 67, 70, 74, 78, 80, 81, 82, 83, 85, 86, 87, 91, 97, 98, 106, 111, 113, 114], "bottleneck": 115, "bottom": [63, 86], "bound": [1, 19, 27, 29, 30, 31, 32, 34, 35, 37, 38, 74, 75, 82], "boundari": 80, "box": [62, 63, 67], "branch": [57, 62, 66, 69, 84], "brand": 84, "brandon": 63, "brang": 74, "break": [8, 57, 58, 63], "breakpoint": 57, "bring": 55, "broad": 61, "broadcast": 24, "broken": 66, "brought": 67, "brows": 58, "browser": [59, 62], "budget": 53, "bug": [58, 67], "bugfix": 67, "build": [1, 4, 24, 32, 33, 34, 35, 37, 38, 60, 61, 63, 66, 67, 72], "build_canonical_to_chebyshev_oper": 23, "build_canonical_to_lagrange_oper": 23, "build_canonical_to_newton_oper": 23, "build_chebyshev_to_canonical_oper": 23, "build_chebyshev_to_lagrange_oper": 23, "build_chebyshev_to_newton_oper": 23, "build_lagrange_to_canonical_oper": 23, "build_lagrange_to_chebyshev_oper": 23, "build_lagrange_to_newton_oper": 23, "build_newton_to_canonical_oper": 23, "build_newton_to_chebyshev_oper": 23, "build_newton_to_lagrange_oper": 23, "built": [1, 4, 34, 35, 37, 38, 59, 61, 62, 63, 85, 91, 93], "builtin": 57, "bulirsch": [71, 73, 75], "bulk": 65, "busi": [71, 73, 75], "button": 67, "byte": 57, "c": [10, 59, 76, 77, 78, 79, 87, 106, 112, 113, 114], "c_": [16, 73, 75, 76, 77, 78, 79, 80, 85, 86], "c_a": 16, "c_b": 16, "c_i": 71, "cach": 33, "calcul": [63, 74], "calculu": [38, 80, 81, 84, 86, 87], "calgari": 76, "call": [1, 2, 4, 6, 10, 17, 20, 24, 26, 30, 32, 34, 35, 37, 38, 48, 49, 50, 51, 52, 53, 57, 60, 62, 72, 74, 75, 79, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 106, 108, 112, 113, 114], "callabl": [1, 4, 10, 31, 33, 34, 35, 37, 38, 61, 80, 83, 85, 87, 89, 91, 93], "caller": [16, 18, 34, 35, 38], "can": [1, 2, 4, 6, 10, 16, 17, 26, 30, 32, 33, 34, 35, 37, 38, 47, 48, 49, 50, 51, 52, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 106, 107, 108, 109, 112, 113, 114, 115], "can_eval_mult": 16, "can_monomials_1d": 86, "can_monomials_2d": 86, "can_poli": [102, 103], "can_poly_1d": 86, "can_poly_2d": 86, "canada": [82, 85], "cannot": [1, 4, 10, 17, 19, 32, 34, 35, 37, 38, 59, 61, 67, 76, 81, 83, 86, 87, 96, 102, 103, 108, 110, 112], "canon": [1, 18, 20, 23, 25, 30, 33, 34, 35, 36, 37, 38, 46, 49, 51, 52, 73, 78, 79, 102, 103], "canonical_polynomi": 36, "canonicalpolynomi": [10, 23, 34, 35, 38, 48, 49, 51, 52, 58, 80, 85, 86], "canonicaltochebyshev": [48, 86], "canonicaltolagrang": [48, 86], "canonicaltonewton": [48, 86], "cap": 71, "capabl": [8, 83, 85], "capit": 67, "captur": [65, 83, 87], "cardin": [6, 20, 110], "care": [66, 72], "carefulli": [60, 62, 73, 77], "carl": [63, 74], "carri": [1, 5, 6, 10, 23, 32, 34, 35, 37, 38, 49, 51, 57, 61, 64, 78, 80, 81, 83, 86, 87, 97, 100, 102, 103, 112, 113, 114], "cartesian": [16, 24, 32, 34, 35, 37, 38, 61], "cartesian_product": 24, "case": [1, 10, 19, 23, 24, 34, 35, 37, 38, 42, 43, 54, 57, 58, 63, 68, 70, 71, 80, 81, 82, 83, 85, 87, 94, 110, 111, 113, 114], "casu": [53, 67, 84], "categor": [15, 63], "categori": [58, 60, 65], "caus": [17, 57], "caution": 57, "caveat": [61, 65, 97, 98], "cax": [82, 83, 85, 86, 87], "cd": 67, "cdot": [10, 71, 73, 74, 75, 78, 79, 80, 85, 86, 87], "celebr": 75, "cell": 62, "center": [53, 55, 63, 74], "centr": 55, "central": [0, 72], "certain": [10, 39, 73], "cf": [82, 83, 85, 86, 87], "cfg": [57, 67], "chain": [20, 21, 23, 48, 49, 51, 52], "challeng": [58, 60, 63, 74], "cham": 75, "chang": [1, 15, 34, 35, 37, 38, 50, 55, 56, 57, 58, 59, 64, 66, 68, 69, 72, 80, 89, 105, 112], "changelog": 67, "charact": [61, 67], "characterist": 54, "charm": [63, 74], "cheb": [73, 75, 86], "cheb_monomials_1d": 86, "cheb_monomials_2d": 86, "cheb_poly_1d": 86, "cheb_poly_2d": 86, "chebfun": 79, "chebpol": 74, "chebychev": [14, 30], "chebychev_2nd_ord": 14, "chebyshev": [4, 14, 23, 25, 33, 35, 36, 46, 48, 51, 52, 61, 73, 74, 79, 80, 85, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98], "chebyshev_polynomi": 36, "chebyshevpolynomi": [10, 23, 34, 35, 38, 48, 49, 51, 52, 58, 86], "chebyshevtocanon": [49, 86], "chebyshevtolagrang": [49, 86], "chebyshevtonewton": [49, 86], "check": [1, 4, 6, 16, 18, 19, 24, 26, 30, 32, 34, 35, 37, 38, 55, 56, 57, 58, 59, 63, 66, 68, 81, 84, 85, 87, 100, 104], "check_dimension": 32, "check_domain_fit": 32, "check_dtyp": 32, "check_for_inclus": 26, "check_shap": 32, "check_typ": 32, "check_valu": 32, "checker": 57, "checkout": [67, 69], "chip": 55, "choic": [65, 67, 71, 73, 75, 81, 83, 85, 108], "choleski": 10, "choos": [17, 68, 71, 73, 83], "chosen": [6, 10, 71, 73, 75, 77, 79, 80, 83, 85, 86, 87, 109], "chronologi": 74, "chung": 79, "cirillo": 74, "cite": 63, "cl": 78, "clarifi": [54, 68], "clariti": [63, 81], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 60, 63, 70, 80, 85, 86, 87, 92, 93, 94, 95, 99, 104, 106, 107], "classic": [70, 71, 74, 75, 76, 78, 79, 83], "classmethod": [1, 2, 4, 6, 33, 34, 35, 37, 38, 48, 49, 50, 51, 52], "clean": 67, "cleaner": 63, "clear": [58, 61, 62, 67], "clearli": [60, 61], "click": [67, 69], "clone": 84, "close": [1, 4, 6, 17, 23, 26, 34, 35, 37, 38, 51, 52, 61, 62, 71, 73, 75, 79, 81, 83, 99, 100, 104, 107, 113, 114], "closed": [4, 61], "cmap": [82, 83, 85, 86, 87], "cn": 78, "co": [73, 103], "code": [5, 8, 15, 16, 17, 18, 20, 38, 53, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 83], "codebas": [15, 32, 55, 57, 60, 64, 65, 66, 67, 68, 69], "coeff": [1, 10, 16, 27, 30, 32, 34, 35, 37, 38, 42, 58, 80, 82, 85, 86, 87, 102, 103], "coeffici": [0, 1, 4, 7, 10, 16, 17, 20, 21, 24, 26, 27, 28, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 58, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 102, 103], "coeffit": 30, "coeffs_1": [16, 81], "coeffs_1d": 86, "coeffs_2": [16, 81], "coeffs_2d": 86, "coeffs_in": [41, 42, 43, 44], "coeffs_out": [42, 44], "coeffs_out_placehold": [41, 43, 44], "coeffs_prod": 16, "cohen": 75, "coincid": [71, 74, 78, 85, 109], "collabor": 67, "collect": [18, 58, 64], "colon": 61, "color": [54, 55, 80, 85, 87], "colorbar": [82, 83, 85, 86, 87], "colour": 55, "colum": 95, "column": [1, 4, 6, 14, 16, 17, 19, 20, 24, 26, 32, 34, 35, 37, 38, 61, 73, 78, 80, 83, 85, 87, 88, 89, 91, 93, 94, 97, 98, 108], "com": [67, 84], "comb": 17, "combin": [4, 6, 17, 20, 24, 30, 42, 43, 58, 65, 72, 74, 75], "combinations_it": 17, "come": [16, 76, 105], "command": [55, 57, 58, 59, 62, 67, 69, 80, 82], "comment": [54, 61, 68], "commit": [54, 55, 56, 65, 69], "common": [1, 4, 11, 18, 24, 25, 32, 34, 35, 37, 38, 54, 57, 58, 60, 63, 85, 97, 98], "commonli": 37, "commun": 54, "compact": 74, "compactifi": 71, "compar": [1, 4, 6, 34, 35, 37, 38, 58, 65, 69, 70, 80, 85, 88, 91, 100, 104, 107, 112], "comparison": [1, 34, 35, 37, 38, 44, 82, 85], "compat": [4, 61, 97, 98], "compet": 62, "compil": [15, 16, 17, 18, 19, 20, 22, 30, 38, 58], "complaint": 54, "complet": [1, 4, 6, 26, 33, 34, 35, 37, 38, 50, 58, 61, 67, 69, 74, 78, 80, 83, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 108], "complex": [13, 19, 21, 30, 32, 70, 71, 73], "compli": [57, 63], "compon": [7, 8, 58, 60, 61, 62, 65, 72, 88, 100], "compos": 63, "comprehens": [12, 57, 58, 63, 65], "compress": [82, 85], "compris": 64, "comput": [0, 1, 6, 10, 15, 16, 17, 20, 21, 22, 23, 24, 27, 28, 29, 30, 34, 35, 37, 38, 39, 45, 51, 61, 63, 73, 74, 75, 76, 78, 79, 80, 82, 83, 85, 89, 110, 113, 114, 115], "computation": 76, "compute_coeffs_poly_prod": 16, "compute_from_lut": 20, "compute_loocv": 10, "compute_monomials_from_lut": 20, "compute_vandermonde_n2c": 22, "conceiv": 33, "concept": [60, 63, 74, 75], "conceptu": 86, "concis": [61, 67], "conclud": [60, 83, 87], "conclus": 83, "concret": [0, 1, 2, 9, 10, 11, 12, 25, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 58, 61], "conda": [67, 84], "condens": 78, "condit": [19, 34, 35, 38, 61, 73, 77, 79, 80, 85, 86, 90, 91, 92, 94, 95, 107, 109], "conduct": [64, 68], "conf": [63, 76], "confid": 58, "config": 57, "configur": [56, 57, 63, 67], "confin": 63, "conflict": [57, 67, 69], "conform": [35, 73, 83], "conftest": 58, "confus": 68, "congratul": [80, 83, 87], "connect": [4, 67, 72], "consecut": 63, "consequ": [59, 65, 78], "consid": [1, 23, 27, 30, 34, 35, 37, 38, 54, 57, 58, 63, 68, 71, 74, 75, 76, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 102, 103, 106, 107, 109, 111, 112, 113, 114], "consider": [61, 62, 72], "consist": [0, 1, 2, 4, 6, 20, 27, 32, 34, 35, 37, 38, 57, 60, 61, 66, 75, 80, 81, 84, 86, 91, 112], "consol": 63, "constant": [1, 19, 34, 35, 37, 38, 58, 70, 71, 81], "constrain": 75, "constraint": [1, 63], "construct": [1, 2, 4, 6, 7, 10, 14, 15, 23, 25, 32, 33, 34, 35, 37, 38, 45, 48, 49, 50, 51, 52, 54, 58, 61, 62, 71, 72, 73, 74, 75, 77, 79, 81, 82, 84, 86, 87, 91, 92, 93, 94, 95, 108, 109, 113, 114, 115], "constructor": [33, 61, 62, 80, 85, 86, 87, 92, 93, 94, 95, 99, 100, 107, 108, 109, 110], "constuct": 71, "consult": 64, "contact": 54, "contain": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 15, 17, 19, 20, 24, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 50, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 82, 85, 90, 92, 95, 96, 100, 102, 103, 104, 107, 108, 109, 110], "contains_these_expon": [6, 112], "contemporari": 75, "content": [54, 60, 61, 62, 63], "context": [25, 37, 60, 61, 62, 65, 89], "contigu": 17, "continu": [58, 69, 71, 74, 115], "contour": [82, 83, 85, 86, 87], "contourf": [82, 83, 85, 86, 87], "contract": 81, "contrast": 74, "contrib": [63, 64], "contribut": [53, 54, 60, 63, 64, 65, 67, 68, 69, 115], "contributor": [54, 55, 63, 64, 65, 67, 115], "contriv": 62, "control": [65, 67], "contruct": 82, "convei": 61, "conveni": [12, 33, 76, 80, 85, 86], "convent": [19, 32, 55, 56, 57, 58, 62, 63, 66, 80, 83, 95, 97, 98, 110, 113, 114], "convention": 108, "converg": [74, 80, 83], "convers": [30, 32, 40, 61, 78], "convert": [6, 30, 32, 40, 65, 80, 85, 95], "convert_eval_output": 30, "convinc": 61, "cook": 62, "coordin": [16, 21, 71], "copi": [1, 4, 6, 34, 35, 37, 38, 43, 63, 65, 67], "coppersmith": 79, "core": [0, 1, 2, 4, 6, 7, 8, 12, 21, 61, 63, 82, 85], "correct": [4, 32, 47, 54, 59, 61, 62, 66, 67, 105], "correctli": [24, 57, 62], "correspond": [1, 6, 7, 10, 16, 27, 29, 30, 34, 35, 37, 38, 44, 58, 60, 62, 67, 70, 71, 73, 75, 76, 77, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 107, 108, 109, 110], "correspondd": 85, "cost": [74, 76, 83], "costli": 10, "could": [1, 32, 34, 35, 37, 38, 54, 64, 68, 69], "count": 74, "counter": 73, "coupl": [62, 66, 75, 86], "coven": 54, "cover": [58, 61, 63, 80, 82, 86, 87, 106], "coverag": 58, "cpu": [20, 38], "craft": 67, "cran": 74, "creat": [1, 4, 6, 8, 10, 12, 13, 14, 17, 19, 20, 26, 33, 34, 35, 37, 38, 58, 59, 60, 61, 62, 63, 65, 66, 82, 83, 84, 86, 89, 90, 96, 97, 99, 100, 102, 103, 104, 105, 107, 109, 111, 113], "create_lua_differenti": 20, "create_lut_differ": 20, "create_lut_differenti": 20, "creation": 108, "creativ": [63, 74], "crisp": 55, "critic": [15, 18, 58, 82, 85, 87], "cross": [10, 19, 61, 62, 67, 87], "cross_and_sum": 19, "crucial": [60, 63, 73, 75, 80], "ctrl": 59, "cultur": 53, "cup": 71, "curat": [60, 62], "current": [1, 4, 6, 20, 24, 34, 35, 37, 38, 53, 55, 58, 60, 62, 63, 67, 68, 69, 76, 81, 83, 105, 108], "curs": [53, 63, 71, 73, 76, 115], "curse_of_dimension": 63, "curv": 60, "custom": [6, 32, 33, 58, 63, 82], "custom_link_titl": 63, "cut": 80, "cv": [10, 87], "cycl": 58, "d": [1, 24, 32, 33, 34, 35, 37, 38, 68, 77, 79, 82, 103, 105, 106, 113, 114], "d_": 78, "damar": 53, "damp": 102, "daniel": [53, 60], "darstellbarkeit": 74, "data": [1, 2, 4, 5, 6, 10, 15, 25, 30, 33, 47, 61, 71, 72, 74, 77, 82, 83, 84, 85, 86, 87], "dataset": [10, 87], "date": [12, 74], "dd": [5, 6, 7, 15, 38, 42, 72, 73, 74, 78, 79], "ddot": 71, "de": [63, 74], "deactiv": 67, "deal": 83, "deboor1972": 63, "deboor1977": 63, "deboor1978": 63, "deboor2010": 63, "debug": 57, "debugg": 57, "dec": [12, 115], "decai": 81, "decid": [60, 68, 81], "decod": 71, "decompos": 41, "decomposit": [10, 41, 42, 43, 71], "decompost": 71, "decor": 18, "deem": 54, "deep": [1, 4, 6, 34, 35, 37, 38, 60], "deepai": 63, "deepcopi": [1, 4, 6, 34, 35, 37, 38], "deeper": 115, "deepli": [60, 66], "def": [58, 61, 82, 83, 85, 86, 87, 89, 91, 93, 102, 103], "default": [1, 4, 6, 10, 19, 24, 30, 32, 33, 34, 35, 37, 38, 59, 61, 63, 65, 67, 69, 73, 79, 80, 83, 85, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 106, 108, 109, 110, 112, 113, 114], "default_domain": [32, 34, 35, 37, 38], "default_lp_deg": [6, 33], "default_rng": [83, 87], "defin": [0, 1, 2, 3, 4, 6, 7, 10, 11, 16, 18, 20, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 58, 60, 61, 63, 64, 67, 71, 73, 74, 75, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 107, 108, 109, 111, 113, 114], "definit": [1, 4, 6, 26, 27, 29, 30, 34, 35, 37, 38, 57, 61, 82, 86, 102, 103, 109], "deg": 83, "degr": 74, "degre": [1, 4, 6, 14, 20, 21, 24, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 61, 70, 71, 73, 74, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 109, 110, 111, 112], "deleg": [1, 34, 35, 37, 38, 62], "delta": [73, 75, 80, 85, 86], "delta_": [73, 75, 80, 85, 86], "delv": 63, "demand": 74, "demonstr": [4, 6, 54, 61, 62, 63, 68, 80, 81, 82, 83, 85, 89, 97, 98, 100, 110, 111, 113, 114], "demonstrant": 86, "denot": [4, 10, 73, 75, 78, 80, 85, 87, 92], "depend": [8, 42, 58, 59, 62, 63, 67, 70, 71, 72, 76, 77, 81, 83, 86], "depth": [60, 61, 80, 81, 82, 85, 86, 87], "der": 74, "deriv": [0, 1, 2, 20, 30, 34, 35, 37, 38, 41, 70, 71, 73, 74, 76, 82, 87], "deriv_newt_ev": 30, "derivative_order_along": [20, 30], "derogatori": 54, "describ": [6, 26, 60, 61, 68, 80, 81], "descript": [3, 5, 8, 9, 12, 15, 18, 20, 25, 33, 36, 39, 40, 46, 57, 60, 63, 69], "design": [37, 62, 65, 66, 83, 87, 115], "desir": 47, "despit": [74, 87], "detail": [1, 4, 7, 11, 58, 59, 60, 62, 63, 67, 68, 72, 73, 80, 83, 88, 90, 92, 96], "detain": 63, "detect": [57, 59], "determin": [1, 4, 6, 14, 30, 32, 33, 34, 35, 37, 38, 61, 70, 71, 73, 74, 75, 77, 80, 87, 91, 92, 93, 94, 95, 96, 106, 108], "detriment": 63, "dev": [57, 58, 67, 69, 84], "dev1": [12, 115], "develop": [1, 8, 15, 53, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 80, 83, 84, 115], "deviat": 87, "dgesv": 10, "diagon": 10, "dick": 75, "dict": [7, 41, 42, 82, 85], "dictionari": [4, 42, 60, 61, 93], "did": 68, "die": 74, "diff": [1, 18, 20, 34, 35, 37, 38, 55, 82], "diff_newton": 38, "differ": [0, 1, 4, 5, 6, 7, 13, 15, 20, 21, 24, 26, 34, 35, 37, 38, 41, 42, 54, 60, 62, 63, 65, 72, 73, 74, 78, 79, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 105, 108, 110, 111], "differenti": [1, 18, 20, 30, 34, 35, 37, 38, 60, 81, 86], "difficult": [63, 73], "difficulti": 60, "digit": 63, "dim": [1, 6, 32, 34, 35, 37, 38, 61, 86], "dimens": [1, 4, 6, 10, 13, 14, 16, 19, 20, 21, 22, 24, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 61, 70, 71, 73, 74, 75, 79, 80, 81, 82, 85, 86, 88, 89, 91, 92, 93, 94, 95, 103, 105, 107, 110, 111], "dimension": [1, 4, 6, 10, 14, 16, 17, 19, 20, 24, 26, 27, 30, 31, 32, 33, 34, 35, 37, 38, 53, 61, 63, 71, 73, 75, 76, 78, 81, 82, 84, 85, 87, 88, 90, 96, 97, 98, 100, 101, 107, 109, 110, 111, 114, 115], "dimenst": 32, "diments": [32, 34, 35, 37, 38], "dingwal": 63, "direct": [20, 53, 55, 57, 62, 63, 71, 73], "directli": [1, 10, 34, 35, 37, 38, 57, 59, 60, 61, 63, 65, 66, 67, 76, 80, 84, 86, 87, 89, 102, 103, 113, 114], "directori": [55, 58, 59, 62, 63, 64, 67, 84], "disabl": [19, 54, 57], "discourag": 55, "discov": 115, "discuss": [5, 56, 63, 68, 69, 73, 76], "disjoint": [6, 26, 61], "displai": [58, 59], "distanc": 71, "distinct": [25, 60, 63, 71, 74, 75], "distribut": [30, 59, 71, 80, 86, 94], "disturb": 62, "dive": 86, "divers": 54, "divid": [1, 5, 7, 13, 15, 34, 35, 37, 38, 72, 73, 78, 79, 81, 82, 83, 85, 86, 87], "divis": [1, 34, 35, 37, 38, 86], "di\u00e1taxi": 60, "do": [1, 4, 8, 10, 25, 30, 32, 33, 34, 35, 37, 38, 57, 58, 59, 60, 63, 66, 68, 69, 74, 80, 81, 83, 84, 85, 86, 87, 107, 113, 114, 115], "doc": [4, 6, 57, 59, 61, 62, 63, 64, 65, 66, 67, 109], "docstr": [55, 57, 63, 65, 66], "document": [6, 10, 12, 15, 26, 30, 37, 38, 40, 53, 54, 55, 56, 67, 68, 69, 80], "doe": [6, 8, 15, 16, 17, 19, 20, 26, 30, 32, 34, 35, 38, 61, 62, 63, 68, 74, 81, 83, 86, 94, 105, 106, 107, 109, 112], "doesn": [58, 61, 62, 63, 66], "doi": [63, 71, 73, 75, 76, 78, 79], "domain": [1, 4, 5, 6, 12, 26, 28, 32, 33, 34, 35, 37, 38, 63, 73, 74, 77, 80, 81, 82, 83, 85, 87], "don": [60, 63, 68, 79], "done": [1, 30, 34, 35, 37, 38, 58, 63], "donn": 74, "dot": [17, 63, 71, 73, 74, 75], "doubl": 63, "doubt": 63, "down": [59, 60, 69, 81], "downward": [4, 6, 23, 26, 37, 51, 52, 61, 62, 71, 73, 79, 99, 100, 104, 113, 114], "dox": 54, "dposv": 10, "draw": 83, "dresden": [53, 70], "driscol": 79, "driven": 58, "drop": 69, "dsysv": 10, "dtype": [26, 30, 32, 105, 108, 110], "due": [1, 15, 20, 23, 30, 34, 35, 37, 38, 51, 62, 78], "dummi": 32, "dunder": 1, "duplic": [19, 26, 61, 63], "dure": [21, 55, 56, 58, 59, 65, 66, 86, 110], "dx_1": 82, "dx_2": 82, "dyn": [63, 79], "dyn2014": 63, "e": [1, 4, 5, 6, 8, 14, 15, 16, 17, 20, 21, 24, 26, 28, 30, 32, 34, 35, 36, 37, 38, 39, 42, 58, 60, 61, 63, 67, 69, 71, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 113, 114], "each": [1, 2, 4, 6, 10, 14, 15, 17, 19, 20, 21, 24, 26, 28, 30, 32, 34, 35, 36, 37, 38, 39, 43, 46, 58, 60, 61, 63, 64, 71, 73, 76, 80, 81, 82, 83, 85, 86, 87, 89, 91, 93, 94, 97, 103], "eager": 66, "earli": 19, "earlier": 63, "eas": 85, "easi": [60, 62], "easier": [60, 61, 65, 67, 83], "econom": 54, "edg": [42, 43, 58], "edit": [54, 62, 67, 73], "editeur": 79, "editor": [63, 75], "educ": [53, 54], "effect": [58, 61, 63, 67], "effici": [18, 26, 63, 70, 74, 76, 78, 79], "effort": 55, "eg": 30, "eidelman": 70, "einer": 74, "either": [1, 4, 24, 32, 34, 35, 37, 38, 58, 60, 62, 76, 77, 80, 89, 91, 95, 97, 98, 106, 112], "element": [4, 6, 17, 19, 20, 21, 24, 26, 34, 35, 38, 60, 62, 75, 80, 85, 86, 88, 90, 96, 99, 100, 105, 107, 108, 109, 111, 112], "elimin": [57, 79], "els": [8, 69], "email": 54, "email_address": 54, "embed": 65, "emiliano": 74, "empathi": 54, "empir": 80, "empirisch": 74, "emploi": [23, 51, 52, 63], "empti": [6, 26, 57, 61, 80, 85, 89, 100, 104, 106], "en": 63, "enabl": [39, 50, 57, 63, 78], "encapsul": [7, 67], "enclos": 61, "encod": [13, 20, 42], "encount": [66, 68, 86, 87], "encourag": [54, 57, 58, 60, 62, 66, 67, 83], "encyclopedia": 60, "end": [20, 57, 58, 60, 63, 71, 75, 82, 85, 86, 87, 89, 106, 112, 113, 114], "enforc": [55, 57, 63], "english": 61, "enhanc": [57, 63, 67, 68, 70], "enough": [77, 80, 81, 83, 85, 102], "enrich": 62, "ensembl": 73, "ensur": [0, 1, 2, 8, 11, 18, 56, 57, 58, 59, 62, 63, 67, 68, 73, 74, 77, 83], "entir": [75, 83], "entri": [19, 26, 30, 37, 61, 62, 63, 71, 75, 86], "enumer": [73, 80, 85], "env": 67, "environ": [54, 58, 62, 66, 68, 84], "epsilon_": 10, "eq": [63, 71, 75, 77], "equal": [1, 4, 6, 19, 24, 26, 34, 35, 37, 38, 43, 44, 58, 61, 66, 77, 80, 94, 95, 100, 104, 106, 108], "equat": [63, 70, 79, 87], "equation_nam": 63, "equidist": [73, 91, 93], "equidistant_gen_funct": [91, 93], "equiv": 103, "equival": [14, 24, 79, 85, 86, 113, 114], "erik": 74, "ermit": 76, "eror": 87, "error": [10, 18, 56, 57, 66, 68, 74, 76, 77, 80, 81, 83, 85, 87, 103], "escap": 61, "especi": [37, 58, 60, 67, 68, 76, 83], "essenti": [24, 58, 60, 67, 68, 72], "establish": [56, 80], "estim": [82, 83, 87, 102], "et": [53, 63, 73, 74], "etc": [6, 37, 55, 103, 108], "ethnic": 54, "euclidian": [10, 71, 73, 74, 85, 87], "eval": 18, "eval_all_newt_poli": 30, "eval_lp": 30, "eval_monomials_single_queri": 20, "eval_multiple_queri": 20, "eval_multiple_query_par": 20, "eval_newton": 38, "eval_newton_monomi": [30, 86], "eval_newton_monomials_multipl": 21, "eval_newton_monomials_singl": 21, "eval_newton_polynomi": [30, 38], "eval_newton_polynomials_batch": 30, "eval_output": 32, "eval_poli": [10, 87], "eval_polynomi": [27, 34], "evalu": [1, 4, 6, 10, 11, 16, 18, 20, 21, 23, 27, 28, 30, 32, 33, 34, 35, 37, 38, 49, 51, 70, 72, 73, 77, 78, 81, 83, 86, 99, 100, 102, 103], "evaluate_monomi": [28, 86], "evaluate_multipl": 30, "evaluate_polynomi": 28, "even": [1, 34, 35, 37, 38, 57, 58, 67, 74, 79, 80], "event": 54, "eventu": 65, "ever": 68, "everi": [1, 4, 30, 42, 55, 58, 59, 67, 93, 95, 110], "everyon": 54, "everyth": [8, 62, 66], "ewton": 76, "exact": [1, 4, 34, 35, 37, 38], "exactli": [61, 74], "exampl": [16, 19, 20, 24, 25, 26, 32, 54, 58, 60, 62, 64, 65, 66, 67, 68, 69, 71, 73, 75, 81, 82, 85, 87, 108, 110, 113, 114], "except": [1, 4, 6, 16, 19, 30, 32, 34, 35, 37, 38, 55, 61, 63, 65, 81, 82, 106, 112], "exclud": [10, 56, 59, 61], "exclus": 67, "execut": [20, 41, 55, 57, 58, 59, 62, 65, 67, 70], "exhaust": 63, "exhibit": 74, "exist": [4, 34, 35, 38, 57, 58, 62, 66, 68, 73, 74, 75, 79, 105], "exp": [81, 82, 85, 87, 102, 105, 108], "expand": [1, 4, 6, 24, 26, 34, 35, 37, 38, 58, 88, 106, 110, 112, 114], "expand_dim": [1, 4, 6, 24, 26, 34, 35, 37, 38, 61, 106, 112], "expand_dim_": 26, "expans": [6, 112], "expect": [26, 30, 32, 34, 35, 37, 38, 54, 58, 61, 68, 80, 81, 83, 85, 89, 97, 98, 111], "expected_dtyp": 32, "expected_typ": 32, "expens": [19, 30, 76], "experi": [54, 68], "experiment": [0, 41, 42, 43, 44, 45], "explain": [60, 63, 67, 68, 69, 75, 83, 85, 91, 94, 95, 102, 103, 111], "explan": [1, 30, 37, 38, 61, 67, 68, 72], "explanatori": 67, "explicit": [6, 19, 54, 61, 78, 91], "explicitli": [1, 20, 34, 35, 37, 38, 91], "explicityli": 18, "exploit": [19, 26, 39, 45, 70], "explor": [80, 81, 82, 83, 85, 86, 115], "explos": 17, "expon": [1, 4, 5, 6, 8, 14, 16, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 38, 61, 62, 63, 75, 80, 83, 85, 86, 90, 91, 92, 93, 94, 95, 96, 100, 104, 107, 109, 110, 111], "exponenti": [1, 34, 35, 37, 38, 74], "exponents_1": 16, "exponents_2": 16, "exponents_prod": 16, "expos": 60, "exposit": 60, "express": [1, 16, 32, 34, 35, 37, 38, 54, 72, 78, 81, 82, 86], "extend": [1, 8, 34, 35, 37, 38, 58, 63, 70, 73, 74, 75, 81, 105, 115], "extens": [60, 63, 64, 65, 70, 74], "extern": 84, "extra": [1, 9, 10, 11, 12, 24, 62, 68, 80], "extra_internal_domain": [1, 34, 35, 37, 38], "extra_user_domain": [1, 34, 35, 37, 38], "extrapol": [1, 34, 35, 37, 38], "extras_requir": 67, "ey": 66, "f": [10, 53, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 89, 102, 103, 106, 113, 114], "f_1": [71, 81, 87, 89], "f_2": [81, 87, 89], "f_r": 74, "facilit": 87, "fact": [57, 66, 70, 71, 73, 74, 75, 80, 82, 110], "factor": [43, 76, 83], "factori": [1, 14, 34, 35, 37, 38, 89], "factoris": [41, 42, 43, 76], "fail": [27, 57, 58, 59], "failur": [1, 34, 35, 37, 38, 58], "fair": 54, "fairli": 54, "fals": [1, 4, 6, 19, 24, 26, 30, 32, 34, 35, 37, 38, 61, 80, 82, 83, 85, 86, 87, 90, 96, 106, 107, 109, 110, 112, 113, 114], "familiar": [56, 60, 62, 65, 66, 78, 83, 84, 86, 87, 115], "famou": 74, "faq": 54, "far": [82, 86, 87], "fast": [21, 67, 74, 78], "faster": [18, 21, 30, 39, 70, 71, 76, 78], "favor": 55, "favour": 55, "fct": 33, "featur": [0, 1, 4, 6, 12, 32, 34, 35, 37, 38, 41, 42, 43, 44, 45, 58, 62, 63, 66, 69, 81, 83, 84, 85, 86, 87, 100], "feder": 53, "feedback": [54, 69], "feel": [58, 66, 67, 68], "fetch": [67, 69], "few": [83, 85], "ff": 67, "fig": [73, 74, 81, 82, 83, 85, 86, 87, 88, 90, 96, 97, 98], "figsiz": [81, 82, 83, 85, 86, 87, 88, 90, 96, 97, 98], "figur": [65, 73, 82, 83, 85, 86, 87, 102], "file": [55, 57, 58, 59, 62, 64, 65, 66, 67, 69], "filenam": 57, "filesystem": 57, "fill": 24, "fill_match_posit": 19, "filterwarn": [86, 102, 103], "final": [67, 69, 80, 81, 83, 85, 86, 87, 93, 102, 103, 111], "financ": 53, "find": [19, 23, 26, 47, 58, 63, 64, 66, 83, 87], "find_match_between": 26, "fine": [16, 20], "finish": [59, 69], "first": [1, 4, 16, 19, 20, 26, 29, 34, 35, 36, 37, 38, 48, 49, 51, 52, 56, 57, 58, 61, 62, 67, 68, 71, 73, 75, 76, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 94, 97, 98, 102, 103, 106, 108, 112, 114], "first_leaf_solut": 43, "fit": [4, 10, 11, 32, 61, 74], "five": [60, 64], "fix": [1, 30, 34, 35, 37, 38, 55, 57, 58, 63, 66, 67, 68, 69, 70, 71, 73, 78], "fixer": 57, "fixtur": 58, "flag": [6, 10, 26, 67], "flake8": 57, "flexibl": [18, 80, 87], "float": [1, 4, 6, 10, 14, 16, 20, 26, 30, 32, 34, 35, 37, 38, 61, 89, 91, 94, 95, 108, 110], "float64": 32, "floater": [63, 74, 79], "floor": [1, 34, 35, 37, 38], "flow": [62, 63], "fly": 91, "focu": [58, 60, 62], "focus": [54, 61, 63, 67, 74], "follow": [10, 19, 20, 21, 23, 34, 35, 38, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "fonction": 74, "font": 63, "fontsiz": [80, 81, 82, 83, 85, 86, 87, 91, 92, 93, 94, 95, 102], "footbibliographi": 63, "footcit": 63, "footnot": [60, 65], "footprint": [21, 30], "foral": [71, 74, 80], "foremost": 67, "forget": 63, "forgiv": [6, 112], "fork": 69, "form": [1, 4, 6, 17, 20, 21, 30, 34, 35, 37, 38, 43, 61, 64, 68, 71, 73, 75, 77, 80, 81, 85], "format": [30, 32, 40, 42, 43, 44, 56, 59, 61, 63, 65, 68, 80], "formatt": 57, "former": 53, "formul": 62, "formula": [73, 76, 89], "found": [4, 6, 60, 63, 66], "foundat": 72, "four": [60, 80, 102, 103], "frac": [10, 62, 71, 74, 80, 81, 82, 83, 85, 87, 90, 105, 107, 108, 109], "frameon": 80, "framework": [56, 66], "franciszek": 73, "frank": [82, 85], "free": [54, 60, 66, 67, 68, 83], "freedom": 67, "freeli": [61, 87], "from": [0, 1, 2, 3, 4, 6, 7, 10, 11, 14, 16, 17, 19, 20, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 59, 60, 61, 62, 63, 67, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 87, 89, 90, 91, 96, 102, 103, 107, 109, 110, 115], "from_degre": [1, 4, 6, 33, 34, 35, 37, 38, 62, 63, 80, 81, 82, 85, 86, 87, 88, 89, 91, 93, 94, 95, 97, 98, 102, 103, 105, 107, 108, 109], "from_funct": [4, 91, 92, 94, 95], "from_grid": [1, 34, 35, 37, 38, 80, 81, 82, 85, 86], "from_point": [4, 62, 91, 92, 93, 95], "from_poli": [1, 34, 35, 37, 38], "from_value_set": [4, 91, 92, 93, 94], "front": 63, "fulfil": 16, "full": [0, 10, 45, 63, 77, 86, 92], "fulli": [37, 55, 58, 67, 75, 83, 85, 87, 102, 103], "fun": [4, 31, 80, 82, 85, 86, 87, 102, 103], "fun_1": [81, 87], "fun_1d": 83, "fun_2": [81, 87], "fun_2d": 83, "fun_md": 83, "fun_one_dim": 89, "fun_two_dim": 89, "fun_valu": 89, "fun_with_arg": 89, "func": 63, "function": [0, 1, 2, 4, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 38, 40, 46, 47, 48, 49, 50, 51, 52, 58, 60, 62, 63, 68, 70, 71, 72, 73, 74, 76, 84, 86, 87, 92, 94, 95, 97, 98, 99, 100, 102, 103, 115], "fund": 53, "fundament": [6, 63, 64, 74, 115], "funktionen": 74, "further": [1, 57, 58, 62, 70, 71, 83, 85, 90, 96, 107, 109], "furthermor": [4, 61, 63, 81, 83, 87, 113, 114], "futur": [1, 27, 34, 35, 37, 38, 57, 58], "fx": 63, "fx_interp": [80, 85], "fx_interpol": 63, "g": [1, 5, 15, 20, 30, 32, 34, 35, 37, 38, 42, 58, 60, 61, 71, 76, 79, 96, 106, 109, 113, 114], "gain": 115, "gaur": 74, "gauss": [31, 73], "gauss_leg": 31, "gaussian": 79, "gautschi": [71, 73, 75, 78, 79], "gave": 79, "gc5fcb8d": [12, 115], "gen_backward_neighbor": 26, "gen_chebychev_2nd_order_leja_ord": 14, "gen_funct": [4, 61], "gen_missing_backward_neighbor": 26, "gen_point": [93, 94], "gen_points_chebyshev": [14, 93], "gen_points_from_valu": 14, "gen_valu": 95, "gender": 54, "gener": [1, 4, 6, 14, 15, 17, 18, 20, 21, 25, 26, 29, 30, 58, 59, 62, 63, 66, 70, 71, 74, 75, 76, 79, 80, 85, 86, 87, 90, 92, 96, 97, 98, 99, 100, 107], "generalis": [32, 71], "generate_internal_domain": [34, 35, 37, 38], "generate_user_domain": [34, 35, 37, 38], "generating_funct": [4, 61, 91, 92], "generating_point": [4, 20, 21, 29, 30, 61, 86, 91, 92], "generating_valu": [4, 14], "generation_point": 30, "genuin": 68, "geometr": 71, "geq": [4, 6, 61, 63, 71, 73, 74, 108, 109], "germani": 53, "get": [1, 10, 17, 19, 26, 34, 35, 37, 38, 57, 59, 60, 61, 62, 63, 64, 66, 68, 69, 72, 115], "get_exponent_matrix": 26, "get_max_columnwis": 17, "get_poly_degre": [26, 61], "get_regression_matrix": 10, "get_transform": 47, "get_transformation_class": 47, "get_xaxi": [80, 86], "get_yaxi": [80, 86], "getter": 61, "giant": 57, "giovanni": 75, "git": [57, 69, 84], "gitflow": 67, "github": [67, 69, 84], "give": [30, 54, 58, 71], "given": [1, 4, 6, 10, 14, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 58, 61, 63, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 109, 110, 112], "glimps": 60, "global": [0, 19, 39, 41, 42, 43, 44, 45], "glossari": 63, "go": [47, 55, 60, 63, 66, 67, 68, 69, 80, 84, 85, 102, 103], "goal": [62, 63, 70, 87, 115], "goe": 68, "gohberg": 70, "gonciarz": [53, 71, 73, 74, 76], "good": [59, 60, 61, 65, 67, 68, 81], "googl": 55, "got": 32, "gp": [73, 75], "gracefulli": 54, "grain": [16, 20], "gram": 10, "grammat": 66, "graph": 71, "grd": [80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103], "grd_1": [81, 85, 97, 98], "grd_2": [81, 97, 98], "grd_2d": 86, "grd_added_1": 88, "grd_added_2": 88, "grd_complet": 90, "grd_def": 91, "grd_downward_clos": 96, "grd_inf": 85, "grd_prod": 97, "grd_union": 98, "great": 68, "greater": 77, "greatest": [80, 83, 85], "grei": 71, "grid": [1, 2, 5, 7, 10, 15, 21, 23, 24, 25, 30, 32, 33, 34, 35, 37, 38, 48, 49, 50, 51, 52, 58, 61, 62, 63, 71, 73, 75, 77, 79, 81, 82, 86, 87, 100, 102, 103], "group": [60, 70], "growth": 74, "guarante": [4, 15, 19, 58, 61, 74, 77], "guenther": 79, "guid": [62, 63, 64, 65, 66, 67, 74, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "guidelin": [54, 56, 58, 62, 63, 66, 67, 68, 69], "h": [71, 74, 75, 76, 79], "h_": 71, "h_0": 71, "h_1": 71, "h_2": 71, "h_3": 71, "h_i": 71, "ha": [1, 4, 6, 16, 21, 22, 24, 28, 32, 34, 35, 37, 38, 58, 60, 61, 62, 64, 68, 70, 74, 80, 82, 83, 85, 86, 90, 91, 92, 93, 94, 95, 97, 98, 105, 107, 108, 109, 110, 111, 113, 114], "had": 69, "hale": 79, "half": 63, "hand": [6, 58, 86, 106, 108], "handi": 58, "handl": [30, 37, 38, 46, 50, 76, 112], "happen": [67, 68, 105, 112], "happi": 69, "harass": 54, "hard": 83, "hardli": [80, 83], "harm": 54, "harmless": 57, "has_generating_funct": 4, "has_matching_dimens": [1, 34, 35, 37, 38], "has_matching_domain": [1, 34, 35, 37, 38], "hasn": 32, "hat": [10, 77, 87], "have": [1, 2, 4, 6, 16, 19, 26, 30, 32, 34, 35, 37, 38, 43, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 74, 80, 81, 82, 83, 84, 85, 86, 87, 91, 93, 94, 95, 97, 98, 102, 103, 105, 108, 110, 111, 113, 114], "hayez": 74, "he": 63, "head": 69, "healthi": 54, "hebychev": 76, "hecht": [53, 71, 73, 74, 76], "helmholtz": 53, "help": [20, 38, 53, 60, 61, 66, 67, 68, 78, 83, 84, 86], "helper": [46, 47, 50], "here": [1, 20, 24, 30, 32, 34, 35, 37, 38, 54, 58, 60, 61, 62, 63, 66, 71, 80, 82, 83, 85, 109], "hernandez": 53, "hesit": 68, "hidden": [62, 67], "hide": 62, "hierarchi": 62, "high": [12, 15, 46, 47, 50, 73, 74, 76, 85, 86, 102, 103], "higher": [1, 4, 14, 20, 25, 26, 34, 35, 37, 38, 58, 71, 79, 81, 82, 83, 85, 86, 105, 110], "highest": 71, "highli": [58, 65, 74, 83, 86, 87, 103], "highlight": [55, 62, 63, 85], "histori": [60, 67], "hline": 80, "hold": [5, 24, 62, 73, 91, 92, 93, 94, 95, 105, 108], "hole": [6, 26, 96, 107, 109], "homepag": 64, "hood": [1, 34, 35, 37, 38], "hook": 55, "hope": [83, 87], "hormann": 74, "horner": 76, "host": [65, 67], "how": [41, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 72, 76, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115], "howev": [1, 4, 17, 19, 21, 34, 35, 37, 38, 55, 57, 58, 61, 63, 65, 67, 73, 74, 77, 79, 80, 81, 82, 83, 85, 86, 87, 91, 94, 106, 107, 109, 110], "html": [58, 59, 65], "htmlcov": 58, "http": [63, 67, 74, 82, 84, 85], "hyper": 71, "hypercub": [4, 61, 74], "hyperlink": 63, "hyperplan": [30, 71], "hypersurfac": 79, "hyphen": 61, "hzdr": 53, "i": [0, 1, 2, 4, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "ian": 75, "id": [58, 67, 111], "idea": [1, 30, 34, 35, 37, 38, 58, 59, 61, 66], "ideal": [58, 74], "ident": [26, 46, 54, 58, 71, 75, 94, 111], "identifi": [60, 63], "ieee": 74, "ignor": [59, 63, 86, 102, 103], "ii": 71, "ill": 79, "illustr": [61, 63, 65, 67, 81, 85], "imag": 74, "imageri": 54, "imit": 17, "immedi": 60, "immun": 63, "impact": [54, 73], "imper": [61, 67], "implement": [0, 1, 2, 4, 8, 9, 10, 11, 15, 17, 18, 19, 23, 24, 27, 30, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 66, 68, 70, 71, 76, 78, 82], "impli": [75, 80], "implicitli": 13, "import": [3, 57, 58, 60, 61, 62, 63, 74, 76, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "imprecis": 66, "imprimeur": 74, "improv": [30, 58, 60, 66, 67, 83, 115], "inaccur": 66, "inappropri": 54, "incid": 54, "inclin": 66, "includ": [6, 13, 26, 54, 55, 60, 61, 62, 63, 65, 66, 67, 68, 74, 81, 85, 108, 110], "inclus": 54, "incompat": [1, 4, 34, 35, 37, 38], "incomplet": [66, 90, 96, 107], "inconsist": [1, 4, 19, 24, 32, 34, 35, 37, 38], "inconveni": 68, "incorpor": 63, "incorrect": [32, 57, 66], "increas": [13, 26, 80, 83, 85], "increment": 58, "inde": [63, 71, 75, 79, 83, 86, 107, 109], "independ": [6, 8, 71, 107], "index": [1, 2, 4, 6, 7, 10, 13, 14, 16, 19, 20, 21, 26, 27, 29, 30, 33, 34, 35, 37, 38, 48, 49, 50, 51, 52, 58, 59, 61, 62, 63, 64, 73, 74, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 102, 103, 106, 111, 112, 113, 114], "index2insert": 26, "index_1": 19, "index_2": 19, "indic": [1, 2, 4, 5, 6, 8, 16, 18, 19, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 48, 49, 50, 51, 52, 61, 63, 70, 71, 73, 75, 80, 85, 86, 87, 88, 90, 94, 95, 107, 111, 113, 114], "indices2insert": 26, "indices_1": [19, 26], "indices_2": [19, 26], "indici": 71, "individu": [10, 53, 54, 58, 64], "induc": 71, "ineffici": [23, 51], "inf": [4, 26, 32, 85, 87, 92, 98, 111, 113, 114], "infer": [6, 16, 20, 26, 83, 90, 107, 108], "infin": [80, 81, 82, 83, 85, 87], "inform": [20, 23, 24, 48, 49, 51, 52, 54, 60, 61, 63, 64, 66], "infrastructur": 53, "infti": [10, 70, 74, 79, 80, 83, 85, 92, 98, 109, 113, 114], "ingredi": [4, 14, 33, 61], "inherit": [0, 1, 2, 11, 36, 39], "initi": [1, 4, 16, 20, 30, 34, 35, 37, 38, 57, 58], "initialis": [1, 34, 35, 37, 38, 43], "inner": 82, "inplac": [6, 61, 113, 114], "input": [0, 1, 4, 10, 17, 18, 19, 24, 30, 32, 34, 35, 37, 38, 41, 42, 43, 44, 45, 53, 61, 62, 66, 80, 83, 85, 87, 89, 112], "insensit": 57, "insert": [26, 88, 105], "insert_lexicograph": 26, "insid": [17, 58, 60, 62, 63, 64, 84], "inspir": 54, "instabl": [76, 102, 103], "instal": [57, 58, 59, 62, 80, 83], "instanc": [0, 1, 2, 4, 6, 10, 23, 25, 26, 29, 30, 32, 33, 34, 35, 37, 38, 47, 48, 49, 50, 51, 52, 54, 58, 61, 62, 63, 65, 66, 75, 76, 78, 80, 81, 82, 85, 86, 87, 89, 90, 92, 96, 99, 102, 103, 104, 107, 108, 109, 110, 112], "instead": [1, 4, 6, 17, 18, 19, 30, 32, 34, 35, 37, 38, 55, 58, 61, 63, 65, 66, 68, 72, 76, 82, 83, 85, 86, 106, 111, 112], "institut": [53, 63, 74], "instruct": [57, 60, 62, 63, 67], "instsanc": 88, "insult": 54, "int": [1, 4, 6, 7, 14, 17, 19, 24, 26, 30, 31, 32, 33, 34, 35, 37, 38, 42, 61, 91, 93, 105, 108, 110], "int64": [26, 32], "int_": [82, 103], "int_dtyp": 26, "int_valu": [102, 103], "integ": [1, 4, 6, 16, 17, 19, 20, 24, 26, 27, 28, 32, 34, 35, 37, 38, 61, 81, 82, 88, 105, 108, 112], "integr": [1, 27, 29, 30, 31, 34, 35, 37, 38, 58, 60, 61, 62, 63, 67, 70, 81, 86, 100], "integrate_monomi": 27, "integrate_monomials_lagrang": 29, "integrate_monomials_newton": 30, "integrate_ov": [1, 34, 35, 37, 38, 82, 102, 103], "integrate_over_newton": 38, "intend": [55, 58, 60, 67, 68], "intention": 63, "interact": [54, 63], "interest": [60, 68, 80, 82, 85, 86, 87], "interfac": [0, 1, 2, 11, 12, 15, 33, 46, 68, 84, 86, 87], "intermedi": 76, "intermediari": 30, "intern": [1, 12, 18, 30, 34, 35, 37, 38, 63], "internal_domain": [1, 32, 34, 35, 37, 38], "interp_1d": 83, "interp_1d_32": 83, "interp_2d": 83, "interp_4d": 83, "interpol": [4, 5, 10, 12, 14, 15, 20, 24, 29, 30, 53, 60, 61, 63, 70, 71, 72, 76, 77, 78, 79, 81, 82, 84, 87, 88, 89, 90, 96, 97, 98, 99, 115], "interpolatori": 77, "interpret": [61, 71], "intersect": 106, "intersphinx": 63, "intersphinx_map": 63, "interview": [63, 74], "introduc": [60, 71, 73, 75, 86], "introduct": [1, 34, 35, 37, 38, 71, 73, 75], "intuit": [37, 86], "inv": [10, 23, 51], "invalid": 32, "invers": [0, 10, 23, 51, 70, 74, 78], "inverse_transform": [1, 34, 35, 37, 38], "invert": [23, 51, 79], "invest": 60, "investig": [54, 80, 85], "invis": 54, "invok": [37, 57, 59, 62], "involv": [1, 34, 35, 37, 38, 39, 58, 60, 61, 63, 65, 70, 74, 76, 80, 81, 82, 86, 87, 110, 115], "ipynb": [59, 63, 64, 65], "irregular": [71, 103], "irrelev": [6, 61], "irrevers": 63, "is_compat": 4, "is_complet": [4, 6, 26, 90, 107, 110], "is_disjoint": [6, 26, 61, 106, 110], "is_downward_clos": [4, 6, 26, 96, 109, 110, 113, 114], "is_index_contain": 19, "is_lex_smaller_or_equ": 19, "is_lex_sort": 19, "is_propsubset": [6, 106], "is_propsuperset": [6, 106], "is_real_scalar": 32, "is_subset": [6, 106, 110], "is_superset": [6, 106, 110], "is_uniqu": 24, "isn": 60, "isol": 67, "isort": 57, "issu": [54, 57, 58, 59, 60, 63, 65, 66, 67, 69, 74, 78], "item": [6, 112], "iter": [17, 21, 26, 30], "itertool": [17, 30], "itken": 76, "its": [1, 4, 8, 19, 26, 32, 36, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 76, 79, 80, 81, 82, 83, 84, 85, 87, 89, 106, 108, 110], "itself": [8, 10, 37, 60, 76, 90, 96, 106, 109, 110], "ivo": [53, 71, 73, 74, 76], "j": [20, 63, 71, 73, 75, 76, 79, 85, 86], "janina": 53, "jannik": [53, 71, 73, 74, 76], "jargon": 60, "jat": [63, 79], "jean": [70, 74], "jit": [15, 17, 18, 19, 22, 30], "jit_compil": [16, 17, 19, 20, 21, 22], "josef": [71, 73, 75], "joss": 76, "journal": [63, 74, 76, 79], "judici": 63, "jump": 26, "jupyt": [57, 63, 64, 66], "jupyterlab": 62, "just": [1, 15, 18, 30, 33, 54, 55, 58, 60, 65, 67, 80, 82, 83, 85, 110], "k": [1, 16, 20, 21, 28, 30, 32, 34, 35, 37, 38, 58, 73, 74, 79, 85, 87, 109], "kai": 74, "keep": [6, 43, 58, 59, 61, 63, 67], "keepdim": 24, "kei": [0, 4, 32, 57, 61, 63, 64, 67, 80, 85, 93], "kept": 26, "ker": 79, "keyword": [1, 4, 10, 32, 34, 35, 37, 38, 61, 89], "kind": [14, 35, 36, 48, 49, 51, 52, 54, 73, 75, 86], "klau": 74, "know": [58, 60, 62, 66, 68, 83, 84, 97, 98], "knowledg": 25, "known": [10, 32, 63, 74, 76, 80, 82, 85, 87, 91], "kotik": 53, "kroneck": [73, 75, 80, 85, 86], "krzysztof": [53, 71, 73, 74, 76], "kuntzmann": 79, "kuo": 75, "kwarg": [1, 2, 4, 10, 11, 32, 34, 35, 37, 38, 48, 49, 50, 51, 52], "k\u00f6niglich": 74, "l": [70, 74, 79, 80, 87], "l2": 87, "l2n": 13, "l_": [10, 73, 74, 75, 76, 78, 79, 85], "l_1": [10, 70, 79], "l_2": [10, 73, 74], "l_p": [1, 4, 6, 26, 32, 33, 34, 35, 37, 38, 61, 62, 71, 73, 74, 75, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 105, 106, 109, 110, 111, 112], "la": [73, 74], "lab": 62, "label": [63, 80, 81, 83, 85], "labels": [80, 81, 82, 83, 85, 86, 87], "ladder": 54, "lag": [76, 78, 80, 85, 86], "lag_coeff": [102, 103], "lag_monomials_1d": 86, "lag_monomials_2d": 86, "lag_monomials_newt_basi": 86, "lag_monomials_newt_basis_2d": 86, "lag_poli": [80, 82, 85, 102, 103], "lag_poly_1": 81, "lag_poly_1d": 86, "lag_poly_2": 81, "lag_poly_2d": 86, "lagrang": [1, 4, 7, 10, 23, 25, 30, 33, 34, 35, 36, 37, 38, 43, 46, 48, 49, 52, 61, 63, 70, 74, 78, 79, 81, 82, 87, 89, 91, 92, 93, 94, 95, 102, 103], "lagrange2newton": 30, "lagrange_coeff": 33, "lagrange_polynomi": [36, 61], "lagrangepolynomi": [10, 15, 23, 34, 35, 37, 38, 48, 49, 51, 52, 58, 80, 81, 82, 85, 86, 102, 103], "lagrangetocanon": [51, 86, 102, 103], "lagrangetochebyshev": [51, 86], "lagrangetonewton": [51, 80, 81, 82, 85, 86, 102, 103], "lambda": [63, 80, 81, 83], "langl": [74, 75], "languag": [54, 61, 62, 63, 66, 67], "larg": [19, 38, 45, 57, 60, 66], "larger": [1, 4, 6, 19, 24, 26, 32, 34, 35, 37, 38, 76, 88, 94, 95], "larger_idx_set": [19, 26], "largest": [4, 96, 97, 98, 109, 113, 114], "last": [24, 32, 56, 67, 75, 115], "later": [1, 34, 35, 37, 38, 57, 58, 63, 67, 83, 86, 105], "latest": [67, 69, 84], "latex": [59, 63], "latexpdf": 59, "latter": [1, 32, 34, 35, 37, 38], "lattic": 79, "launch": 62, "layer": [0, 25, 60], "layout": [64, 82, 85], "lazili": 6, "lc": 78, "ldot": [4, 34, 35, 38, 62, 70, 71, 73, 74, 75, 77, 85, 90, 92, 107, 108, 109], "lead": [71, 74], "leaf": [42, 43, 71], "leaf_factor": 43, "leaf_posit": [42, 43], "leaf_siz": 43, "leak": 17, "learn": [33, 54, 60, 63, 65, 67, 80, 81, 82, 84, 85, 86, 87, 115], "least": [10, 32, 63, 72, 77, 87], "leav": [10, 67, 87], "left": [1, 6, 7, 10, 24, 29, 34, 35, 37, 38, 53, 62, 63, 70, 71, 73, 74, 75, 77, 79, 82, 85, 86, 87, 96, 105, 106, 107, 108, 109, 111, 112, 113, 114], "legend": [80, 81, 83, 85], "legendr": [31, 73], "leja": [4, 14, 30, 61, 73, 74, 76, 79, 80, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "len": [58, 80, 85, 87, 89, 97, 98, 110], "length": [1, 4, 6, 10, 17, 19, 20, 21, 26, 27, 32, 34, 35, 37, 38, 61, 63, 67, 83, 88, 89, 95], "leq": [4, 62, 63, 71, 73, 74, 75, 79, 80, 83, 85, 90, 92, 105, 107, 108, 109], "less": [18, 24, 32, 57, 65], "lesson": [60, 62], "let": [66, 71, 76, 78, 80, 83, 85], "letter": 67, "leur": 73, "level": [1, 4, 6, 12, 15, 25, 26, 33, 34, 35, 37, 38, 40, 42, 46, 47, 50, 54, 58, 59, 61, 62, 63, 64, 85], "leverag": [15, 58, 70, 78], "lex_sort": [26, 61], "lexicograph": [4, 6, 16, 17, 19, 26, 33, 61, 74, 96, 105, 107, 108, 109, 113, 114], "librari": [1, 4, 6, 34, 35, 37, 38, 63, 67], "lie": 10, "lift": [53, 71, 73, 76, 115], "light": 71, "like": [1, 6, 7, 24, 34, 35, 37, 38, 58, 60, 61, 64, 65, 66, 67, 68, 80, 82, 83, 85, 105, 108, 110], "limit": [61, 62, 63, 67, 74, 80, 86, 87], "linalg": 24, "line": [55, 58, 62, 67, 71], "linear": [10, 41, 70, 72, 73, 74, 79, 87], "linefe": 63, "liner": 63, "linestyl": 80, "linewidth": [80, 82, 83, 85, 86, 87], "link": [57, 62, 63, 66, 67], "linspac": [80, 81, 82, 83, 85, 86, 87, 91, 93, 102], "linter": 57, "linux": 59, "list": [1, 2, 4, 6, 7, 10, 11, 15, 17, 24, 26, 30, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 57, 60, 61, 62, 64, 67, 68, 69, 82, 86, 99, 101, 104, 112], "list_insert_singl": 26, "list_of_indic": 26, "liter": [57, 61], "literatur": [75, 82, 85], "live": [1, 4, 5, 6, 10, 30, 33, 34, 35, 37, 38, 59, 61, 63, 74, 80, 85, 91, 92, 93, 94, 95, 97, 98], "li\u00e9e": 73, "ll": [59, 60, 64, 69, 80, 81, 82, 85, 86, 87], "llig": 74, "lloyd": [70, 73, 74, 79], "ln": 78, "load": [57, 63], "lobatto": [4, 61, 73, 74, 79, 80, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98], "loc": 81, "local": [62, 63, 65, 66, 67], "locat": [25, 30, 58, 59, 62, 63, 64, 70, 80, 86], "log": [19, 70, 80, 85], "logic": 88, "logo": 63, "long": [1, 32, 34, 35, 37, 38, 58, 62, 63, 81, 95], "longer": 63, "longrightarrow": [71, 73, 74], "longstand": 63, "loo": [10, 87], "loocv_error": 10, "look": [20, 58, 66, 68, 80, 83], "lookup": 47, "loop": [14, 30], "loos": 67, "lost": 68, "lot": 63, "loui": 74, "low": [12, 15, 38, 40, 46, 58, 83], "lower": [15, 21, 25, 26, 27, 29, 30, 31, 32, 34, 37, 38, 43, 63, 71, 78, 79, 81, 82, 102, 112], "lp": [6, 24, 26, 32, 61, 89], "lp_degre": [1, 4, 6, 26, 32, 33, 34, 35, 37, 38, 61, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114], "lp_norm": 24, "lp_sum": 24, "lstsq": 10, "lstsq_solver": 10, "lu": 10, "lua": 20, "lua_differ": 20, "lua_prod": 20, "lut": 20, "lut_diff": 20, "lvert": [10, 62, 75, 77, 78, 80, 83, 85, 87, 90, 92, 105, 107, 108, 109], "lvert_": 85, "m": [1, 4, 6, 10, 14, 16, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 59, 61, 62, 63, 67, 70, 71, 73, 74, 75, 76, 78, 79, 82, 83, 85, 86, 92, 93, 94, 100, 101, 108, 110], "m1": 26, "m2": 26, "m3": 26, "mac": 59, "machin": [63, 67, 74, 76, 80], "machineri": 60, "made": [5, 53, 67, 80, 85], "madison": [63, 74], "mai": [1, 4, 6, 10, 15, 16, 20, 25, 27, 31, 32, 33, 34, 35, 37, 38, 45, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114], "main": [4, 6, 14, 15, 33, 53, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 80, 84, 85, 87, 100, 110], "maintain": [2, 5, 26, 47, 54, 58, 62, 64, 66, 67, 69], "major": [63, 80, 81, 82, 83, 85, 86, 87], "make": [4, 11, 14, 16, 17, 23, 24, 26, 30, 35, 44, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 68, 69, 74, 81, 83, 85, 86, 87, 99, 100, 104, 112], "make_axes_locat": [82, 83, 85, 86, 87], "make_coeffs_2d": 24, "make_complet": [1, 4, 6, 26, 34, 35, 37, 38, 61, 90, 96, 107], "make_deriv": 26, "make_downward_clos": [4, 6, 26, 96, 109], "makefil": 59, "mamba": [67, 84], "manag": [1, 53, 62, 65, 67], "mandatori": [61, 93, 94, 95, 108], "mani": [1, 6, 34, 35, 37, 38, 57, 58, 63, 67, 68, 75, 77, 80, 85, 95, 107], "manifest": 57, "manipul": [4, 16, 19, 26, 63, 74, 80, 84, 85, 86, 115], "manual": [55, 63], "map": [1, 26, 63], "mapping_kei": 63, "mark": [53, 61, 63], "markdown": [62, 65], "marker": [57, 80, 85, 87], "markup": [61, 62, 63], "mask": [7, 19, 29, 71], "match": [1, 4, 19, 34, 35, 37, 38, 58, 61, 71, 74, 85], "materi": 67, "math": [17, 61, 63, 73, 75, 79], "mathbb": [4, 6, 10, 62, 63, 70, 71, 73, 74, 75, 76, 77, 78, 79, 85, 86, 92, 107, 108, 109], "mathbf": [1, 34, 35, 37, 38, 77], "mathcal": [70, 71, 73, 74, 76, 77, 78, 79, 82, 85], "mathemat": [1, 34, 35, 37, 38, 60, 61, 62, 72, 74, 75, 79, 115], "mathematica": 74, "mathematici": 73, "mathematik": [74, 79], "mathematisch": 74, "mathjax": 63, "mathrm": [10, 21, 73, 74, 75, 76, 77, 78, 80, 81, 85, 86, 87], "matlab": 53, "matplotlib": [62, 63, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102], "matric": [15, 23, 24, 30, 44, 70, 78], "matrix": [0, 1, 10, 17, 20, 22, 24, 26, 30, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 71, 73, 77, 78, 79, 87], "matrix_oper": 39, "matrix_piec": 44, "matrixoper": [41, 42, 43, 44, 45], "matter": [62, 66], "max": [1, 4, 17, 32, 34, 35, 37, 38, 73, 80, 81, 82, 83, 85, 109], "max_": [10, 73], "max_expon": [4, 6, 20, 21], "maxdepth": 62, "maxim": 43, "maximum": [4, 6, 14, 17, 20, 21, 26, 29, 30, 61, 93, 94, 95, 110, 113, 114], "mayb": 32, "md": [67, 74, 84], "me": 74, "mean": [1, 18, 34, 35, 37, 38, 55, 58, 61, 63, 65, 67, 73, 74, 77, 81, 86, 87, 92], "meaning": [60, 63], "meant": [59, 64], "measur": [80, 81, 83, 85, 87], "media": [71, 73, 75], "meet": 68, "meijer": 74, "meilleur": 74, "mem": [1, 4, 34, 35, 37, 38], "member": [54, 66], "membership": [100, 104], "memo": 6, "memori": [17, 18, 21, 30, 45], "mention": [68, 83, 105], "menu": 69, "merg": [4, 56, 57, 65, 66, 67], "merging_fct": [41, 42, 43, 44], "mesh_2d": [82, 83, 85, 86, 87], "meshgrid": [82, 83, 85, 86, 87], "messag": [32, 67, 69], "met": 18, "meta": 60, "meth": [62, 63], "method": [1, 4, 6, 10, 11, 12, 30, 32, 34, 35, 37, 38, 41, 42, 43, 44, 58, 62, 63, 72, 74, 76, 80, 82, 85, 86, 87, 88, 89, 90, 91, 96, 102, 103, 105, 106, 107, 109, 112, 113, 114], "methodologi": 58, "mi": [63, 74, 80, 82, 85, 87, 90, 91, 93, 94, 95, 96, 102, 103, 105, 107, 108, 109, 110], "mi_1": [81, 85, 98, 110, 111], "mi_1d": 86, "mi_2": [81, 110, 111], "mi_2d": 86, "mi_3": 111, "mi_4": 111, "mi_5": 111, "mi_a": [106, 112, 113, 114], "mi_b": [106, 112, 113, 114], "mi_c": [106, 112, 113, 114], "mi_complet": [107, 109], "mi_d": [106, 113, 114], "mi_downward_clos": 109, "mi_e": [106, 113, 114], "mi_ext": 105, "mi_f": [106, 113, 114], "mi_g": [113, 114], "mi_inf": 85, "mi_prod_1": 113, "mi_prod_2": 113, "mi_prod_3": 113, "mi_union_1": 114, "mi_union_2": 114, "mi_union_3": 114, "michael": [53, 63, 71, 73, 74, 76, 79], "micha\u0142": 53, "michelfeit": [53, 71, 73, 74, 76], "middl": [71, 73], "might": [1, 42, 58, 59, 60, 61, 63, 67, 69, 78, 83], "migliorati": 75, "min": [1, 10, 32, 34, 35, 37, 38, 87], "mind": [58, 61, 63, 74], "minim": [60, 77, 87], "minimis": 43, "minimum": [6, 90, 107, 109], "ministri": 53, "minor": [63, 65], "mintepri": 63, "minterpi": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 73, 75, 76, 78, 79, 81, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "mip": 53, "mirror": 85, "mislead": [30, 66], "mismatch": [6, 106], "miss": [4, 26, 66, 68, 73, 107], "missing_neighbor": 26, "mistak": [54, 66], "mn": [21, 30, 70], "mod": 63, "mode": 67, "model": [10, 11, 55], "moder": [27, 38], "modern": [63, 74], "modif": [5, 6, 57, 58, 61, 63, 67], "modifi": [6, 15, 20, 55, 57, 58, 59, 62, 66, 67, 69, 105], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 58, 60, 63], "moment": 68, "monomi": [0, 1, 10, 16, 20, 21, 22, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 41, 42, 43, 44, 45, 61, 71, 73, 74, 75, 80, 85, 87], "monomials_placehold": [20, 21], "mononomi": 37, "monoton": 26, "monterei": [82, 85], "mood": [61, 67], "more": [4, 6, 7, 16, 18, 19, 24, 27, 30, 37, 38, 42, 58, 60, 61, 62, 63, 65, 66, 67, 71, 73, 76, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 96, 97, 98, 107, 109, 111], "moreov": [10, 25, 33, 38, 78], "mosaic": 70, "most": [1, 16, 17, 18, 20, 24, 32, 37, 60, 63, 68, 70, 80, 82, 86, 91], "motiv": [62, 97, 98, 113, 114], "move": [1, 34, 35, 37, 38, 84], "mozilla": 54, "mp": [62, 63, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "mpl_toolkit": [82, 83, 85, 86, 87], "much": [58, 65, 78, 86], "mul_newton": 38, "multi": [1, 2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 48, 49, 50, 51, 52, 61, 62, 63, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 96, 97, 98, 99, 100, 102, 103, 106, 111, 112, 113, 114], "multi_index": [1, 2, 4, 5, 7, 10, 18, 25, 33, 34, 35, 37, 38, 48, 49, 50, 51, 52, 61, 80, 86, 88, 90, 91, 97, 98, 102, 103], "multi_index_mnp": 58, "multidimension": [5, 7, 8, 16, 33, 53, 70, 72, 78, 79, 84, 86, 115], "multiindex": 30, "multiindexset": [1, 2, 4, 6, 7, 10, 15, 25, 34, 35, 37, 38, 48, 49, 50, 51, 52, 58, 61, 63, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 107, 108, 109, 110, 112], "multiindextre": [4, 7, 29, 61], "multipl": [0, 1, 4, 6, 13, 16, 20, 21, 24, 25, 26, 27, 28, 30, 32, 34, 35, 37, 38, 58, 61, 63, 70, 74, 75, 78, 79, 80, 82, 83, 85, 86, 88, 89, 97, 105], "multipli": [1, 4, 6, 16, 20, 21, 26, 34, 35, 37, 38, 76, 81, 98, 99, 100, 104], "multiply_indic": 26, "multivar_horn": 76, "multivari": [1, 6, 7, 15, 32, 33, 34, 35, 37, 38, 53, 63, 70, 71, 73, 74, 75, 76, 79, 80, 85, 103, 105], "multivariate_polynomial_abstract": 3, "multivariatepolynomialabc": [1, 50], "multivariatepolynomialsingleabc": [1, 2, 10, 34, 35, 36, 37, 38, 47, 48, 49, 50, 51, 52], "must": [0, 1, 2, 4, 6, 11, 16, 19, 20, 24, 26, 28, 32, 34, 35, 37, 38, 43, 56, 58, 61, 62, 63, 66, 67, 73, 74, 76, 77, 83, 85, 86, 88, 89, 91, 93, 94, 95, 103, 105, 106, 108, 109, 110, 111, 112], "my_backward_neighbor": 26, "my_gen_fun": 93, "my_index_1": 19, "my_index_2": 19, "my_index_3": 19, "my_index_4": 19, "my_indic": [19, 26], "my_indices_1": 26, "my_indices_2": 26, "my_indices_3": 26, "my_indices_4": 26, "my_missing_neighbor": 26, "mypi": 57, "myst": 62, "m\u00fchlbach": 76, "n": [1, 4, 6, 10, 14, 16, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 61, 62, 63, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 90, 92, 93, 94, 95, 105, 107, 108, 109, 110], "n1": 26, "n2": 26, "n3": 26, "n_": [63, 71, 73, 75, 76, 78], "n_b": 10, "n_choose_r": 17, "n_e": 10, "n_i": 71, "n_j": 73, "n_max": 20, "n_poli": [27, 34], "n_q": 10, "naiv": [16, 23, 51, 74, 76], "name": [4, 23, 33, 38, 57, 58, 61, 63, 67, 69, 80, 85, 93, 94, 95], "nan": [4, 32], "narr": [62, 63, 65], "narrowli": 58, "nation": [54, 63, 74], "natur": 15, "naval": [82, 85], "navig": [58, 59, 60, 64, 67, 69], "nb": 62, "nbmake": 59, "nc": 78, "ncol": [81, 82, 85, 86], "ndarrai": [0, 1, 4, 6, 7, 10, 14, 16, 17, 19, 20, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 61, 63, 82, 85, 89, 91, 93], "nderlichen": 74, "nearest": 63, "nearli": 60, "neatli": 61, "necessari": [4, 7, 33, 58, 63, 66, 67, 81, 82, 83, 85, 86, 87, 91], "necessarili": [32, 75, 87], "need": [1, 15, 29, 30, 33, 34, 35, 37, 38, 50, 54, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 80, 82, 83, 84, 85, 86, 87, 115], "neg": [1, 4, 6, 19, 20, 26, 28, 32, 34, 35, 37, 38, 61, 81], "negat": [1, 34, 35, 37, 38], "negoti": 56, "neighbor": 26, "neither": [4, 32, 33, 61], "neq": [74, 81], "nest": [30, 64], "net": 58, "nevertheless": 86, "nevil": 76, "new": [1, 4, 6, 24, 34, 35, 37, 38, 56, 59, 62, 63, 64, 65, 66, 67, 68, 69, 74, 76, 84, 86, 88, 90, 96, 105, 107, 109, 115], "new_coeff": [1, 34, 35, 37, 38], "new_exp": 105, "new_grid": [1, 34, 35, 37, 38], "new_indic": [1, 34, 35, 37, 38], "new_valu": 24, "newaxi": [80, 82, 83, 85, 86, 87, 91, 93], "newlin": 57, "newton": [4, 6, 7, 10, 16, 18, 20, 23, 25, 29, 33, 36, 38, 46, 48, 49, 51, 61, 63, 70, 71, 74, 78, 81, 82, 87, 91, 92, 93, 94, 95, 102, 103], "newton_polynomi": [30, 36], "newton_polynomial_basi": 63, "newtonpolynomi": [10, 15, 23, 34, 35, 38, 48, 49, 51, 52, 58, 80, 85, 86], "newtontocanon": [52, 86], "newtontochebyshev": [52, 86], "newtontolagrang": [52, 86], "next": [20, 71, 80, 81, 85], "nice": 83, "nichola": 79, "nira": [63, 79], "njit": [17, 18, 20], "nl": 78, "node": [1, 4, 7, 10, 14, 22, 23, 30, 34, 35, 37, 38, 42, 43, 49, 51, 53, 61, 70, 72, 74, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103], "non": [1, 4, 6, 15, 19, 20, 26, 28, 32, 34, 35, 37, 38, 56, 60, 61, 62, 71, 73, 76, 79, 81, 96, 109], "none": [1, 2, 4, 6, 7, 10, 21, 24, 26, 30, 32, 34, 35, 37, 38, 42, 43, 44, 48, 49, 50, 51, 52, 61, 86, 87, 91, 110, 112], "nor": [4, 32, 33, 61], "norm": [1, 4, 6, 10, 24, 26, 32, 33, 34, 35, 37, 38, 61, 62, 74, 75, 80, 81, 82, 83, 85, 87, 89, 90, 92, 105, 107, 108, 109], "normal": [10, 71, 87], "not_found": 19, "notabl": [55, 62, 65, 81, 83], "notat": [21, 30, 35, 63], "note": [0, 1, 2, 4, 6, 10, 13, 16, 17, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 59, 62, 67, 74, 75, 81, 83, 85, 86, 87, 90, 96, 97, 98, 106, 107, 109, 110, 111, 112, 114], "notebook": [57, 63, 64, 66], "noth": 58, "notic": [30, 63, 68, 80, 88, 89, 90, 93, 96, 97, 98, 105, 108, 113, 114], "notimplementederror": [32, 34, 35, 37, 38], "notion": [4, 6, 61, 72, 74, 75, 80, 86, 96], "now": [60, 67, 80, 81, 83, 85, 86, 87, 88, 89, 90, 96, 105, 107], "np": [1, 6, 14, 17, 19, 20, 24, 26, 28, 30, 32, 33, 34, 35, 37, 38, 58, 61, 63, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "nps53": [82, 85], "nr_": 21, "nr_polynomi": 21, "nrow": [81, 82, 85, 86], "nto": 61, "null": 79, "num": 79, "num_active_monomi": [1, 34, 35, 37, 38], "num_coeff": 85, "num_monomi": 32, "num_point": 31, "num_polynomi": 58, "numba": [15, 16, 17, 18, 19, 20, 21, 30, 32, 38], "number": [1, 4, 6, 10, 14, 16, 17, 19, 20, 21, 22, 24, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 61, 67, 71, 73, 77, 80, 81, 83, 85, 88, 94, 95, 108], "number_of_monomi": 26, "numer": [12, 15, 16, 18, 24, 25, 26, 30, 38, 57, 58, 60, 61, 62, 71, 73, 74, 75, 76, 78, 79, 80, 82, 83, 85, 86, 100], "numerisch": [74, 79], "numpi": [1, 4, 6, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 55, 61, 62, 63, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "nwt": [73, 76, 78, 80, 85, 86], "nwt2lag_matrix": [23, 51], "nwt_monomials_1d": 86, "nwt_monomials_2d": 86, "nwt_poli": [80, 85, 102, 103], "nwt_poly_1d": 86, "nwt_poly_2d": 86, "o": [19, 21, 30, 59, 70, 71, 73, 74, 76, 78, 79], "obj": 32, "object": [1, 2, 4, 6, 7, 11, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 60, 63, 80], "oblig": 54, "observ": [10, 71, 73, 75, 79, 85, 87], "obstruct": 63, "obtain": [10, 72, 73, 76, 77, 80, 82, 83, 84, 85, 87, 89, 97, 98, 103], "obviou": 111, "occasion": 63, "occupi": 71, "off": [30, 76, 83], "offens": 54, "offer": [60, 63, 83, 84], "offici": [54, 62], "offlin": 54, "often": [60, 62, 63, 65, 77], "old": 56, "olshevski": 70, "omega": [70, 73, 74, 75, 76, 78, 79, 82], "onboard": 60, "onc": [2, 6, 16, 17, 48, 49, 50, 51, 52, 58, 59, 66, 67, 69, 72, 76, 80, 81, 84, 85, 86, 87], "one": [1, 2, 4, 6, 10, 14, 17, 19, 20, 24, 26, 27, 31, 32, 34, 35, 37, 38, 39, 40, 46, 58, 59, 60, 61, 62, 63, 66, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 93, 94, 95, 97, 98, 102, 105, 111, 113, 114], "ones": [4, 59, 71], "ongo": [0, 41, 42, 43, 44, 45, 70], "onli": [0, 1, 4, 5, 6, 25, 26, 30, 34, 35, 37, 38, 41, 42, 43, 44, 45, 57, 58, 67, 70, 73, 74, 75, 79, 81, 83, 86, 87, 92, 95, 97, 98, 106, 111], "onlin": [54, 65], "onto": [1, 26], "op": 6, "open": [54, 59, 60, 61, 62, 66, 67, 68, 69, 76, 80, 115], "oper": [0, 1, 2, 3, 4, 6, 12, 15, 23, 24, 25, 30, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 57, 58, 70, 76, 78, 79, 80, 84, 86, 87, 97, 98, 102, 103, 106, 110, 111, 112, 113, 114], "operand": [1, 4, 6, 16, 34, 35, 37, 38, 97, 98, 106, 110, 113, 114], "operator_abstract": 3, "operatorabc": [0, 2, 23, 39, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52], "opinion": [54, 57], "oplus_": [73, 75], "opportun": 67, "optim": [53, 74, 77, 79], "option": [1, 2, 4, 6, 10, 24, 26, 30, 34, 35, 37, 38, 48, 49, 50, 51, 52, 58, 59, 61, 62, 63, 66, 67, 68, 82, 83, 91, 92, 108], "order": [1, 4, 6, 14, 16, 19, 20, 26, 30, 34, 35, 37, 38, 57, 60, 61, 71, 73, 74, 76, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 103], "ordinari": [9, 10], "ordinary_regress": 9, "ordinaryregress": [10, 58, 87], "ordinaten": 74, "ordr": 74, "org": [63, 74], "organ": [7, 25, 60, 64, 66], "orient": [54, 60, 82, 83, 85, 86, 87], "origin": [1, 2, 10, 23, 24, 34, 35, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 67, 80, 82, 83, 85, 86, 87, 105, 110], "origin_poli": [2, 10, 48, 49, 50, 51, 52], "origin_polynomi": 47, "origin_typ": [2, 47, 48, 49, 50, 51, 52], "other": [0, 1, 2, 4, 6, 8, 17, 24, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 58, 61, 62, 65, 67, 68, 71, 72, 73, 74, 75, 76, 80, 81, 83, 84, 86, 87, 91, 92, 97, 106, 108, 110, 114], "otherwis": [1, 4, 6, 19, 26, 32, 34, 35, 37, 38, 54, 57, 68, 85, 90, 96, 106, 107, 109, 112], "our": [64, 66, 67, 68, 70, 75, 80], "ourselv": 60, "out": [1, 5, 6, 10, 11, 19, 23, 32, 34, 35, 37, 38, 49, 51, 57, 58, 61, 62, 64, 66, 67, 68, 78, 79, 80, 81, 83, 84, 86, 87, 97, 100, 102, 103, 112, 113, 114], "outcom": [60, 61, 97, 98], "outlin": [60, 62, 65, 66, 78, 80], "output": [0, 4, 6, 17, 18, 21, 27, 30, 31, 32, 33, 34, 41, 42, 43, 44, 45, 58, 61, 62, 65, 83, 87], "outsid": 8, "over": [1, 4, 6, 24, 30, 31, 34, 35, 37, 38, 63, 74, 80, 82, 83, 85], "overal": [5, 54, 55, 63, 83, 87], "overfit": 74, "overflowerror": 17, "overli": 63, "overload": 0, "overview": [12, 82], "overwritten": [0, 1, 2, 45, 50], "own": [1, 36, 54, 61, 62, 63, 64, 67], "oxford": 79, "p": [1, 4, 6, 16, 21, 24, 26, 29, 30, 32, 34, 35, 37, 38, 61, 62, 63, 70, 71, 73, 74, 75, 78, 79, 85, 86, 89, 90, 92, 105, 107, 108, 109, 110, 113, 114], "p1": [1, 34, 35, 37, 38], "p2": [1, 34, 35, 37, 38], "p_": [20, 63, 71, 73, 74, 75, 78, 79, 80, 85, 86], "p_0": [71, 73, 74], "p_1": 71, "p_2": 71, "p_a": [63, 71, 73, 74, 75, 78, 79, 80], "p_i": [71, 73, 74, 75, 80], "p_j": [71, 73, 75], "p_k": 73, "p_n": [71, 74], "p_x": 73, "p_y": 73, "packag": [3, 5, 8, 9, 12, 15, 18, 25, 36, 39, 40, 46, 63, 65, 67, 74, 76, 80, 81, 82, 84, 85, 86, 87, 115], "pad": [6, 82, 83, 85, 86, 87, 112], "pafnuti": 79, "page": [60, 61, 62, 64, 67, 69, 72, 73, 74, 75, 76, 78, 91, 92, 93, 94, 95, 99, 100, 101, 104], "paint": 68, "pair": [19, 87], "panda": [80, 83], "panel": 71, "par": [38, 68, 74], "paragraph": 62, "parallel": [20, 38, 71], "paramet": [0, 1, 2, 4, 6, 7, 10, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 66, 106, 108, 109, 112, 113, 114], "parameter": 58, "parametr": 30, "parent": [41, 62], "pari": 79, "parliament": 53, "pars": [57, 63], "part": [0, 1, 8, 12, 17, 29, 33, 41, 42, 43, 44, 45, 59, 62, 63, 67, 73, 80, 85, 86], "partial": [1, 34, 35, 37, 38, 67, 70, 82, 112], "partial_": 71, "partial_diff": [1, 34, 35, 37, 38, 82], "partial_diff_newton": 38, "particip": 54, "particular": [17, 25, 57, 58, 61, 62, 63, 73, 76, 82, 84, 87, 93, 94, 107], "particularli": [60, 61, 87], "partli": 53, "pass": [1, 2, 4, 6, 10, 14, 17, 20, 30, 32, 34, 35, 37, 38, 48, 49, 50, 51, 52, 56, 57, 58, 61, 67, 82, 85, 87, 89, 92, 93, 108, 110], "past": [63, 65], "path": [63, 67], "paul": 70, "pd": [80, 83], "pdf": [59, 65], "pdflatex": 59, "peopl": [54, 60, 67], "pep": [1, 65], "pep8": 55, "per": [4, 6, 14, 20, 34, 35, 37, 38, 58, 61, 85, 89, 91, 94], "perform": [0, 7, 13, 15, 18, 19, 30, 38, 40, 41, 42, 47, 58, 60, 61, 62, 67, 78, 80, 81, 82, 85, 86, 87], "perhap": [4, 111], "permalink": 57, "perman": 54, "permiss": 54, "permit": 30, "perpetu": 66, "person": 54, "perspect": [62, 71, 73], "phenomenon": 74, "phrase": 66, "physic": 54, "physik": 74, "pi": [73, 74, 81, 83, 87, 102], "pi_": [71, 75], "pi_a": [71, 73, 74, 75, 76, 78, 79], "piec": 42, "piecewis": [41, 44], "pinv": 10, "pioneer": 79, "pip": [67, 84], "pipelin": 68, "pivot": 10, "pixel": 63, "place": [6, 20, 25, 54, 57, 58, 61, 62, 63, 66, 80, 87, 105], "placehold": [0, 1, 2, 16, 20, 21, 22, 32, 34, 35, 37, 38, 42, 43, 44, 45, 50, 67, 69, 86], "plai": 0, "plain": 65, "plan": 73, "plane": 71, "plasma": [82, 83, 85, 86, 87], "platform": 67, "pleas": [8, 56, 58, 62, 63, 66, 67, 68, 69, 81, 109], "plot": [62, 65, 80, 81, 82, 83, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 102], "plot_surfac": [82, 83, 85, 86, 87], "plt": [80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102], "plu": [1, 14, 34, 35, 37, 38], "plugin": 67, "png": 63, "point": [1, 4, 10, 14, 15, 16, 20, 21, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 56, 58, 61, 62, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100], "pole": 74, "poli": [1, 6, 10, 20, 26, 32, 34, 35, 37, 38, 61, 82], "polit": 54, "polonici": 73, "poly_1": [34, 35, 38, 58, 81], "poly_1_exp_0": 81, "poly_2": [34, 35, 38, 58, 81], "poly_2_exp_0": 81, "poly_add": 81, "poly_class_al": 58, "poly_degre": [1, 4, 6, 14, 26, 32, 33, 34, 35, 37, 38, 61, 80, 83, 85, 89, 90, 91, 92, 93, 102, 103, 105, 107, 108, 109, 110, 113, 114], "poly_diff_0_1": 82, "poly_diff_0_1_1_1": 82, "poly_diff_0_2_1_1": 82, "poly_diff_1_1": 82, "poly_exp": 81, "poly_mul": 81, "poly_pow": 32, "poly_scalar_add": 81, "poly_scalar_div": 81, "poly_scalar_mul": 81, "poly_scalar_sub": 81, "poly_sub": 81, "polyn": 74, "polynom": 74, "polynomi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 32, 33, 34, 35, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 61, 63, 70, 71, 72, 73, 78, 79, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 105, 109, 113, 114, 115], "polyomi": 30, "popular": 67, "pose": 77, "posit": [4, 6, 19, 26, 27, 29, 32, 42, 44, 54, 61, 71, 89, 108], "possess": [37, 63], "possibl": [17, 30, 32, 33, 44, 54, 58, 61, 62, 63, 65, 74, 83, 87], "possibli": [1, 26, 34, 35, 37, 38, 57, 63, 73, 83, 93], "postgradu": [82, 85], "potato": 62, "potenti": [41, 57, 61, 63, 64, 68, 74, 76], "power": [1, 24, 32, 34, 35, 37, 38, 73, 74, 75, 81, 86], "pp": [74, 76], "practic": [58, 60, 61, 63, 67, 73, 74, 77, 80, 81, 83, 84, 91, 115], "pre": [10, 21, 30, 32, 55, 56], "preced": [61, 63], "preceq": 75, "precis": [58, 74, 76, 80], "precomp": 40, "precomput": [21, 30, 33, 40, 42, 43, 44, 70, 71, 78], "predefin": 55, "predict": [10, 11, 87], "predominantli": [25, 63], "prefer": [38, 59, 63, 76, 80, 83], "preferr": 85, "preliminari": [70, 78], "prepar": 83, "preprint": [53, 71, 73, 74, 76], "present": [19, 59, 64, 67, 68, 72, 76, 78, 79, 80], "preserv": 74, "press": [59, 76], "preu\u00dfischen": 74, "prev_lua_prod": 20, "prevent": [25, 57, 58, 67], "preview": [59, 66], "previou": [20, 79, 81, 85, 86, 87, 89, 105, 107, 111], "previous": [63, 65, 80, 83, 85], "primarili": [58, 60, 65, 80], "primer": 63, "principl": [65, 71, 74, 81, 85, 86], "print": [11, 26, 58, 81, 82, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 105, 107, 108, 109, 110, 113, 114], "prior": [5, 30, 68, 71], "priori": 110, "privaci": 54, "privat": [54, 57], "probabl": 62, "problem": [10, 30, 38, 42, 43, 60, 63, 67, 68, 71, 72, 74, 77, 79, 86, 89], "proc": 76, "proce": 83, "procedur": [32, 95], "proceed": 74, "process": [0, 19, 53, 55, 58, 59, 65, 74, 78, 80, 86, 87], "procida": 60, "prod": [86, 89, 103], "prod_": [63, 71, 73, 75, 76, 80, 85, 86, 89, 103], "produc": [16, 80, 85, 86, 108], "product": [4, 6, 16, 17, 19, 20, 21, 24, 26, 30, 32, 34, 35, 37, 38, 61, 63, 67, 74, 75, 76, 79, 81, 89, 97, 98, 110, 113, 114], "products_placehold": [20, 21], "profession": 54, "profici": 60, "program": 63, "progress": [60, 66, 79], "project": [5, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 68, 69, 71, 74, 82, 83, 85, 86, 87], "promin": 73, "promot": 58, "promptli": 54, "prone": 76, "proof": 74, "propag": [1, 4, 33, 34, 35, 37, 38], "proper": [6, 63], "properli": [16, 20, 32, 59, 62, 63], "properti": [0, 1, 2, 4, 6, 7, 10, 30, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 58, 61, 63, 73, 78, 80, 87, 90, 96, 107, 108, 109, 110, 111], "propon": 66, "propos": 67, "protect": 57, "prototyp": 53, "provid": [1, 4, 6, 8, 9, 10, 12, 13, 27, 28, 29, 30, 33, 34, 35, 37, 38, 47, 53, 54, 57, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 77, 78, 80, 82, 83, 85, 86, 91, 92, 93, 94, 95, 102, 103, 108], "pseudo": 10, "psi_": [75, 77, 78, 80, 85, 86], "public": [1, 12, 38, 54, 61, 79, 84, 115], "publicli": [15, 40], "publish": [54, 65], "pull": [66, 67], "purpos": [32, 33, 58, 60, 61, 62, 67, 72], "push": 69, "put": [58, 62, 63, 66], "py": [57, 58, 62, 63, 65, 67], "py37": 57, "pycon": [60, 63], "pyenv": 67, "pypi": 84, "pyplot": [80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102], "pytest": [58, 59], "python": [1, 4, 6, 17, 33, 34, 35, 37, 38, 53, 55, 57, 58, 59, 61, 63, 65, 67, 76, 80, 81, 82, 83, 84, 85, 86, 87, 102, 103, 115], "python_vers": 67, "q": [71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87], "q_": [70, 71, 73, 74, 79, 81], "q_0": 71, "q_1": [71, 81], "q_2": [71, 81], "q_3": 81, "q_h": 71, "q_i": 71, "q_j": 71, "q_n": [71, 74], "qr": 10, "quad": [25, 71, 73, 74, 75, 76, 78, 79], "quadrat": [73, 79], "quadratur": [25, 31], "qualiti": [57, 66, 87], "quantifi": 83, "quantit": 83, "quantiti": 32, "quantiz": 71, "queri": [1, 10, 20, 21, 27, 28, 30, 32, 34, 35, 37, 38, 72, 73, 76, 81, 83, 85, 86, 87], "question": [54, 62, 68], "quick": [66, 84], "quickli": 83, "quickstart": [60, 83, 86], "quidistanten": 74, "quit": 69, "r": [1, 10, 17, 26, 61, 70, 71, 73, 74, 75, 76, 77, 78, 79, 85, 87, 108, 113, 114], "r_a": 77, "race": 54, "rais": [1, 4, 6, 16, 17, 19, 24, 30, 32, 34, 35, 37, 38, 66, 81, 82, 106, 112], "rand": [58, 81, 82, 85], "random": [58, 80, 81, 82, 83, 85, 87], "randomli": [77, 87], "rang": [38, 61, 67, 80, 86], "rangl": [74, 75], "rank": 77, "rapidli": 79, "rate": 74, "rather": [60, 61, 63, 73], "ration": [63, 74, 81], "re": [8, 17, 20, 33, 56, 58, 59, 60, 62, 65, 66, 67, 68, 69, 71, 83, 84], "reach": [74, 80], "read": [6, 60, 63, 65, 84], "readabl": [63, 66, 68], "reader": [63, 82, 85], "readi": [66, 67, 69, 80, 81], "readili": 86, "readm": 67, "real": [1, 24, 32, 34, 35, 37, 38, 71, 81], "realis": 71, "realiz": [43, 75, 76, 78, 79], "realli": 4, "reason": [17, 19, 26, 50, 54, 63, 67, 76], "rebas": 26, "rebuild": 59, "recaptur": 71, "recent": [24, 32], "recip": [60, 62], "recogn": 74, "recogniz": [64, 80, 83], "recommend": [55, 57, 58, 62, 63, 65, 66, 67, 80, 84, 86, 102, 103], "recompil": 59, "recomput": 30, "reconstruct": [41, 42, 43, 44], "rectifi": [30, 58], "recurr": [75, 86], "recurs": [30, 39, 78], "recycl": 20, "red": 73, "redefin": [82, 85], "reduc": [13, 39, 70], "redund": 91, "reellen": 74, "ref": [63, 69, 76], "ref_valu": 103, "refac": 30, "refactor": [14, 30, 40], "refer": [1, 2, 4, 6, 7, 10, 11, 19, 24, 26, 34, 35, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 55, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 109, 115], "referenc": [62, 69], "refin": 58, "reflecet": 71, "reflect": [60, 67, 69, 71], "reg_poli": 87, "regard": [20, 37, 38, 63, 68, 92, 113, 114], "regardless": [0, 6, 54], "regex": 58, "regfit_l2_error": 10, "regfit_linf_error": 10, "region": 82, "registri": [2, 47, 48, 49, 50, 51, 52], "regress": [8, 10, 11, 30, 58, 60, 68, 72, 84], "regression_abc": 9, "regressionabc": [10, 11], "regular": [42, 74, 83], "reinforc": 63, "reiniti": 20, "reject": 54, "rel": [38, 60, 62, 63, 87, 103], "relat": [1, 4, 6, 10, 18, 22, 25, 31, 34, 35, 37, 38, 46, 58, 60, 62, 63, 64, 66, 75, 83, 85, 86, 99, 101, 104], "relax": [1, 34, 35, 37, 38], "releas": [12, 15, 67, 69, 84], "relev": [4, 6, 17, 23, 25, 26, 27, 28, 29, 30, 32, 33, 37, 38, 57, 62, 63, 69, 75, 80, 83, 97, 98, 109], "reli": [1, 4, 8, 32, 34, 35, 37, 38, 58, 61, 62, 73, 74, 83], "religion": 54, "reload": 59, "remain": [4, 86, 87, 113, 114], "remark": [57, 62], "rememb": 63, "remot": 67, "remov": [8, 14, 26, 32, 54, 57, 61], "renam": [14, 30, 63], "render": [61, 63], "repeat": [32, 34, 35, 37, 38, 71, 94, 95], "repetit": 32, "replac": [63, 67, 69], "repli": 68, "replic": 95, "report": [58, 63, 70, 74, 82, 85], "repositori": [54, 64, 65, 66, 69, 84], "repr": 6, "repres": [1, 4, 5, 6, 8, 12, 19, 25, 29, 33, 34, 35, 37, 38, 39, 45, 59, 61, 72, 73, 76, 77, 80, 81, 82, 85, 86, 87, 108], "represent": [0, 30, 33, 41, 42, 43, 44, 45, 72, 76, 78], "reproduc": 68, "repr\u00e9sent": 73, "request": [56, 57, 65, 66, 67], "requir": [1, 4, 6, 13, 17, 18, 21, 26, 32, 34, 35, 37, 38, 39, 40, 45, 57, 58, 59, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 86, 87, 89, 91, 92, 93, 94, 95, 96, 106, 109], "rescal": [1, 34, 35, 37, 38], "research": [53, 63, 70, 74], "reserv": 15, "reset": 63, "reshap": [80, 82, 83, 85, 86, 87], "resist": 74, "resolv": [54, 67, 69, 74], "resort": 85, "resourc": [45, 58, 62, 69], "resp": [81, 106], "respect": [1, 4, 6, 10, 20, 26, 34, 35, 37, 38, 42, 43, 54, 61, 63, 69, 71, 73, 75, 77, 78, 79, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 109, 112, 113, 114], "respons": [0, 10, 16, 18, 34, 35, 38, 53, 57, 58, 62, 83], "rest": [61, 63, 64, 65, 71], "restrict": [57, 62, 106], "restructuredtext": [61, 64, 66], "result": [1, 4, 6, 16, 19, 21, 24, 26, 29, 30, 33, 34, 35, 37, 38, 45, 58, 59, 61, 63, 65, 67, 70, 71, 73, 74, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 96, 97, 98, 107, 108, 109, 110, 113, 114], "result_placehold": 16, "retriev": [47, 86], "return": [0, 1, 2, 4, 6, 7, 10, 14, 17, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 109, 112], "reus": [1, 2, 34, 35, 37, 38, 48, 49, 50, 51, 52, 63], "review": [53, 54, 56, 65, 66, 67, 69, 70, 72, 75], "revisit": 72, "rewrit": 61, "rf": 85, "rho": 74, "rhode": 63, "rich": 63, "richard": [63, 82, 85], "right": [1, 7, 10, 15, 29, 34, 35, 37, 38, 54, 61, 62, 63, 66, 70, 71, 73, 74, 75, 77, 79, 81, 82, 83, 85, 86, 87, 105, 106, 107, 108, 109, 111, 112, 113, 114], "rightarrow": [71, 74], "rigor": 109, "riqu": 79, "riv": 79, "rlicher": 74, "rm": 67, "rng": [83, 87], "robust": [24, 58, 67, 87], "roetman": 79, "roland": [71, 73, 75], "role": [0, 63], "root": [55, 63, 64, 74, 86], "rossendorf": 53, "round": 76, "routin": [6, 12, 14, 15, 18, 22, 24, 25, 26, 27, 28, 29, 30, 32, 58, 80, 100], "row": [1, 6, 17, 19, 24, 34, 35, 37, 38, 83, 85, 89, 93, 94, 95], "royal": 74, "rst": [62, 63, 64, 65], "rule": [20, 55, 67], "ruler": 63, "ruleset": 55, "run": [55, 56, 59, 65, 67, 69], "rung": [74, 83], "runtim": [15, 70, 71, 73, 79], "rvert": [10, 75, 77, 78, 80, 83, 85], "rvert_": [62, 80, 83, 85, 105, 108], "rvert_1": 75, "rvert_2": [10, 75, 83, 87, 107], "rvert_p": [85, 90, 92, 107, 109], "s0747": 79, "sachin": 53, "safeti": 58, "sai": [63, 80, 83, 87], "said": [66, 81, 87, 107, 109], "same": [1, 2, 4, 6, 14, 16, 19, 21, 26, 28, 34, 35, 37, 38, 46, 48, 49, 50, 51, 52, 58, 63, 65, 66, 71, 73, 80, 81, 83, 85, 86, 89, 91, 102, 103, 106, 107, 109, 110, 111, 112], "sampl": 74, "satisfi": [71, 73, 74, 75, 80, 83, 85, 86, 89, 90, 91, 92, 94, 95, 107, 109], "sauer": 79, "save": [63, 65, 69], "saw": 85, "saxoni": 53, "sbalzarini": [53, 71, 73, 74, 76], "scalar": [1, 6, 32, 34, 35, 37, 38, 81, 86], "scale": [74, 82, 83, 85, 86, 87], "scaler": [1, 34, 35, 37, 38], "scatter": [25, 72, 77, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "scenario": 58, "scene": 115, "scheme": [5, 7, 13, 15, 16, 31, 33, 38, 41, 42, 43, 44, 45, 70, 72, 73, 74, 76, 78, 79], "school": [82, 85], "schreiber": 53, "scienc": [53, 63, 71, 73, 74, 75], "scientif": [53, 63, 74], "scipi": [10, 62, 63], "scope": [58, 62], "scratch": [20, 80, 85, 102, 103], "screen": 63, "script": 57, "seamless": 66, "seamlessli": 67, "search": 19, "search_lex_sort": 19, "searrow": 71, "second": [1, 4, 6, 14, 16, 17, 19, 26, 34, 35, 37, 38, 58, 63, 73, 80, 81, 82, 85, 93, 94, 97, 98, 108, 110], "section": [4, 6, 12, 15, 26, 37, 38, 60, 61, 62, 64, 66, 67, 72, 75, 80, 83, 86, 109], "secur": [53, 54], "see": [1, 4, 7, 24, 34, 35, 37, 38, 54, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 71, 73, 74, 80, 82, 83, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 107, 109], "seealso": 63, "seek": [60, 68], "seem": 83, "seemingli": 80, "seen": [70, 83, 86, 87], "select": [4, 10, 17, 58, 60, 61, 66, 69, 72, 73, 74, 77, 87, 91, 92, 102], "self": [1, 6, 33, 34, 35, 37, 38, 58, 61, 63, 81], "semant": 63, "sens": [4, 17, 23, 58, 62, 63, 66, 76, 87, 108, 112], "sensit": 18, "sep": 79, "separ": [1, 8, 23, 34, 35, 37, 38, 39, 46, 61, 63, 65, 67, 71, 76, 92], "sequenc": [32, 74, 84], "serg": 74, "seri": [60, 61, 82, 83, 84, 86, 100, 115], "serv": [37, 41, 60, 64, 65, 66, 80, 86], "server": [59, 62], "servic": 65, "session": 63, "set": [1, 2, 4, 5, 6, 7, 8, 10, 14, 16, 19, 20, 21, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 66, 68, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 86, 87, 89, 90, 96, 97, 98, 99, 100, 102, 103, 106, 111, 112, 113, 114], "set_titl": [80, 81, 82, 83, 85, 86, 87], "set_vis": [80, 86], "set_xlabel": [81, 82, 83, 85, 86, 87], "set_xlim": 85, "set_xscal": 85, "set_xtick": 85, "set_ylabel": [81, 82, 83, 85, 86, 87], "set_ylim": [80, 81, 85], "set_yscal": 85, "set_ytick": 85, "set_zlabel": 82, "setminu": [10, 71, 75], "setup": [57, 66, 67, 75], "sever": [4, 5, 6, 15, 41, 61, 63, 74, 85, 86, 87, 91, 94, 95, 102, 103], "sex": 54, "sexual": 54, "shall": [1, 14, 33, 34, 35, 37, 38, 61], "shallow": [1, 4, 6, 34, 35, 37, 38], "shape": [1, 4, 6, 10, 14, 16, 17, 19, 20, 21, 22, 26, 27, 28, 30, 32, 33, 34, 35, 37, 38, 61, 80, 83, 85, 93, 94, 103, 105, 110], "shape_eval_output": 32, "share": [1, 11, 34, 35, 37, 38, 58, 66], "sharp": 66, "shift": 81, "ship": 30, "shmuel": 79, "short": [63, 80, 83], "shortcut": [20, 85, 92, 93, 94, 95, 110], "shorthand": [80, 83], "should": [0, 1, 2, 4, 5, 8, 30, 34, 35, 37, 38, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 77, 80, 83, 85, 86, 87, 102, 103, 105], "show": [10, 11, 58, 61, 67, 71, 74, 80, 81, 83, 85, 87, 90, 96, 105, 106, 107, 109, 112, 113, 114], "shown": [62, 67, 71, 74, 80, 81, 82, 83, 85, 86, 87, 90, 94, 96, 97, 98, 102, 111], "shut": 59, "siam": [70, 73, 79], "side": [1, 6, 34, 35, 37, 38, 61], "sidon": 74, "sign": [1, 17, 34, 35, 37, 38, 67], "signal": 74, "signatur": [33, 35, 61, 93], "signific": [45, 60], "significantli": [15, 64, 76], "simen": 74, "similar": [1, 13, 24, 34, 35, 37, 38, 58, 61, 70, 80, 83, 85, 86, 93, 110], "similarli": [65, 74, 81, 82, 102, 103, 107, 113, 114], "simpl": [63, 80], "simpli": [6, 57, 58, 59, 63, 69, 84, 86, 112], "simplic": 86, "simplifi": [23, 65, 71, 80], "simultan": 82, "sin": [63, 81, 83, 102, 103], "sinc": 83, "sine": [81, 102], "singapor": [63, 74], "singl": [1, 4, 19, 20, 21, 23, 24, 26, 27, 30, 32, 34, 35, 37, 38, 48, 49, 58, 60, 61, 62, 63, 65, 80, 88, 95, 107, 112], "sit": 66, "site": 67, "situat": [77, 87], "sitzungsbericht": 74, "sivkin": [53, 70, 71, 73, 74, 76], "size": [10, 20, 24, 29, 30, 38, 42, 43, 54, 58, 71, 76, 82, 83, 85, 86, 87], "sketch": [71, 76], "skip": [21, 30], "sklearn": [1, 34, 35, 37, 38], "slice": [42, 43, 44], "sloan": 75, "slow": [30, 68, 74], "small": [30, 38, 53, 61, 66, 76, 80, 87], "smaller": [4, 6, 19, 21, 26, 30, 58, 61, 87], "smaller_idx_set": [19, 26], "smallest": [1, 26, 30, 34, 35, 37, 38, 108], "smooth": 74, "smwk": 53, "snippet": [58, 61, 63, 68], "so": [17, 30, 37, 55, 57, 58, 66, 67, 68, 69, 74, 82, 84, 85, 86, 87, 91, 92, 93, 94, 95], "societi": 74, "socio": 54, "softwar": [60, 76], "sogenannt": 74, "sole": 87, "solid": 71, "solut": [23, 43, 60, 63, 68, 71, 79], "solv": [10, 60, 67, 77, 79, 87], "solver": 10, "some": [0, 1, 6, 21, 23, 26, 30, 32, 35, 39, 40, 55, 57, 58, 60, 62, 63, 64, 66, 67, 69, 71, 72, 75, 79, 81, 82, 83, 85, 106, 110], "someon": 69, "someth": [58, 66], "sometim": 58, "somewhat": [60, 62], "somewher": [35, 62], "soon": [58, 59], "sort": [6, 16, 17, 19, 26, 61, 108, 113, 114], "sorter": 57, "sourc": [0, 1, 2, 4, 6, 7, 10, 11, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 63, 65, 66, 67, 76, 80, 84, 115], "space": [1, 4, 6, 26, 30, 32, 33, 34, 35, 37, 38, 63, 71, 73, 74, 79, 80, 83, 88], "spacial": 30, "span": [32, 61, 71, 73, 74, 75], "sparingli": 63, "spars": [23, 39, 49, 51, 63, 70, 73, 78], "sparsiti": 30, "spatial": [1, 4, 6, 10, 14, 16, 19, 20, 21, 22, 26, 27, 29, 30, 32, 34, 35, 37, 38, 61, 74, 75, 80, 82, 83, 85, 86, 88, 89, 92, 93, 94, 97, 98, 107, 110], "spatial_dimens": [1, 4, 6, 14, 26, 32, 33, 34, 35, 37, 38, 61, 80, 83, 85, 89, 91, 92, 93, 102, 103, 108, 109, 110], "speak": [4, 61, 96, 107, 110], "special": [30, 37, 39, 41, 45, 60, 63, 71], "specif": [1, 5, 11, 12, 20, 25, 34, 35, 38, 57, 58, 59, 60, 61, 62, 63, 67, 68, 73, 74, 78, 80, 81, 82, 83, 85, 86, 87, 91, 92, 93, 94, 95, 97, 98, 115], "specifi": [1, 4, 6, 10, 20, 24, 32, 34, 35, 37, 38, 55, 58, 61, 63, 73, 75, 80, 82, 83, 85, 86, 87, 88, 91, 92, 93, 109, 110], "spectacularli": 27, "speed": 30, "sphinx": [59, 63, 65], "spine": 86, "spline": [63, 74], "split": 29, "split_posit": 29, "spot": 66, "springer": [63, 71, 73, 74, 75], "sqrt": [10, 74, 75, 86, 87], "squar": [10, 43, 72, 77, 81, 86, 87, 89], "squeez": [24, 30], "src": [55, 57], "ssh": 67, "stabil": [15, 30, 58, 73], "stabl": [24, 38, 64, 72, 76, 78], "stabli": 76, "stack": [1, 32, 34, 35, 37, 38, 73], "stage": [66, 69], "stai": [1, 34, 35, 37, 38, 58, 67], "stand": 58, "standard": [1, 4, 6, 32, 34, 35, 37, 38, 55, 57, 63, 67, 68, 87], "start": [1, 34, 35, 37, 38, 42, 44, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 71, 80, 81, 82, 86, 87, 115], "start_positions_in": 44, "start_positions_out": 44, "state": [53, 57, 62, 67, 69, 71], "statement": [57, 62, 63, 66, 80, 85, 112], "static": [1, 34, 35, 37, 38, 41, 57, 65], "statu": [54, 67], "steep": 60, "step": [54, 60, 62, 63, 67, 69, 71, 80, 85, 87, 102, 103], "still": [37, 57, 59, 62, 63, 72, 74, 77, 80, 81, 83, 87], "stoer": [71, 73, 75], "stone": 74, "stop": [19, 58], "storag": [39, 43, 73, 76, 78], "store": [1, 2, 4, 7, 16, 20, 21, 22, 30, 34, 35, 37, 38, 50, 59, 65, 66, 67, 71, 73, 75, 86, 90, 91, 96, 105, 107, 108, 109, 111], "stored_mask": 7, "str": [1, 4, 6, 10, 32, 34, 35, 37, 38, 61], "straightforward": [62, 63, 73, 76, 86], "straightforwardli": 80, "strassen": 79, "strateg": 87, "stretch": 81, "strict": [32, 61], "stricter": 55, "strictli": [1, 4, 6, 26, 32, 34, 35, 37, 38, 58, 61, 77, 96, 110], "string": [4, 32, 57, 61, 91, 93, 108], "strongli": [5, 58, 66, 67, 74], "structur": [1, 4, 6, 7, 13, 15, 25, 34, 35, 37, 38, 39, 45, 60, 61, 66, 67, 70, 71, 78, 80, 85, 87], "stumbl": 66, "style": [56, 58, 61], "stylist": [62, 63], "sub": [0, 3, 5, 8, 9, 12, 15, 18, 25, 36, 39, 40, 41, 42, 43, 44, 45, 46, 62, 64, 68, 73, 74, 75, 78, 81], "subclass": 1, "subdirectori": 62, "subdivis": 64, "subgrid": 79, "subject": [15, 67], "submatrix": 44, "submiss": 69, "submit": [57, 59, 62, 69], "submodul": 30, "subplot": [81, 82, 83, 85, 86, 87, 88, 90, 96, 97, 98], "subplot_kw": [82, 85], "subsect": 64, "subsequ": [20, 75, 87, 92], "subset": [1, 6, 19, 26, 34, 35, 37, 38, 55, 71, 110], "subset_indic": 19, "subseteq": [6, 71, 73, 74, 75, 76, 78, 79, 86, 106], "substract": [1, 34, 35, 37, 38], "subtract": [1, 34, 35, 37, 38, 82, 86], "subtre": [29, 71], "subtree_s": 29, "success": [10, 17], "successfulli": [59, 62], "sudden": 15, "suffer": [102, 103], "suffici": [66, 68, 82, 83, 85, 87, 102], "sugar": [1, 81], "suggest": [25, 57, 62, 66, 68, 74, 85], "suit": [57, 73], "suitabl": [17, 32, 34, 35, 37, 38, 63, 71], "sum": [1, 16, 19, 20, 24, 34, 35, 37, 38, 42, 76, 83, 89, 98, 113], "sum_": [10, 71, 73, 75, 76, 77, 78, 79, 80, 85, 86, 89], "summar": [55, 57, 60, 67, 80, 85, 86, 110], "summari": [10, 58, 68, 70], "sup_": [80, 83, 85], "superset": [6, 110], "suppli": 59, "support": [1, 4, 10, 15, 17, 26, 32, 34, 35, 37, 38, 40, 58, 61, 62, 63, 72, 75, 78, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 105, 108], "suppos": [16, 89, 105, 108], "suppress": 63, "supremum": [1, 34, 35, 37, 38], "supseteq": 106, "sur": [73, 74], "sure": [16, 18, 23, 26, 35, 55, 57, 58, 59, 61, 63, 66, 67, 68, 69, 81, 84, 85, 86, 87], "surfac": [82, 83, 85, 86, 87], "svd": 10, "switch": [65, 67], "symbol": [20, 35, 79, 108], "symmetr": [58, 73], "synchron": 69, "synonym": [26, 75], "syntact": [1, 81], "syntax": [56, 57, 63], "system": [53, 59, 65, 66, 67, 76, 79, 87], "t": [1, 2, 10, 17, 19, 26, 32, 34, 35, 37, 38, 48, 49, 50, 51, 52, 58, 60, 61, 62, 63, 66, 68, 79, 80, 82, 83, 85, 86, 87, 113, 114], "t_": [75, 86], "t_0": [75, 86], "t_1": [75, 86], "t_2": 86, "t_3": 86, "t_4": 86, "t_n": [75, 86], "tabl": [20, 57, 60, 63, 80, 82, 85, 86], "tackl": 68, "tag": [62, 68], "tailor": 60, "take": [1, 10, 30, 34, 35, 37, 38, 54, 59, 61, 66, 68, 75, 80, 83, 89, 93, 98, 108, 112, 113, 114], "taken": [1, 34, 35, 37, 38, 61, 85], "talk": 60, "target": [1, 2, 4, 23, 24, 34, 35, 37, 38, 46, 47, 48, 49, 50, 51, 52, 63, 74], "target_dim": 24, "target_dimens": [1, 4, 6, 34, 35, 37, 38], "target_poli": [2, 48, 49, 50, 51, 52], "target_typ": [2, 47, 48, 49, 50, 51, 52], "task": [60, 62, 65, 80, 84, 87, 100, 115], "tax": 53, "tbe": 73, "tdd": 58, "team": [15, 53, 66, 68, 80, 83], "technic": [53, 60, 63, 66, 70, 74, 82, 85], "ted": [17, 20], "tediou": 65, "temporarili": [54, 57], "tend": [60, 63, 87], "tens": 67, "tensor": [63, 74, 75, 79], "tensori": [63, 71, 73, 74, 76, 79, 85, 92], "term": [1, 10, 20, 24, 34, 35, 37, 38, 63, 75, 76, 80, 86], "term_1": [82, 85], "term_2": [82, 85], "term_3": [82, 85], "term_4": [82, 85], "termin": [58, 59, 108], "terminologi": 75, "ters": 60, "test": [19, 23, 44, 55, 56, 57, 67, 68, 80, 85], "test_": [57, 58], "test_grid": 58, "test_jit_multi_index": 58, "test_multi_index": 58, "test_multi_index_util": 58, "test_multipl": 58, "test_ordinary_regress": 58, "test_polynomi": 58, "test_polynomial_lagrang": 58, "test_singl": 58, "test_verif": 58, "testequ": 58, "text": [10, 63, 65, 74, 75, 113, 114], "textbook": 60, "th": [10, 20, 75, 86], "than": [1, 4, 6, 18, 19, 21, 24, 26, 30, 32, 34, 35, 37, 38, 60, 63, 65, 72, 76, 77, 78, 83, 87, 94, 95, 105, 110], "thank": 68, "thei": [1, 4, 8, 15, 16, 25, 33, 34, 35, 37, 38, 54, 57, 58, 59, 60, 62, 63, 66, 67, 69, 71, 73, 80, 82, 86, 87, 91, 97, 98, 106, 112], "thekk": 53, "them": [0, 15, 26, 30, 33, 55, 58, 59, 60, 61, 63, 65, 66, 67, 69, 71, 75, 76, 80, 81, 82, 84, 86, 87, 112], "theor": 76, "theorem": [72, 76], "theoret": [60, 73], "theori": [61, 63, 70, 73, 74, 79], "therebi": [63, 71], "therefor": [18, 19, 20, 58, 63, 67, 76, 79, 80, 86, 89, 90, 96, 108], "thi": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "thing": [58, 60, 83], "think": [60, 63], "third": 85, "thode": 79, "thoma": 79, "thorough": [5, 58], "those": [17, 32, 38, 54, 58, 60, 69, 80, 85], "though": [1, 34, 35, 37, 38, 55, 58, 65, 80, 83], "thought": 66, "thread": 69, "threaten": 54, "three": [61, 65, 67, 71, 73, 75, 85, 86, 87, 103, 106, 107, 111, 112, 113, 114], "through": [18, 53, 58, 60, 61, 80, 83, 84, 85, 87, 115], "throughout": 81, "thu": [61, 71, 74, 78], "tick_bottom": 80, "tick_param": [80, 81, 82, 83, 85, 86, 87], "tight_layout": [81, 82, 83, 85, 86, 87], "tile": [4, 24, 91, 93, 95], "time": [10, 13, 15, 16, 18, 19, 21, 28, 30, 32, 34, 35, 37, 38, 55, 58, 59, 60, 67, 77, 78, 79, 80, 81, 85, 105], "tip": 63, "titl": [63, 69], "to_canon": [33, 80, 85, 86], "to_chebyshev": [33, 80, 85, 86], "to_lagrang": [33, 80, 85, 86], "to_newton": [33, 80, 85, 86], "tobin": 79, "toctre": 62, "togeth": [4, 58], "tol": [1, 34, 35, 37, 38], "toler": [1, 34, 35, 37, 38], "toml": 57, "too": [33, 63, 66], "tool": [55, 66, 67], "top": [1, 4, 5, 6, 12, 33, 34, 35, 37, 38, 60, 64, 67, 86], "topic": [1, 60, 62, 72, 80, 85], "total": [17, 85], "tourism": 53, "toward": 54, "traceback": [24, 32], "track": [66, 69], "tracker": [65, 67], "trafo_dict": 42, "trail": 57, "train": [10, 63, 87], "transcendent": 87, "transform": [0, 1, 2, 3, 4, 7, 12, 13, 15, 16, 18, 20, 29, 30, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 61, 63, 72, 76, 81, 82, 83, 84, 96], "transformation_abstract": 3, "transformation_data": [0, 41, 42, 43, 44, 45], "transformation_fct": [40, 41, 42, 43, 44], "transformation_oper": [2, 48, 49, 50, 51, 52, 86], "transformationabc": [0, 2, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "translat": 54, "transpon": 30, "travers": 13, "treat": [65, 71], "tree": [4, 5, 13, 29, 30, 40], "trefethen": [70, 73, 74, 79], "triangular": [21, 30, 39, 42, 43, 70, 78], "trick": 58, "trim": 57, "trivial": [60, 73, 79], "troll": 54, "troubl": 63, "true": [1, 4, 6, 10, 19, 24, 26, 32, 34, 35, 37, 38, 61, 80, 81, 85, 90, 96, 106, 107, 109, 110, 112, 113, 114], "trust": 19, "try": [62, 63, 68], "ttr": [75, 86], "tu": 70, "tupl": [1, 7, 10, 17, 24, 32, 34, 35, 37, 38, 42], "turn": [4, 19, 30, 77, 79, 91], "tutori": [62, 65, 80, 81, 82, 83, 85, 86, 87, 115], "two": [0, 1, 4, 6, 10, 14, 15, 16, 17, 19, 20, 24, 26, 27, 32, 34, 35, 37, 38, 56, 58, 59, 61, 63, 71, 73, 80, 81, 82, 85, 87, 88, 89, 90, 96, 97, 98, 106, 107, 108, 109, 110, 113, 114], "type": [0, 1, 2, 4, 6, 10, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 57, 60, 61, 63, 65, 67, 74, 80], "typed_list": 29, "typeerror": [4, 30, 32, 61], "typic": [15, 18, 45, 58, 62, 63, 68, 73, 80, 81, 86, 92], "typo": 66, "u": [54, 63, 64, 65, 66, 68, 69], "uk": [82, 85], "unaccept": 54, "uncheck": 67, "unclear": 66, "und": 74, "undefin": 37, "under": [1, 34, 35, 37, 38, 57, 61, 62, 67, 81], "underestim": 87, "underl": 87, "underli": [1, 4, 6, 10, 17, 34, 35, 37, 38, 53, 58, 60, 71, 78, 83, 87, 88, 90, 96, 97, 98, 111], "underlin": 61, "underset": [10, 77, 87], "understand": [5, 53, 60, 61, 63, 67, 68, 84, 115], "unecessari": 60, "unexpect": 68, "unexpectedli": 58, "unfortun": 80, "unifi": 32, "uniform": [0, 2, 4, 74, 77], "uniformli": [74, 81], "uniniti": [1, 34, 35, 37, 38], "uninstal": 57, "union": [1, 4, 6, 10, 26, 32, 34, 35, 37, 38, 61, 99, 100, 104, 113], "union_indic": 26, "uniqu": [4, 14, 19, 24, 26, 58, 61, 63, 71, 73, 74, 75, 77, 79, 80, 91, 92, 93, 94, 95, 96], "unique_indic": 19, "unisolv": [1, 4, 10, 14, 22, 23, 30, 34, 35, 37, 38, 49, 51, 53, 61, 72, 74, 75, 76, 77, 78, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103], "unisolvent_nod": [1, 4, 34, 35, 37, 38, 80, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103], "univ": [63, 74], "univers": [33, 63, 74], "unknown": 87, "unless": 57, "unlik": [17, 38, 58, 62, 107], "unod": 79, "unreleas": 67, "unsaf": 27, "unseen": 87, "unsort": 19, "unstabl": 86, "until": [58, 61, 71], "unweight": 10, "up": [1, 4, 20, 24, 34, 35, 37, 38, 42, 55, 61, 66, 68, 76, 81, 88, 97, 98], "upcom": [55, 69], "updat": [1, 4, 6, 10, 34, 35, 37, 38, 58, 61, 62, 63, 67, 69, 113, 114, 115], "upon": [66, 76], "upper": [27, 29, 30, 31, 32, 34, 37, 38, 74, 78, 81, 82, 102], "upstream": [35, 67, 69], "url": [63, 74, 82, 85], "us": [0, 1, 2, 4, 6, 7, 10, 11, 15, 16, 17, 18, 20, 21, 24, 25, 26, 30, 31, 32, 33, 34, 35, 37, 38, 42, 44, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114], "usag": [4, 6, 60, 63, 74, 105], "user": [1, 33, 34, 35, 37, 38, 60, 62, 63, 93], "user_domain": [1, 34, 35, 37, 38], "usernam": 67, "usual": [25, 62, 82, 87], "utf": 57, "util": [12, 15, 19, 24, 26, 27, 28, 29, 30, 31, 32, 34, 38, 40, 46, 57, 58, 63, 78, 86], "uw": 53, "v": [10, 67, 70, 79], "v3": 67, "v_n2c": 22, "valid": [1, 4, 10, 18, 32, 34, 35, 37, 38, 57, 61, 63, 67, 81, 86, 87, 89, 92, 93, 94, 95], "valu": [1, 4, 6, 10, 14, 20, 21, 24, 25, 28, 30, 32, 34, 35, 37, 38, 58, 61, 65, 66, 70, 71, 74, 76, 80, 81, 83, 85, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 108, 109, 110], "valuabl": [66, 68, 87], "valueerror": [1, 4, 6, 24, 32, 34, 35, 37, 38, 61], "vandermond": [22, 78, 79], "vanish": [1, 71], "varepsilon": 74, "vari": 74, "variabl": [32, 63, 71, 77, 90, 96, 105, 107, 109], "varianc": [10, 87], "variat": 11, "varieti": 87, "variou": [25, 38, 57, 61, 63, 80, 81, 86, 115], "vc": 57, "vdot": 71, "ve": [58, 60, 67, 69, 80, 81, 82, 83, 84, 85, 86, 87], "vector": [6, 10, 17, 24, 26, 31, 70, 77, 87], "veettil": 53, "venv": [67, 84], "ver": 74, "verbos": [58, 67], "veri": [6, 30, 38, 58, 62, 63, 76, 80], "verif": [25, 34, 35, 37, 38, 58], "verifi": [1, 4, 25, 30, 32, 34, 35, 37, 38, 56, 57, 58, 59, 61, 68, 82, 83, 108], "verified_domain": [32, 34, 35, 37, 38], "verify_domain": 32, "verify_input": 30, "verify_lp_degre": 32, "verify_poly_coeff": 32, "verify_poly_degre": 32, "verify_poly_domain": 32, "verify_poly_pow": 32, "verify_query_point": 32, "verify_spatial_dimens": [32, 61], "verlag": [63, 74], "version": [30, 41, 54, 58, 63, 65, 67, 68, 71, 74, 76], "vertic": [81, 82, 83, 85, 86, 87], "via": [1, 4, 6, 10, 20, 34, 35, 37, 38, 39, 55, 61, 62, 63, 77, 79, 82, 89, 91, 92, 93, 94, 95, 97, 98, 108, 111, 112, 113, 114], "view": [59, 65, 87], "viewpoint": 54, "violat": 54, "virtual": 84, "virtualenv": [67, 84], "visibl": [54, 63], "visual": [60, 68, 73, 83, 85], "visualis": 71, "visulais": 71, "vladimir": [53, 70, 71, 73, 74, 76], "volker": 79, "volum": [63, 71, 73, 74, 75], "vsc": 57, "vvv": [58, 59], "w": [1, 10, 26, 113, 114], "wa": [30, 53, 67, 86], "wai": [17, 54, 63, 66, 68, 71, 76, 83, 86, 91, 92], "walter": [71, 73, 75, 78, 79], "want": [33, 57, 58, 62, 67, 68, 69, 78, 83, 84, 115], "warn": [32, 63, 86, 102, 103], "watch": [58, 59, 60], "we": [5, 30, 54, 55, 57, 58, 60, 62, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 87, 89, 102, 103, 105, 108], "weak": [1, 2, 4, 6, 7, 11, 34, 35, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52], "weather": [30, 32], "web": [59, 62, 63], "websit": [57, 65], "weigh": 66, "weight": [10, 70], "welcom": [54, 66, 68, 80, 83, 115], "well": [54, 60, 63, 64, 66, 68, 71, 74, 76, 77, 80, 85, 86, 87, 96, 100, 111], "were": [54, 63, 68, 81, 82], "what": [54, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 86, 115], "whatev": 61, "when": [0, 1, 2, 4, 10, 21, 24, 32, 34, 35, 37, 38, 48, 49, 50, 51, 52, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 71, 73, 74, 75, 76, 79, 83, 85, 87, 89, 91, 95, 97, 98, 108, 109, 112], "whenev": [54, 63, 71], "where": [1, 4, 6, 10, 14, 16, 17, 19, 20, 21, 26, 27, 29, 30, 33, 34, 35, 37, 38, 39, 55, 58, 60, 61, 63, 68, 73, 74, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 89, 93, 94, 95], "wherea": 79, "whether": [6, 16, 21, 54, 57, 59, 62, 68, 81, 83, 85, 106, 112], "which": [0, 1, 2, 4, 5, 6, 10, 14, 17, 19, 20, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 90, 91, 92, 96, 102, 103, 109], "while": [1, 4, 6, 8, 11, 15, 18, 27, 32, 34, 35, 38, 56, 57, 58, 59, 60, 63, 65, 68, 71, 74, 76, 78, 79, 83, 84, 85, 86, 89, 96, 107], "whitespac": 57, "who": [33, 53, 54, 58, 60], "whole": [0, 1, 30, 32, 34, 35, 37, 38, 41, 42, 43, 44, 45, 58, 61, 63, 80, 85], "whose": [1, 4, 14, 26, 32, 34, 35, 37, 38, 61, 85, 88, 89, 90, 96, 97, 98, 110, 112, 113, 114], "why": [29, 60, 62, 66, 67, 68], "wicaksono": 53, "wide": [38, 63, 67, 74, 80, 81], "wiki": [54, 63], "wikipedia": [37, 60, 63], "willk": 74, "window": [1, 34, 35, 37, 38, 59, 63], "wing": [63, 74], "winograd": 79, "wisconsin": [63, 74], "wise": [19, 73, 89], "wish": 66, "wissenschaften": 74, "within": [17, 18, 19, 25, 58, 59, 60, 62, 63, 64, 66, 67, 80, 87], "without": [1, 2, 6, 10, 15, 20, 30, 45, 48, 49, 50, 51, 52, 54, 58, 61, 63, 64, 80, 85, 86, 97, 98], "won": 19, "word": [8, 24, 37, 71, 75, 81, 86, 87, 108, 114], "work": [0, 6, 24, 30, 41, 42, 43, 44, 45, 58, 59, 60, 63, 65, 66, 67, 68, 74, 79, 83, 85, 87], "workflow": [63, 65, 66, 67], "world": [63, 74], "worri": 58, "would": [6, 16, 30, 57, 58, 63, 66, 68, 79, 82, 83, 108], "wo\u017aniakowski": 75, "wrap": 58, "wrapper": [35, 38], "write": [56, 60, 65, 66, 69], "writer": 53, "written": [55, 58, 61, 62, 63, 65, 75], "wrong": [6, 16, 32, 63], "x": [1, 2, 10, 16, 20, 21, 22, 24, 30, 32, 34, 35, 37, 38, 48, 49, 50, 51, 52, 58, 63, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 89, 102, 103], "x_": 76, "x_1": [71, 73, 75, 79, 82, 83, 85, 86, 87, 91, 92, 93, 94, 95], "x_2": [82, 83, 85, 86, 87, 91, 92, 93, 94, 95], "x_i": [63, 89], "x_j": [20, 71, 75, 76, 85, 86], "x_m": [71, 73, 75, 79, 86, 103], "x_multipl": 16, "x_o": 76, "x_singl": 21, "xlabel": [80, 83, 86, 91, 92, 93, 94, 95, 102], "xrightarrow": 74, "xx": [1, 10, 11, 17, 20, 21, 24, 26, 27, 28, 30, 32, 34, 35, 37, 38, 61, 80, 81, 82, 83, 85, 86, 87, 89, 91, 93, 102, 103], "xx0": [82, 85], "xx1": [82, 85], "xx_1d": [82, 83, 85, 86, 87], "xx_2d": [82, 83, 85, 86, 87], "xx_plot": 81, "xx_test": [80, 81, 82, 85, 86, 87], "xx_test_1d": 83, "xx_test_2d": 83, "xx_test_4d": 83, "xx_train": 87, "y": [10, 24, 70, 71, 73, 77, 80, 81, 83, 86, 87], "yaml": 57, "yao": 79, "year": 63, "yet": [32, 34, 35, 37, 38, 40, 60, 82, 85], "yield": [26, 71, 75, 78, 79, 110], "ylabel": [80, 83, 86, 91, 92, 93, 94, 95, 102], "ylim": 80, "york": [63, 74, 76], "you": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 78, 80, 81, 82, 83, 84, 85, 86, 87, 105, 115], "your": [55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 69, 80, 81, 83, 84, 87], "yourself": [56, 57, 59, 66], "yscale": 80, "yy": [10, 11, 32, 82, 85, 89, 102], "yy_1d": 83, "yy_2d": [82, 83, 85, 86, 87], "yy_diff_0_1": 82, "yy_diff_0_1_1_1": 82, "yy_diff_0_2_1_1": 82, "yy_diff_1_1": 82, "yy_err_2d": 87, "yy_fun": 85, "yy_fun_2d": 87, "yy_plot_poli": 85, "yy_plot_test": 85, "yy_poli": [80, 82, 85], "yy_poly_1": 81, "yy_poly_2": 81, "yy_reg_2d": 87, "yy_test": [80, 82, 85, 87], "yy_test_1": 81, "yy_test_2": 81, "yy_train": 87, "zeitschrift": 74, "zentrum": 53, "zero": [1, 6, 16, 30, 32, 34, 35, 37, 38, 57, 71, 80, 85, 97, 98, 110, 112], "zoom": 44, "zu": 74, "zwischen": 74, "\u00e0": 73, "\u00e4": 74, "\u00e9": [74, 79], "\u00f4": 74, "\u00f6": 74, "\u00fc": 74}, "titles": ["operator_abstract", "multivariate_polynomial_abstract", "transformation_abstract", "ABC", "grid", "minterpy.core", "multi_index", "tree", "minterpy.extras", "regression", "ordinary_regression", "regression_abc", "API Reference", "minterpy.dds", "minterpy.gen_points", "Internal API", "canonical", "common", "minterpy.jit_compiled", "multi_index", "newton_diff", "newton.eval", "transformations", "Transformation Utility Functions", "arrays", "minterpy.utils", "multi_index", "polynomials.canonical", "polynomials.chebyshev", "polynomials.lagrange", "polynomials.newton", "quad", "verification", "minterpy.interpolation", "canonical_polynomial", "chebyshev_polynomial", "minterpy.polynomials", "lagrange_polynomial", "newton_polynomial", "minterpy.schemes", "barycentric", "BarycentricOperator", "BarycentricDictOperator", "BarycentricFactorisedOperator", "BarycentricPiecewiseOperator", "matrix_operator", "minterpy.transformations", "interface", "canonical", "chebyshev", "identity", "lagrange", "newton", "About Us", "Code of Conduct", "Code Style", "Contributing to the Codebase", "Pre-Commits", "Running and Writing Tests", "Building the Documentation Locally", "Documentation: Design", "Writing Docstrings for API Documentation", "Writing Jupyter Notebooks", "Writing reStructuredText Documents", "Documentation Source Structure", "Documentation: Framework and Tools", "Contributing to the Documentation", "Setting Up a Development Environment", "Contributors Guide", "Creating a Merge (Pull) Request", "Barycentric Transformation", "Multidimensional Divided Difference Scheme (DDS)", "Fundamentals of Minterpy", "Interpolation at Unisolvent Nodes", "Multidimensional Polynomial Interpolation", "Multidimensional Polynomial Bases", "Evaluation of Multidimensional Polynomials", "Polynomial Regression", "Transformation Between Bases", "The Notion of Unisolvence", "One-Dimensional Polynomial Interpolation", "Basic Arithmetic Operations with Polynomials", "Basic Calculus Operations with Polynomials", "Quick Start Guide to Function Approximations with Minterpy", "Getting Started with Minterpy", "Multidimensional Polynomial Interpolation", "Polynomial Bases and Transformations", "Polynomial Regression with Minterpy", "Add Exponents to a Grid", "Evaluate a Function on a Grid", "Make a Grid Complete", "Create a Grid using the Default Constructor", "Create a Grid with a Complete Multi-Index Set", "Create a Grid with a Generating Function", "Create a Grid from an Array of Generating Points", "Create a Grid from an Array of Generating Values", "Make a Grid Downward-Closed", "Multiply <code class=\"docutils literal notranslate\"><span class=\"pre\">Grid</span></code> Instances", "Create the Union of <code class=\"docutils literal notranslate\"><span class=\"pre\">Grid</span></code> instances", "Grid", "How-to Guides", "Integration", "Integrate a One-Dimensional Polynomial", "Integrate an M-Dimensional Polynomial", "Multi-Index Sets", "Add Exponents to a Multi-Index Set", "Compare MultiIndexSet Instances", "Make a Multi-Index Set Complete", "Create a Multi-Index Set", "Make a Multi-Index Set Downward-Closed", "Create an Empty Multi-Index Set", "Check for Equality between Two MultiIndexSet Instances", "Check for Membership (Containment)", "Multiply <code class=\"docutils literal notranslate\"><span class=\"pre\">MultiIndexSet</span></code> Instances", "Create the Union of <code class=\"docutils literal notranslate\"><span class=\"pre\">MultiIndexSet</span></code> Instances", "Minterpy Documentation"], "titleterms": {"": 84, "1": [102, 103], "1d": [71, 83, 86], "2d": [83, 86], "3": 103, "4d": 83, "80": 63, "In": [63, 84, 86, 113, 114], "One": [61, 80, 83, 86, 102], "The": [79, 80], "To": [4, 6], "abc": 3, "about": [53, 66, 67, 91, 92, 93, 94, 95], "accuraci": [80, 83, 85], "activ": 57, "ad": 62, "add": [88, 105], "addit": [58, 81, 89], "admonit": 63, "an": [68, 80, 85, 87, 88, 94, 95, 103, 105, 110], "api": [12, 15, 60, 61, 63], "approxim": [74, 83], "argument": 89, "arithmet": 81, "arrai": [24, 94, 95], "ask": 68, "assess": [80, 83, 85], "attribut": 54, "avail": 84, "background": [4, 6, 37, 38], "barycentr": [40, 70], "barycentricdictoper": 42, "barycentricfactorisedoper": 43, "barycentricoper": 41, "barycentricpiecewiseoper": 44, "base": [59, 75, 78, 86, 102, 103], "basi": [75, 76, 78, 80, 85, 86], "basic": [81, 82], "best": 62, "between": [78, 111], "bibliograph": 63, "bibliographi": 63, "block": 63, "bodi": 61, "bound": [102, 103], "branch": 67, "bug": 68, "build": [59, 65], "calculu": 82, "canon": [16, 27, 48, 75, 76, 86], "canonical_polynomi": 34, "chang": [67, 86], "charact": 63, "chebyshev": [28, 49, 75, 86], "chebyshev_polynomi": 35, "check": [90, 96, 106, 107, 109, 111, 112], "citat": 63, "class": 61, "clone": 67, "close": [87, 96, 109], "closed": [75, 96, 107, 109], "code": [54, 55, 63], "codebas": 56, "commit": [57, 67], "common": 17, "compar": 106, "complet": [75, 90, 92, 107, 109], "conduct": 54, "construct": [80, 85, 110], "constructor": 91, "contain": 112, "contribut": [56, 66], "contributor": [53, 60, 68], "convent": 61, "converg": 85, "core": 5, "creat": [67, 68, 69, 80, 85, 87, 91, 92, 93, 94, 95, 98, 108, 110, 114], "cross": 63, "current": 57, "curs": 74, "dd": [13, 71], "default": 91, "defin": [57, 80, 85, 87], "degre": [75, 107, 108, 113, 114], "deploi": 65, "depth": 84, "descript": 61, "design": 60, "detail": [6, 37, 38, 61], "develop": 67, "differ": [71, 97, 98, 102, 103, 106, 107, 112, 113, 114], "differenti": 82, "dimens": [83, 97, 98, 106, 108, 112, 113, 114], "dimension": [74, 80, 83, 86, 89, 91, 92, 93, 94, 95, 102, 103], "disjoint": [106, 110], "displai": 63, "divid": 71, "divis": 81, "docstr": 61, "document": [59, 60, 61, 62, 63, 64, 65, 66, 115], "domain": [102, 103], "downward": [75, 96, 107, 109], "element": 63, "empir": 85, "empti": 110, "enforc": 54, "english": 55, "environ": 67, "equal": 111, "eval": 21, "evalu": [76, 80, 85, 87, 89], "exampl": [61, 63, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 107, 109, 112], "explan": 60, "expon": [88, 105, 108, 112], "exponenti": 81, "extern": 63, "extra": 8, "factori": [92, 93, 94, 95], "featur": [67, 68], "file": 63, "fit": 87, "fork": 67, "format": 55, "four": 83, "framework": 65, "from": [80, 85, 86, 94, 95, 108], "from_degre": 92, "from_funct": 93, "from_point": 94, "from_value_set": 95, "function": [23, 61, 80, 81, 82, 83, 85, 89, 91, 93], "fundament": [60, 72], "further": 78, "gen_point": 14, "gener": [61, 65, 73, 91, 93, 94, 95], "get": [67, 84], "git": 67, "given": 108, "grid": [4, 80, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "guid": [4, 6, 55, 60, 68, 83, 84, 100], "head": 63, "hook": 57, "how": [4, 6, 60, 66, 83, 100], "ident": 50, "imag": 63, "implement": [6, 37, 38, 63], "import": [80, 83], "improv": 68, "index": [71, 75, 80, 85, 91, 92, 93, 94, 95, 104, 105, 107, 108, 109, 110], "inequ": 111, "inform": [4, 6, 37, 38], "inlin": 63, "instal": [67, 84], "instanc": [88, 91, 93, 94, 95, 97, 98, 105, 106, 111, 113, 114], "integr": [82, 101, 102, 103], "interfac": 47, "intern": 15, "interpol": [33, 73, 74, 80, 83, 85, 86, 91, 92, 93, 94, 95, 102, 103], "issu": 68, "jit_compil": 18, "jupyt": [59, 62, 65], "keyword": 112, "l_p": [107, 108, 113, 114], "lagrang": [29, 51, 73, 75, 76, 80, 85, 86], "lagrange_polynomi": 37, "languag": 65, "lexicograph": 75, "lift": 74, "line": [61, 63], "list": 63, "local": 59, "m": 103, "maintain": 53, "make": [67, 90, 96, 107, 109], "markup": 65, "mathemat": 63, "matrix_oper": 45, "membership": [110, 112], "merg": [68, 69], "method": [61, 92, 93, 94, 95], "minterpi": [5, 8, 13, 14, 18, 25, 33, 36, 39, 46, 63, 67, 72, 80, 83, 84, 86, 87, 115], "model": [67, 87], "modul": 61, "motiv": [80, 81, 82, 85, 87, 88, 90, 96, 102, 103, 105, 106, 107, 109, 112], "multi": [71, 75, 80, 85, 89, 91, 92, 93, 94, 95, 104, 105, 107, 108, 109, 110], "multi_index": [6, 19, 26], "multidimension": [71, 74, 75, 76, 85], "multiindexset": [105, 106, 111, 113, 114], "multipl": [81, 110, 113], "multipli": [97, 113], "multivariate_polynomial_abstract": 1, "new": 58, "newton": [21, 30, 52, 73, 75, 76, 80, 85, 86], "newton_diff": 20, "newton_polynomi": 38, "next": 84, "node": [71, 73, 80, 85], "note": [61, 63], "notebook": [59, 62, 65], "notion": 79, "number": 63, "one": 89, "oper": [81, 82], "operator_abstract": 0, "order": 75, "ordinari": 87, "ordinary_regress": 10, "organ": [58, 62], "other": 63, "our": 54, "output": 89, "over": [102, 103], "page": 63, "paramet": 61, "place": [113, 114], "pledg": 54, "point": [73, 80, 94], "polynomi": [27, 28, 29, 30, 36, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 102, 103, 107, 108], "practic": 62, "pre": 57, "principl": 60, "problem": 87, "project": 63, "proper": 106, "pull": [68, 69], "push": 67, "quad": 31, "queri": 80, "quick": 83, "rais": 61, "recurs": 71, "refer": [12, 60, 63], "referenc": 63, "regress": [9, 77, 87], "regression_abc": 11, "relationship": 78, "remark": 87, "report": [54, 68], "repositori": 67, "request": [68, 69], "resolv": 68, "resourc": 63, "respect": 107, "respons": 54, "restructuredtext": [63, 65], "return": 61, "review": 68, "rule": 63, "run": [57, 58], "same": [97, 98, 113, 114], "scheme": [39, 71], "scope": 54, "section": 63, "set": [67, 75, 80, 85, 88, 91, 92, 93, 94, 95, 104, 105, 107, 108, 109, 110], "setup": 62, "sourc": [62, 64], "space": 75, "spatial": [106, 108, 112], "specifi": [102, 103], "spell": 55, "split": 71, "sponsor": 53, "standard": 54, "start": [67, 83, 84], "structur": [62, 64], "style": 55, "sub": 71, "subset": 106, "subtract": 81, "suit": 58, "summari": [60, 61, 65, 80, 81, 82, 83, 85, 86, 87], "superset": 106, "support": 68, "test": [58, 59, 62], "theorem": [71, 74, 78], "theori": 60, "tip": 58, "todo": [0, 1, 4, 14, 23, 30, 32, 34, 35, 37, 38, 40, 54], "tool": 65, "transform": [22, 23, 46, 70, 78, 80, 85, 86], "transformation_abstract": 2, "tree": [7, 62, 71], "tutori": [60, 84], "two": [83, 86, 91, 92, 93, 94, 95, 111], "u": 53, "union": [98, 110, 114], "unisolv": [71, 73, 79, 80, 85], "up": 67, "us": 91, "util": [23, 25], "v": [107, 109], "valu": [89, 95, 111], "verif": 32, "verifi": 87, "virtual": 67, "weierstrass": 74, "what": 84, "width": 63, "write": [58, 61, 62, 63], "yourself": 68}})