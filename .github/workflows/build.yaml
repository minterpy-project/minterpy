name: build

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:

  tests-with-numba:
    name: Run Pytest with Numba
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: Install Minterpy with dev extras
      uses: ./.github/actions/install-minterpy
      with:
        extras_require: "[dev]"
    - name: Run Pytest (Numba is active by default)
      run: |
        pytest --junitxml=report-pytest-with-numba.xml -vvv
    - name: Upload the report
      uses: actions/upload-artifact@v4
      with:
        name: report-pytest-with-numba.xml
        path: ./report-pytest-with-numba.xml
  
  tests-without-numba:
    name: Run Pytest without Numba (include coverage upload)
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Install Minterpy with dev extras
        uses: ./.github/actions/install-minterpy
        with:
          extras_require: "[dev]"
      - name: Run Pytest (deactivate Numba)
        run: |
          export NUMBA_DISABLE_JIT=1
          pytest --junitxml=report-pytest-without-numba.xml -vvv --cov-report=xml --cov-report=term
      - name: Upload the report
        uses: actions/upload-artifact@v4
        with:
          name: report-pytest-without-numba.xml
          path: ./report-pytest-without-numba.xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  tests-nbmake:
    name: Run Pytest on the notebooks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: [./docs/getting-started, ./docs/how-to/grid, ./docs/how-to/multi-index-set]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Execute the notebooks
        uses: ./.github/actions/nbmake
        with:
          dir: ${{ matrix.dir }}

  build-docs:
    name: Build the docs (without executing notebooks)
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Install Minterpy with docs extras
        uses: ./.github/actions/install-minterpy
        with:
          extras_require: "[docs]"
      - name: Turn off notebook execution mode
        run: |
          sed -i 's/^nb_execution_mode = "auto"$/nb_execution_mode = "off"/' ./docs/conf.py
      - name: Build the docs
        run: |
          sphinx-build docs _build

  build-wheels:
    name: Build wheels on latest Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Install Minterpy
        uses: ./.github/actions/install-minterpy
      - name: Install build tool
        run: python -m pip install build
      - name: Build the wheel
        run: python -m build --wheel
      - name: Upload the wheel
        uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl

  build-sdist:
    name: Build sdist on latest Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Install Minterpy
        uses: ./.github/actions/install-minterpy
      - name: Install build tool
        run: python -m pip install build
      - name: Build the source distribution
        run: python -m build --sdist
      - name: Upload the wheel
        uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz
