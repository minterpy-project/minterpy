Search.setIndex({"alltitles": {"1D Divided Difference Scheme": [[51, "d-divided-difference-scheme"]], "80-Character width rule": [[42, "character-width-rule"]], "API reference": [[39, "api-reference"]], "About Us": [[36, null]], "About the Docs": [[39, null]], "About the documentation": [[44, "about-the-documentation"]], "Abstract base classes": [[1, null]], "Admonitions": [[42, "admonitions"]], "Attribution": [[37, "attribution"]], "Available admonitions": [[42, "available-admonitions"]], "Barycentric Dict Operator": [[24, null]], "Barycentric Factorised Operator": [[25, null]], "Barycentric Operator": [[26, null]], "Barycentric Piecewise Operator": [[27, null]], "Barycentric transformation": [[46, null]], "Before contributing": [[43, "before-contributing"]], "Bibliographic citations": [[42, "bibliographic-citations"]], "Bibliography file": [[42, "bibliography-file"]], "Building the docs locally": [[43, "building-the-docs-locally"]], "Canonical Polynomial Base": [[20, null]], "Canonical evaluation": [[48, "canonical-evaluation"]], "Canonical polynomials": [[52, "canonical-polynomials"]], "Citations": [[42, "citations"]], "Code example blocks": [[42, "code-example-blocks"]], "Code examples": [[42, "code-examples"]], "Code of conduct": [[37, null]], "Constructing the Regression matrix": [[56, "Constructing-the-Regression-matrix"]], "Constructing the polynomial model": [[56, "Constructing-the-polynomial-model"]], "Contributing directly to the docs": [[43, "contributing-directly-to-the-docs"]], "Contributing to the Development": [[38, null]], "Contributing to the Documentation": [[44, null]], "Contribution guidelines": [[44, "contribution-guidelines"]], "Contributors": [[36, "contributors"]], "Contributors Guide": [[45, null]], "Contributors guides": [[39, "contributors-guides"]], "Core modules": [[6, null]], "Create an interpolant": [[55, "Create-an-interpolant"]], "Creating an issue in the repository": [[43, "creating-an-issue-in-the-repository"]], "Cross-references": [[42, "cross-references"]], "Cross-referencing code blocks": [[42, "cross-referencing-code-blocks"]], "Cross-referencing glossary terms": [[42, "cross-referencing-glossary-terms"]], "Design": [[39, "design"]], "Displaying a list of references": [[42, "displaying-a-list-of-references"]], "Docs source structure": [[43, "docs-source-structure"]], "Documentation contribution guidelines": [[40, null]], "Enforcement and reporting": [[37, "enforcement-and-reporting"]], "Enforcement responsibilities": [[37, "enforcement-responsibilities"]], "Evaluation of multivariate polynomials": [[48, null]], "Explanation (fundamentals, theory)": [[39, "explanation-fundamentals-theory"]], "External cross-references": [[42, "external-cross-references"]], "Fit error": [[56, "Fit-error"]], "Former contributors": [[36, "former-contributors"]], "Frameworks and tools": [[39, "frameworks-and-tools"]], "From Canonical basis": [[32, null]], "From Lagrange basis": [[34, null]], "From Newton basis": [[35, null]], "Full table of contents": [[59, "full-table-of-contents"]], "Fundamentals of minterpy": [[47, null]], "Generate groundtruth data": [[56, "Generate-groundtruth-data"]], "Generating nodes": [[49, "generating-nodes"]], "Getting started with minterpy": [[54, null]], "Glossary": [[42, "glossary"], [57, null]], "Glossary page": [[42, "glossary-page"]], "Glossary terms": [[42, "glossary-terms"]], "Grid": [[5, null]], "Helper functions": [[31, null]], "How to Contribute to the Docs": [[43, null]], "How to contribute": [[44, "how-to-contribute"]], "How-to Guides": [[58, null]], "How-to guides": [[39, "how-to-guides"]], "Identity transformation": [[33, null]], "In-line code examples": [[42, "in-line-code-examples"]], "Inline mathematics": [[42, "inline-mathematics"]], "Installation": [[54, "installation"]], "Internal API": [[11, null]], "Interpolant class": [[17, null]], "Interpolants of increasing degrees": [[55, "Interpolants-of-increasing-degrees"]], "Interpolation": [[16, null]], "Interpolation in unisolvent nodes": [[49, null]], "Interpolator class": [[19, null]], "Introduction": [[50, null]], "Lagrange Polynomial Base": [[22, null]], "Lagrange evaluation": [[48, "lagrange-evaluation"]], "Lagrange interpolation": [[49, "lagrange-interpolation"]], "Lagrange polynomials": [[52, "lagrange-polynomials"]], "Lifting the curse of dimensionality": [[50, "lifting-the-curse-of-dimensionality"]], "Locations where the data is known": [[56, "Locations-where-the-data-is-known"]], "Mathematics": [[42, "mathematics"]], "Mathematics blocks": [[42, "mathematics-blocks"]], "Matrix Operator": [[29, null]], "Multi index sets": [[7, null]], "Multi index tree": [[8, null]], "Multi-index sets and polynomial degree": [[52, "multi-index-sets-and-polynomial-degree"]], "Multi-index tree": [[51, "multi-index-tree"]], "Multivariate divided difference scheme (DDS)": [[51, null]], "Multivariate polynomial ABC": [[3, null]], "Multivariate polynomial bases": [[52, null]], "Multivariate polynomial interpolation": [[50, "multivariate-polynomial-interpolation"]], "Newton Polynomial Base": [[23, null]], "Newton evaluation": [[48, "newton-evaluation"]], "Newton interpolation": [[49, "newton-interpolation"]], "Newton polynomials": [[52, "newton-polynomials"]], "Notes": [[42, "notes"]], "Numbering and cross-referencing": [[42, "numbering-and-cross-referencing"]], "Observed groundtruth data": [[56, "Observed-groundtruth-data"]], "One-dimensional function interpolation": [[55, null]], "Operator ABC": [[2, null]], "Other projects\u2019 documentation cross-references": [[42, "other-projects-documentation-cross-references"]], "Our pledge": [[37, "our-pledge"]], "Our standards": [[37, "our-standards"]], "Page cross-references": [[42, "page-cross-references"]], "Polynomial Base classes": [[21, null]], "Polynomial Regression with minterpy": [[56, null]], "Polynomial Transformation classes": [[30, null]], "Polynomial regression": [[56, "Polynomial-regression"]], "Problem": [[56, "Problem"]], "Project maintainers": [[36, "project-maintainers"]], "Reconstruct the groundtruth using fit polynomial": [[56, "Reconstruct-the-groundtruth-using-fit-polynomial"]], "References": [[46, "references"], [48, "references"], [49, "references"], [50, "references"], [51, "references"], [52, "references"], [53, "references"], [59, "references"]], "Resampling on a finer grid": [[56, "Resampling-on-a-finer-grid"]], "Scope": [[37, "scope"]], "Section headings cross-references": [[42, "section-headings-cross-references"]], "Setup": [[55, "Setup"]], "Splitting Theorems": [[51, "splitting-theorems"]], "Splitting of the unisolvent nodes": [[51, "splitting-of-the-unisolvent-nodes"]], "Sponsors": [[36, "sponsors"]], "Sub-tree recursion": [[51, "sub-tree-recursion"]], "TODO lists": [[0, null]], "Testing the installation": [[54, "testing-the-installation"]], "The notion of unisolvence": [[50, "the-notion-of-unisolvence"]], "Todo": [[0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [0, null], [2, "id1"], [5, "id1"], [5, "id2"], [5, "id3"], [5, "id4"], [7, "id1"], [7, "id2"], [7, "id3"], [7, "id4"], [7, "id5"], [14, "id1"], [14, "id2"], [14, "id3"], [14, "id4"], [15, "id1"], [15, "id2"], [15, "id3"], [15, "id4"], [15, "id5"], [15, "id6"], [15, "id7"], [22, "id1"], [23, "id1"], [23, "id2"], [23, "id3"], [37, "id1"], [43, "id1"]], "Transformation ABC": [[4, null]], "Transformation Operator classes": [[28, null]], "Transformation between bases": [[53, null]], "Tutorials": [[39, "tutorials"]], "Tutorials table of contents": [[54, "tutorials-table-of-contents"]], "Unisolvent nodes": [[49, "unisolvent-nodes"]], "What is minterpy?": [[59, "what-is-minterpy"]], "What to contribute": [[43, "what-to-contribute"]], "What\u2019s next": [[54, "what-s-next"]], "Writing Jupyter Notebooks": [[41, null]], "Writing reStructuredText Docs": [[42, null]], "core utility functions": [[10, null]], "interpolate function": [[18, null]], "minterpy API Reference": [[9, null]], "minterpy API elements": [[42, "minterpy-api-elements"]], "minterpy Documentation": [[59, null]], "numba accelerated utility functions": [[12, null]], "transformation utility functions": [[13, null]], "utility functions": [[14, null]], "verification functions": [[15, null]]}, "docnames": ["TODO", "api/core/ABC/index", "api/core/ABC/operatorABC", "api/core/ABC/polyABC", "api/core/ABC/trafoABC", "api/core/grid", "api/core/index", "api/core/multi_index", "api/core/tree", "api/index", "api/internal/coreutils", "api/internal/index", "api/internal/jit_compiled_utils", "api/internal/trafoutils", "api/internal/utils", "api/internal/verification", "api/interpolation/index", "api/interpolation/interpolant", "api/interpolation/interpolate", "api/interpolation/interpolator", "api/polyBases/canonical", "api/polyBases/index", "api/polyBases/lagrange", "api/polyBases/newton", "api/transformOperators/barycentricDictTransform", "api/transformOperators/barycentricFactorisedTransform", "api/transformOperators/barycentricOp", "api/transformOperators/barycentricPiecewiseTransform", "api/transformOperators/index", "api/transformOperators/matrixTransform", "api/transformations/index", "api/transformations/interface", "api/transformations/transformationCanonical", "api/transformations/transformationIdentity", "api/transformations/transformationLagrange", "api/transformations/transformationNewton", "contributors/about-us", "contributors/code-of-conduct", "contributors/contrib-dev/index", "contributors/contrib-docs/about-the-docs", "contributors/contrib-docs/guidelines/index", "contributors/contrib-docs/guidelines/ipynb-based-docs", "contributors/contrib-docs/guidelines/rest-based-docs", "contributors/contrib-docs/how-to-contrib", "contributors/contrib-docs/index", "contributors/index", "fundamentals/barycentric-transformation", "fundamentals/index", "fundamentals/interpolation-evaluation", "fundamentals/interpolation-in-unisolvent-nodes", "fundamentals/introduction", "fundamentals/multivariate-dds", "fundamentals/polynomial-bases", "fundamentals/transformation", "getting-started/index", "getting-started/one-dimensional-function-interpolation", "getting-started/polynomial-regression", "glossary", "how-to/index", "index"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["TODO.rst", "api/core/ABC/index.rst", "api/core/ABC/operatorABC.rst", "api/core/ABC/polyABC.rst", "api/core/ABC/trafoABC.rst", "api/core/grid.rst", "api/core/index.rst", "api/core/multi_index.rst", "api/core/tree.rst", "api/index.rst", "api/internal/coreutils.rst", "api/internal/index.rst", "api/internal/jit_compiled_utils.rst", "api/internal/trafoutils.rst", "api/internal/utils.rst", "api/internal/verification.rst", "api/interpolation/index.rst", "api/interpolation/interpolant.rst", "api/interpolation/interpolate.rst", "api/interpolation/interpolator.rst", "api/polyBases/canonical.rst", "api/polyBases/index.rst", "api/polyBases/lagrange.rst", "api/polyBases/newton.rst", "api/transformOperators/barycentricDictTransform.rst", "api/transformOperators/barycentricFactorisedTransform.rst", "api/transformOperators/barycentricOp.rst", "api/transformOperators/barycentricPiecewiseTransform.rst", "api/transformOperators/index.rst", "api/transformOperators/matrixTransform.rst", "api/transformations/index.rst", "api/transformations/interface.rst", "api/transformations/transformationCanonical.rst", "api/transformations/transformationIdentity.rst", "api/transformations/transformationLagrange.rst", "api/transformations/transformationNewton.rst", "contributors/about-us.rst", "contributors/code-of-conduct.rst", "contributors/contrib-dev/index.rst", "contributors/contrib-docs/about-the-docs.rst", "contributors/contrib-docs/guidelines/index.rst", "contributors/contrib-docs/guidelines/ipynb-based-docs.rst", "contributors/contrib-docs/guidelines/rest-based-docs.rst", "contributors/contrib-docs/how-to-contrib.rst", "contributors/contrib-docs/index.rst", "contributors/index.rst", "fundamentals/barycentric-transformation.rst", "fundamentals/index.rst", "fundamentals/interpolation-evaluation.rst", "fundamentals/interpolation-in-unisolvent-nodes.rst", "fundamentals/introduction.rst", "fundamentals/multivariate-dds.rst", "fundamentals/polynomial-bases.rst", "fundamentals/transformation.rst", "getting-started/index.rst", "getting-started/one-dimensional-function-interpolation.ipynb", "getting-started/polynomial-regression.ipynb", "glossary.rst", "how-to/index.rst", "index.rst"], "indexentries": {"__add__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__add__", false]], "__add__() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.__add__", false]], "__add__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__add__", false]], "__add__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__add__", false]], "__add__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__add__", false]], "__call__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.__call__", false]], "__call__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__call__", false]], "__call__() (minterpy.core.abc.transformation_abstract.transformationabc method)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC.__call__", false]], "__call__() (minterpy.interpolation.interpolant method)": [[17, "minterpy.interpolation.Interpolant.__call__", false]], "__call__() (minterpy.interpolation.interpolator method)": [[19, "minterpy.interpolation.Interpolator.__call__", false]], "__call__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__call__", false]], "__call__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__call__", false]], "__call__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__call__", false]], "__call__() (minterpy.transformations.canonical.canonicaltolagrange method)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange.__call__", false]], "__call__() (minterpy.transformations.canonical.canonicaltonewton method)": [[32, "minterpy.transformations.canonical.CanonicalToNewton.__call__", false]], "__call__() (minterpy.transformations.identity.identity method)": [[33, "minterpy.transformations.identity.Identity.__call__", false]], "__call__() (minterpy.transformations.lagrange.lagrangetocanonical method)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical.__call__", false]], "__call__() (minterpy.transformations.lagrange.lagrangetonewton method)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton.__call__", false]], "__call__() (minterpy.transformations.newton.newtontocanonical method)": [[35, "minterpy.transformations.newton.NewtonToCanonical.__call__", false]], "__call__() (minterpy.transformations.newton.newtontolagrange method)": [[35, "minterpy.transformations.newton.NewtonToLagrange.__call__", false]], "__copy__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__copy__", false]], "__copy__() (minterpy.core.grid.grid method)": [[5, "minterpy.core.grid.Grid.__copy__", false]], "__copy__() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.__copy__", false]], "__copy__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__copy__", false]], "__copy__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__copy__", false]], "__copy__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__copy__", false]], "__deepcopy__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__deepcopy__", false]], "__deepcopy__() (minterpy.core.grid.grid method)": [[5, "minterpy.core.grid.Grid.__deepcopy__", false]], "__deepcopy__() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.__deepcopy__", false]], "__deepcopy__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__deepcopy__", false]], "__deepcopy__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__deepcopy__", false]], "__deepcopy__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__deepcopy__", false]], "__delattr__() (minterpy.interpolation.interpolant method)": [[17, "minterpy.interpolation.Interpolant.__delattr__", false]], "__delattr__() (minterpy.interpolation.interpolator method)": [[19, "minterpy.interpolation.Interpolator.__delattr__", false]], "__init__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__init__", false]], "__init__() (minterpy.core.abc.transformation_abstract.transformationabc method)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC.__init__", false]], "__init__() (minterpy.core.grid.grid method)": [[5, "minterpy.core.grid.Grid.__init__", false]], "__init__() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.__init__", false]], "__init__() (minterpy.core.tree.multiindextree method)": [[8, "minterpy.core.tree.MultiIndexTree.__init__", false]], "__init__() (minterpy.interpolation.interpolant method)": [[17, "minterpy.interpolation.Interpolant.__init__", false]], "__init__() (minterpy.interpolation.interpolator method)": [[19, "minterpy.interpolation.Interpolator.__init__", false]], "__init__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__init__", false]], "__init__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__init__", false]], "__init__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__init__", false]], "__init__() (minterpy.schemes.barycentric.operators.barycentricdictoperator method)": [[24, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.__init__", false]], "__init__() (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator method)": [[25, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.__init__", false]], "__init__() (minterpy.schemes.barycentric.operators.barycentricoperator method)": [[26, "minterpy.schemes.barycentric.operators.BarycentricOperator.__init__", false]], "__init__() (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator method)": [[27, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.__init__", false]], "__init__() (minterpy.schemes.matrix_operator.matrixoperator method)": [[29, "minterpy.schemes.matrix_operator.MatrixOperator.__init__", false]], "__init__() (minterpy.transformations.canonical.canonicaltolagrange method)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange.__init__", false]], "__init__() (minterpy.transformations.canonical.canonicaltonewton method)": [[32, "minterpy.transformations.canonical.CanonicalToNewton.__init__", false]], "__init__() (minterpy.transformations.identity.identity method)": [[33, "minterpy.transformations.identity.Identity.__init__", false]], "__init__() (minterpy.transformations.lagrange.lagrangetocanonical method)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical.__init__", false]], "__init__() (minterpy.transformations.lagrange.lagrangetonewton method)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton.__init__", false]], "__init__() (minterpy.transformations.newton.newtontocanonical method)": [[35, "minterpy.transformations.newton.NewtonToCanonical.__init__", false]], "__init__() (minterpy.transformations.newton.newtontolagrange method)": [[35, "minterpy.transformations.newton.NewtonToLagrange.__init__", false]], "__init_subclass__() (minterpy.core.abc.transformation_abstract.transformationabc class method)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.canonical.canonicaltolagrange class method)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.canonical.canonicaltonewton class method)": [[32, "minterpy.transformations.canonical.CanonicalToNewton.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.identity.identity class method)": [[33, "minterpy.transformations.identity.Identity.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.lagrange.lagrangetocanonical class method)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.lagrange.lagrangetonewton class method)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.newton.newtontocanonical class method)": [[35, "minterpy.transformations.newton.NewtonToCanonical.__init_subclass__", false]], "__init_subclass__() (minterpy.transformations.newton.newtontolagrange class method)": [[35, "minterpy.transformations.newton.NewtonToLagrange.__init_subclass__", false]], "__matmul__() (minterpy.core.abc.operator_abstract.operatorabc method)": [[2, "minterpy.core.ABC.operator_abstract.OperatorABC.__matmul__", false]], "__matmul__() (minterpy.schemes.barycentric.operators.barycentricdictoperator method)": [[24, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.__matmul__", false]], "__matmul__() (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator method)": [[25, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.__matmul__", false]], "__matmul__() (minterpy.schemes.barycentric.operators.barycentricoperator method)": [[26, "minterpy.schemes.barycentric.operators.BarycentricOperator.__matmul__", false]], "__matmul__() (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator method)": [[27, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.__matmul__", false]], "__matmul__() (minterpy.schemes.matrix_operator.matrixoperator method)": [[29, "minterpy.schemes.matrix_operator.MatrixOperator.__matmul__", false]], "__mul__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__mul__", false]], "__mul__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__mul__", false]], "__mul__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__mul__", false]], "__mul__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__mul__", false]], "__neg__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__neg__", false]], "__neg__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__neg__", false]], "__neg__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__neg__", false]], "__neg__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__neg__", false]], "__pos__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__pos__", false]], "__pos__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__pos__", false]], "__pos__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__pos__", false]], "__pos__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__pos__", false]], "__radd__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__radd__", false]], "__radd__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__radd__", false]], "__radd__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__radd__", false]], "__radd__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__radd__", false]], "__repr__() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.__repr__", false]], "__repr__() (minterpy.interpolation.interpolant method)": [[17, "minterpy.interpolation.Interpolant.__repr__", false]], "__repr__() (minterpy.interpolation.interpolator method)": [[19, "minterpy.interpolation.Interpolator.__repr__", false]], "__rmul__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__rmul__", false]], "__rmul__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__rmul__", false]], "__rmul__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__rmul__", false]], "__rmul__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__rmul__", false]], "__rsub__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__rsub__", false]], "__rsub__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__rsub__", false]], "__rsub__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__rsub__", false]], "__rsub__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__rsub__", false]], "__setattr__() (minterpy.interpolation.interpolant method)": [[17, "minterpy.interpolation.Interpolant.__setattr__", false]], "__setattr__() (minterpy.interpolation.interpolator method)": [[19, "minterpy.interpolation.Interpolator.__setattr__", false]], "__str__() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.__str__", false]], "__sub__() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__sub__", false]], "__sub__() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__sub__", false]], "__sub__() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__sub__", false]], "__sub__() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__sub__", false]], "__weakref__ (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc attribute)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.__weakref__", false]], "__weakref__ (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc attribute)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.__weakref__", false]], "__weakref__ (minterpy.core.abc.transformation_abstract.transformationabc attribute)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC.__weakref__", false]], "__weakref__ (minterpy.core.grid.grid attribute)": [[5, "minterpy.core.grid.Grid.__weakref__", false]], "__weakref__ (minterpy.core.multi_index.multiindexset attribute)": [[7, "minterpy.core.multi_index.MultiIndexSet.__weakref__", false]], "__weakref__ (minterpy.core.tree.multiindextree attribute)": [[8, "minterpy.core.tree.MultiIndexTree.__weakref__", false]], "__weakref__ (minterpy.interpolation.interpolant attribute)": [[17, "minterpy.interpolation.Interpolant.__weakref__", false]], "__weakref__ (minterpy.interpolation.interpolator attribute)": [[19, "minterpy.interpolation.Interpolator.__weakref__", false]], "__weakref__ (minterpy.polynomials.canonical_polynomial.canonicalpolynomial attribute)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.__weakref__", false]], "__weakref__ (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial attribute)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.__weakref__", false]], "__weakref__ (minterpy.polynomials.newton_polynomial.newtonpolynomial attribute)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.__weakref__", false]], "__weakref__ (minterpy.schemes.barycentric.operators.barycentricdictoperator attribute)": [[24, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.__weakref__", false]], "__weakref__ (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator attribute)": [[25, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.__weakref__", false]], "__weakref__ (minterpy.schemes.barycentric.operators.barycentricoperator attribute)": [[26, "minterpy.schemes.barycentric.operators.BarycentricOperator.__weakref__", false]], "__weakref__ (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator attribute)": [[27, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.__weakref__", false]], "__weakref__ (minterpy.schemes.matrix_operator.matrixoperator attribute)": [[29, "minterpy.schemes.matrix_operator.MatrixOperator.__weakref__", false]], "__weakref__ (minterpy.transformations.canonical.canonicaltolagrange attribute)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange.__weakref__", false]], "__weakref__ (minterpy.transformations.canonical.canonicaltonewton attribute)": [[32, "minterpy.transformations.canonical.CanonicalToNewton.__weakref__", false]], "__weakref__ (minterpy.transformations.identity.identity attribute)": [[33, "minterpy.transformations.identity.Identity.__weakref__", false]], "__weakref__ (minterpy.transformations.lagrange.lagrangetocanonical attribute)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical.__weakref__", false]], "__weakref__ (minterpy.transformations.lagrange.lagrangetonewton attribute)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton.__weakref__", false]], "__weakref__ (minterpy.transformations.newton.newtontocanonical attribute)": [[35, "minterpy.transformations.newton.NewtonToCanonical.__weakref__", false]], "__weakref__ (minterpy.transformations.newton.newtontolagrange attribute)": [[35, "minterpy.transformations.newton.NewtonToLagrange.__weakref__", false]], "_add() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._add", false]], "_add() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._add", false]], "_add() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._add", false]], "_apply_transformation() (minterpy.core.abc.transformation_abstract.transformationabc method)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.canonical.canonicaltolagrange method)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.canonical.canonicaltonewton method)": [[32, "minterpy.transformations.canonical.CanonicalToNewton._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.identity.identity method)": [[33, "minterpy.transformations.identity.Identity._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.lagrange.lagrangetocanonical method)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.lagrange.lagrangetonewton method)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.newton.newtontocanonical method)": [[35, "minterpy.transformations.newton.NewtonToCanonical._apply_transformation", false]], "_apply_transformation() (minterpy.transformations.newton.newtontolagrange method)": [[35, "minterpy.transformations.newton.NewtonToLagrange._apply_transformation", false]], "_diff() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._diff", false]], "_diff() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._diff", false]], "_diff() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._diff", false]], "_div() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._div", false]], "_div() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._div", false]], "_div() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._div", false]], "_eval() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC._eval", false]], "_eval() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._eval", false]], "_eval() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._eval", false]], "_eval() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._eval", false]], "_eval() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._eval", false]], "_gen_grid_default() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc static method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._gen_grid_default", false]], "_gen_grid_default() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._gen_grid_default", false]], "_gen_grid_default() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._gen_grid_default", false]], "_gen_grid_default() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._gen_grid_default", false]], "_get_array_repr() (minterpy.core.abc.operator_abstract.operatorabc method)": [[2, "minterpy.core.ABC.operator_abstract.OperatorABC._get_array_repr", false]], "_get_array_repr() (minterpy.schemes.barycentric.operators.barycentricdictoperator method)": [[24, "minterpy.schemes.barycentric.operators.BarycentricDictOperator._get_array_repr", false]], "_get_array_repr() (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator method)": [[25, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator._get_array_repr", false]], "_get_array_repr() (minterpy.schemes.barycentric.operators.barycentricoperator method)": [[26, "minterpy.schemes.barycentric.operators.BarycentricOperator._get_array_repr", false]], "_get_array_repr() (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator method)": [[27, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator._get_array_repr", false]], "_get_array_repr() (minterpy.schemes.matrix_operator.matrixoperator method)": [[29, "minterpy.schemes.matrix_operator.MatrixOperator._get_array_repr", false]], "_get_transformation_operator() (minterpy.core.abc.transformation_abstract.transformationabc method)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.canonical.canonicaltolagrange method)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.canonical.canonicaltonewton method)": [[32, "minterpy.transformations.canonical.CanonicalToNewton._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.identity.identity method)": [[33, "minterpy.transformations.identity.Identity._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.lagrange.lagrangetocanonical method)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.lagrange.lagrangetonewton method)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.newton.newtontocanonical method)": [[35, "minterpy.transformations.newton.NewtonToCanonical._get_transformation_operator", false]], "_get_transformation_operator() (minterpy.transformations.newton.newtontolagrange method)": [[35, "minterpy.transformations.newton.NewtonToLagrange._get_transformation_operator", false]], "_mul() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._mul", false]], "_mul() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._mul", false]], "_mul() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._mul", false]], "_new_instance_if_necessary() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC._new_instance_if_necessary", false]], "_new_instance_if_necessary() (minterpy.core.grid.grid method)": [[5, "minterpy.core.grid.Grid._new_instance_if_necessary", false]], "_new_instance_if_necessary() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet._new_instance_if_necessary", false]], "_new_instance_if_necessary() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._new_instance_if_necessary", false]], "_new_instance_if_necessary() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._new_instance_if_necessary", false]], "_new_instance_if_necessary() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._new_instance_if_necessary", false]], "_partial_diff() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._partial_diff", false]], "_partial_diff() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._partial_diff", false]], "_partial_diff() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._partial_diff", false]], "_pow() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._pow", false]], "_pow() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._pow", false]], "_pow() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._pow", false]], "_sub() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial._sub", false]], "_sub() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial._sub", false]], "_sub() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial._sub", false]], "_target_indices (minterpy.core.abc.transformation_abstract.transformationabc property)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC._target_indices", false]], "_target_indices (minterpy.transformations.canonical.canonicaltolagrange property)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange._target_indices", false]], "_target_indices (minterpy.transformations.canonical.canonicaltonewton property)": [[32, "minterpy.transformations.canonical.CanonicalToNewton._target_indices", false]], "_target_indices (minterpy.transformations.identity.identity property)": [[33, "minterpy.transformations.identity.Identity._target_indices", false]], "_target_indices (minterpy.transformations.lagrange.lagrangetocanonical property)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical._target_indices", false]], "_target_indices (minterpy.transformations.lagrange.lagrangetonewton property)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton._target_indices", false]], "_target_indices (minterpy.transformations.newton.newtontocanonical property)": [[35, "minterpy.transformations.newton.NewtonToCanonical._target_indices", false]], "_target_indices (minterpy.transformations.newton.newtontolagrange property)": [[35, "minterpy.transformations.newton.NewtonToLagrange._target_indices", false]], "add_points() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.add_points", false]], "add_points() (minterpy.core.grid.grid method)": [[5, "minterpy.core.grid.Grid.add_points", false]], "add_points() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.add_points", false]], "add_points() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.add_points", false]], "add_points() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.add_points", false]], "all_indices_are_contained() (in module minterpy.jit_compiled_utils)": [[12, "minterpy.jit_compiled_utils.all_indices_are_contained", false]], "apply_func() (minterpy.core.grid.grid method)": [[5, "minterpy.core.grid.Grid.apply_func", false]], "array_repr_full (minterpy.core.abc.operator_abstract.operatorabc property)": [[2, "minterpy.core.ABC.operator_abstract.OperatorABC.array_repr_full", false]], "array_repr_full (minterpy.schemes.barycentric.operators.barycentricdictoperator property)": [[24, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.array_repr_full", false]], "array_repr_full (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator property)": [[25, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.array_repr_full", false]], "array_repr_full (minterpy.schemes.barycentric.operators.barycentricoperator property)": [[26, "minterpy.schemes.barycentric.operators.BarycentricOperator.array_repr_full", false]], "array_repr_full (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator property)": [[27, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.array_repr_full", false]], "array_repr_full (minterpy.schemes.matrix_operator.matrixoperator property)": [[29, "minterpy.schemes.matrix_operator.MatrixOperator.array_repr_full", false]], "array_repr_sparse (minterpy.core.abc.operator_abstract.operatorabc property)": [[2, "minterpy.core.ABC.operator_abstract.OperatorABC.array_repr_sparse", false]], "array_repr_sparse (minterpy.schemes.barycentric.operators.barycentricdictoperator property)": [[24, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.array_repr_sparse", false]], "array_repr_sparse (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator property)": [[25, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.array_repr_sparse", false]], "array_repr_sparse (minterpy.schemes.barycentric.operators.barycentricoperator property)": [[26, "minterpy.schemes.barycentric.operators.BarycentricOperator.array_repr_sparse", false]], "array_repr_sparse (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator property)": [[27, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.array_repr_sparse", false]], "array_repr_sparse (minterpy.schemes.matrix_operator.matrixoperator property)": [[29, "minterpy.schemes.matrix_operator.MatrixOperator.array_repr_sparse", false]], "array_representation (minterpy.schemes.barycentric.operators.barycentricdictoperator property)": [[24, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.array_representation", false]], "array_representation (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator property)": [[25, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.array_representation", false]], "array_representation (minterpy.schemes.barycentric.operators.barycentricoperator property)": [[26, "minterpy.schemes.barycentric.operators.BarycentricOperator.array_representation", false]], "array_representation (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator property)": [[27, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.array_representation", false]], "barycentricdictoperator (class in minterpy.schemes.barycentric.operators)": [[24, "minterpy.schemes.barycentric.operators.BarycentricDictOperator", false]], "barycentricfactorisedoperator (class in minterpy.schemes.barycentric.operators)": [[25, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator", false]], "barycentricoperator (class in minterpy.schemes.barycentric.operators)": [[26, "minterpy.schemes.barycentric.operators.BarycentricOperator", false]], "barycentricpiecewiseoperator (class in minterpy.schemes.barycentric.operators)": [[27, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator", false]], "can_eval_mult() (in module minterpy.jit_compiled_utils)": [[12, "minterpy.jit_compiled_utils.can_eval_mult", false]], "canonicalpolynomial (class in minterpy.polynomials.canonical_polynomial)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial", false]], "canonicaltolagrange (class in minterpy.transformations.canonical)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange", false]], "canonicaltonewton (class in minterpy.transformations.canonical)": [[32, "minterpy.transformations.canonical.CanonicalToNewton", false]], "cartesian_product() (in module minterpy.utils)": [[14, "minterpy.utils.cartesian_product", false]], "chebychev_2nd_order() (in module minterpy.utils)": [[14, "minterpy.utils.chebychev_2nd_order", false]], "chebyshev nodes": [[57, "term-Chebyshev-nodes", true]], "check_domain_fit() (in module minterpy.core.verification)": [[15, "minterpy.core.verification.check_domain_fit", false]], "check_dtype() (in module minterpy.core.verification)": [[15, "minterpy.core.verification.check_dtype", false]], "check_shape() (in module minterpy.core.verification)": [[15, "minterpy.core.verification.check_shape", false]], "check_type() (in module minterpy.core.verification)": [[15, "minterpy.core.verification.check_type", false]], "check_type_n_values() (in module minterpy.core.verification)": [[15, "minterpy.core.verification.check_type_n_values", false]], "check_values() (in module minterpy.core.verification)": [[15, "minterpy.core.verification.check_values", false]], "coeffs (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc property)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.coeffs", false]], "coeffs (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc property)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.coeffs", false]], "coeffs (minterpy.polynomials.canonical_polynomial.canonicalpolynomial property)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.coeffs", false]], "coeffs (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial property)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.coeffs", false]], "coeffs (minterpy.polynomials.newton_polynomial.newtonpolynomial property)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.coeffs", false]], "compute_vandermonde_n2c() (in module minterpy.jit_compiled_utils)": [[12, "minterpy.jit_compiled_utils.compute_vandermonde_n2c", false]], "contains_these_exponents() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.contains_these_exponents", false]], "convert_eval_output() (in module minterpy.core.verification)": [[15, "minterpy.core.verification.convert_eval_output", false]], "copy_private_attributes() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.copy_private_attributes", false]], "diff() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.diff", false]], "diff() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.diff", false]], "diff() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.diff", false]], "diff() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.diff", false]], "eval_newton_monomials() (in module minterpy.utils)": [[14, "minterpy.utils.eval_newton_monomials", false]], "eval_newton_monomials_multiple() (in module minterpy.jit_compiled_utils)": [[12, "minterpy.jit_compiled_utils.eval_newton_monomials_multiple", false]], "eval_newton_monomials_single() (in module minterpy.jit_compiled_utils)": [[12, "minterpy.jit_compiled_utils.eval_newton_monomials_single", false]], "eval_newton_polynomials() (in module minterpy.utils)": [[14, "minterpy.utils.eval_newton_polynomials", false]], "eval_newton_polynomials_batch() (in module minterpy.utils)": [[14, "minterpy.utils.eval_newton_polynomials_batch", false]], "expand_dim() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.expand_dim", false]], "expand_dim() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.expand_dim", false]], "expand_dim() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.expand_dim", false]], "expand_dim() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.expand_dim", false]], "exponents (minterpy.core.multi_index.multiindexset property)": [[7, "minterpy.core.multi_index.MultiIndexSet.exponents", false]], "exponents_completed (minterpy.core.multi_index.multiindexset property)": [[7, "minterpy.core.multi_index.MultiIndexSet.exponents_completed", false]], "fill_match_positions() (in module minterpy.jit_compiled_utils)": [[12, "minterpy.jit_compiled_utils.fill_match_positions", false]], "find_match_between() (in module minterpy.core.utils)": [[10, "minterpy.core.utils.find_match_between", false]], "from_degree() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc class method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.from_degree", false]], "from_degree() (minterpy.interpolation.interpolant class method)": [[17, "minterpy.interpolation.Interpolant.from_degree", false]], "from_degree() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial class method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.from_degree", false]], "from_degree() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial class method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.from_degree", false]], "from_degree() (minterpy.polynomials.newton_polynomial.newtonpolynomial class method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.from_degree", false]], "from_generator() (minterpy.core.grid.grid class method)": [[5, "minterpy.core.grid.Grid.from_generator", false]], "from_poly() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc class method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.from_poly", false]], "from_poly() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial class method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.from_poly", false]], "from_poly() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial class method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.from_poly", false]], "from_poly() (minterpy.polynomials.newton_polynomial.newtonpolynomial class method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.from_poly", false]], "from_value_set() (minterpy.core.grid.grid class method)": [[5, "minterpy.core.grid.Grid.from_value_set", false]], "gen_chebychev_2nd_order_leja_ordered() (in module minterpy.utils)": [[14, "minterpy.utils.gen_chebychev_2nd_order_leja_ordered", false]], "gen_missing_derivatives() (in module minterpy.core.utils)": [[10, "minterpy.core.utils.gen_missing_derivatives", false]], "gen_partial_derivatives() (in module minterpy.core.utils)": [[10, "minterpy.core.utils.gen_partial_derivatives", false]], "generate_internal_domain() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.generate_internal_domain", false]], "generate_internal_domain() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.generate_internal_domain", false]], "generate_internal_domain() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.generate_internal_domain", false]], "generate_user_domain() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial static method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.generate_user_domain", false]], "generate_user_domain() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial static method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.generate_user_domain", false]], "generate_user_domain() (minterpy.polynomials.newton_polynomial.newtonpolynomial static method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.generate_user_domain", false]], "generating_values (minterpy.core.grid.grid property)": [[5, "minterpy.core.grid.Grid.generating_values", false]], "get_exponent_matrix() (in module minterpy.core.utils)": [[10, "minterpy.core.utils.get_exponent_matrix", false]], "get_match_idx() (in module minterpy.jit_compiled_utils)": [[12, "minterpy.jit_compiled_utils.get_match_idx", false]], "get_transformation() (in module minterpy.transformations.interface)": [[31, "minterpy.transformations.interface.get_transformation", false]], "get_transformation_class() (in module minterpy.transformations.interface)": [[31, "minterpy.transformations.interface.get_transformation_class", false]], "grid (class in minterpy.core.grid)": [[5, "minterpy.core.grid.Grid", false]], "grid (minterpy.core.abc.transformation_abstract.transformationabc property)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC.grid", false]], "grid (minterpy.transformations.canonical.canonicaltolagrange property)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange.grid", false]], "grid (minterpy.transformations.canonical.canonicaltonewton property)": [[32, "minterpy.transformations.canonical.CanonicalToNewton.grid", false]], "grid (minterpy.transformations.identity.identity property)": [[33, "minterpy.transformations.identity.Identity.grid", false]], "grid (minterpy.transformations.lagrange.lagrangetocanonical property)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical.grid", false]], "grid (minterpy.transformations.lagrange.lagrangetonewton property)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton.grid", false]], "grid (minterpy.transformations.newton.newtontocanonical property)": [[35, "minterpy.transformations.newton.NewtonToCanonical.grid", false]], "grid (minterpy.transformations.newton.newtontolagrange property)": [[35, "minterpy.transformations.newton.NewtonToLagrange.grid", false]], "have_lexicographical_ordering() (in module minterpy.jit_compiled_utils)": [[12, "minterpy.jit_compiled_utils.have_lexicographical_ordering", false]], "identity (class in minterpy.transformations.identity)": [[33, "minterpy.transformations.identity.Identity", false]], "index_is_contained() (in module minterpy.jit_compiled_utils)": [[12, "minterpy.jit_compiled_utils.index_is_contained", false]], "insert_lexicographically() (in module minterpy.core.utils)": [[10, "minterpy.core.utils.insert_lexicographically", false]], "interpolant (class in minterpy.interpolation)": [[17, "minterpy.interpolation.Interpolant", false]], "interpolate() (in module minterpy.interpolation)": [[18, "minterpy.interpolation.interpolate", false]], "interpolator (class in minterpy.interpolation)": [[19, "minterpy.interpolation.Interpolator", false]], "is_complete (minterpy.core.multi_index.multiindexset property)": [[7, "minterpy.core.multi_index.MultiIndexSet.is_complete", false]], "is_lexicographically_complete() (in module minterpy.core.utils)": [[10, "minterpy.core.utils.is_lexicographically_complete", false]], "is_sub_index_set_of() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.is_sub_index_set_of", false]], "is_super_index_set_of() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.is_super_index_set_of", false]], "lagrangepolynomial (class in minterpy.polynomials.lagrange_polynomial)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial", false]], "lagrangetocanonical (class in minterpy.transformations.lagrange)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical", false]], "lagrangetonewton (class in minterpy.transformations.lagrange)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton", false]], "lex_smaller_or_equal() (in module minterpy.jit_compiled_utils)": [[12, "minterpy.jit_compiled_utils.lex_smaller_or_equal", false]], "list_insert_single() (in module minterpy.core.utils)": [[10, "minterpy.core.utils.list_insert_single", false]], "lp_degree (minterpy.core.multi_index.multiindexset property)": [[7, "minterpy.core.multi_index.MultiIndexSet.lp_degree", false]], "lp_degree (minterpy.interpolation.interpolant property)": [[17, "minterpy.interpolation.Interpolant.lp_degree", false]], "lp_norm() (in module minterpy.utils)": [[14, "minterpy.utils.lp_norm", false]], "lp_sum() (in module minterpy.utils)": [[14, "minterpy.utils.lp_sum", false]], "make_complete() (in module minterpy.core.utils)": [[10, "minterpy.core.utils.make_complete", false]], "make_complete() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.make_complete", false]], "make_complete() (minterpy.core.grid.grid method)": [[5, "minterpy.core.grid.Grid.make_complete", false]], "make_complete() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.make_complete", false]], "make_complete() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.make_complete", false]], "make_complete() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.make_complete", false]], "make_complete() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.make_complete", false]], "make_derivable() (in module minterpy.core.utils)": [[10, "minterpy.core.utils.make_derivable", false]], "matrixoperator (class in minterpy.schemes.matrix_operator)": [[29, "minterpy.schemes.matrix_operator.MatrixOperator", false]], "merging_fct() (minterpy.schemes.barycentric.operators.barycentricdictoperator method)": [[24, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.merging_fct", false]], "merging_fct() (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator method)": [[25, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.merging_fct", false]], "merging_fct() (minterpy.schemes.barycentric.operators.barycentricoperator static method)": [[26, "minterpy.schemes.barycentric.operators.BarycentricOperator.merging_fct", false]], "merging_fct() (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator method)": [[27, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.merging_fct", false]], "minterpy.core": [[6, "module-minterpy.core", false]], "minterpy.core.abc": [[1, "module-minterpy.core.ABC", false]], "minterpy.core.abc.multivariate_polynomial_abstract": [[3, "module-minterpy.core.ABC.multivariate_polynomial_abstract", false]], "minterpy.core.abc.operator_abstract": [[2, "module-minterpy.core.ABC.operator_abstract", false]], "minterpy.core.abc.transformation_abstract": [[4, "module-minterpy.core.ABC.transformation_abstract", false]], "minterpy.core.grid": [[5, "module-minterpy.core.grid", false]], "minterpy.core.multi_index": [[7, "module-minterpy.core.multi_index", false]], "minterpy.core.tree": [[8, "module-minterpy.core.tree", false]], "minterpy.core.utils": [[10, "module-minterpy.core.utils", false]], "minterpy.core.verification": [[15, "module-minterpy.core.verification", false]], "minterpy.jit_compiled_utils": [[12, "module-minterpy.jit_compiled_utils", false]], "minterpy.polynomials.canonical_polynomial": [[20, "module-minterpy.polynomials.canonical_polynomial", false]], "minterpy.polynomials.lagrange_polynomial": [[22, "module-minterpy.polynomials.lagrange_polynomial", false]], "minterpy.polynomials.newton_polynomial": [[23, "module-minterpy.polynomials.newton_polynomial", false]], "minterpy.transformations.canonical": [[32, "module-minterpy.transformations.canonical", false]], "minterpy.transformations.identity": [[33, "module-minterpy.transformations.identity", false]], "minterpy.transformations.interface": [[31, "module-minterpy.transformations.interface", false]], "minterpy.transformations.lagrange": [[34, "module-minterpy.transformations.lagrange", false]], "minterpy.transformations.newton": [[35, "module-minterpy.transformations.newton", false]], "minterpy.transformations.utils": [[13, "module-minterpy.transformations.utils", false]], "minterpy.utils": [[14, "module-minterpy.utils", false]], "module": [[1, "module-minterpy.core.ABC", false], [2, "module-minterpy.core.ABC.operator_abstract", false], [3, "module-minterpy.core.ABC.multivariate_polynomial_abstract", false], [4, "module-minterpy.core.ABC.transformation_abstract", false], [5, "module-minterpy.core.grid", false], [6, "module-minterpy.core", false], [7, "module-minterpy.core.multi_index", false], [8, "module-minterpy.core.tree", false], [10, "module-minterpy.core.utils", false], [12, "module-minterpy.jit_compiled_utils", false], [13, "module-minterpy.transformations.utils", false], [14, "module-minterpy.utils", false], [15, "module-minterpy.core.verification", false], [20, "module-minterpy.polynomials.canonical_polynomial", false], [22, "module-minterpy.polynomials.lagrange_polynomial", false], [23, "module-minterpy.polynomials.newton_polynomial", false], [31, "module-minterpy.transformations.interface", false], [32, "module-minterpy.transformations.canonical", false], [33, "module-minterpy.transformations.identity", false], [34, "module-minterpy.transformations.lagrange", false], [35, "module-minterpy.transformations.newton", false]], "multi-index set": [[57, "term-Multi-index-set", true]], "multi_index (minterpy.core.abc.transformation_abstract.transformationabc property)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC.multi_index", false]], "multi_index (minterpy.core.tree.multiindextree property)": [[8, "minterpy.core.tree.MultiIndexTree.multi_index", false]], "multi_index (minterpy.transformations.canonical.canonicaltolagrange property)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange.multi_index", false]], "multi_index (minterpy.transformations.canonical.canonicaltonewton property)": [[32, "minterpy.transformations.canonical.CanonicalToNewton.multi_index", false]], "multi_index (minterpy.transformations.identity.identity property)": [[33, "minterpy.transformations.identity.Identity.multi_index", false]], "multi_index (minterpy.transformations.lagrange.lagrangetocanonical property)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical.multi_index", false]], "multi_index (minterpy.transformations.lagrange.lagrangetonewton property)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton.multi_index", false]], "multi_index (minterpy.transformations.newton.newtontocanonical property)": [[35, "minterpy.transformations.newton.NewtonToCanonical.multi_index", false]], "multi_index (minterpy.transformations.newton.newtontolagrange property)": [[35, "minterpy.transformations.newton.NewtonToLagrange.multi_index", false]], "multiindexset (class in minterpy.core.multi_index)": [[7, "minterpy.core.multi_index.MultiIndexSet", false]], "multiindextree (class in minterpy.core.tree)": [[8, "minterpy.core.tree.MultiIndexTree", false]], "multivariatepolynomialabc (class in minterpy.core.abc.multivariate_polynomial_abstract)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC", false]], "multivariatepolynomialsingleabc (class in minterpy.core.abc.multivariate_polynomial_abstract)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC", false]], "newtonpolynomial (class in minterpy.polynomials.newton_polynomial)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial", false]], "newtontocanonical (class in minterpy.transformations.newton)": [[35, "minterpy.transformations.newton.NewtonToCanonical", false]], "newtontolagrange (class in minterpy.transformations.newton)": [[35, "minterpy.transformations.newton.NewtonToLagrange", false]], "nr_active_monomials (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc property)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.nr_active_monomials", false]], "nr_active_monomials (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc property)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.nr_active_monomials", false]], "nr_active_monomials (minterpy.polynomials.canonical_polynomial.canonicalpolynomial property)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.nr_active_monomials", false]], "nr_active_monomials (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial property)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.nr_active_monomials", false]], "nr_active_monomials (minterpy.polynomials.newton_polynomial.newtonpolynomial property)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.nr_active_monomials", false]], "operatorabc (class in minterpy.core.abc.operator_abstract)": [[2, "minterpy.core.ABC.operator_abstract.OperatorABC", false]], "ordering() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.ordering", false]], "origin_type (minterpy.core.abc.transformation_abstract.transformationabc property)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC.origin_type", false]], "origin_type (minterpy.transformations.canonical.canonicaltolagrange attribute)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange.origin_type", false]], "origin_type (minterpy.transformations.canonical.canonicaltonewton attribute)": [[32, "minterpy.transformations.canonical.CanonicalToNewton.origin_type", false]], "origin_type (minterpy.transformations.identity.identity attribute)": [[33, "minterpy.transformations.identity.Identity.origin_type", false]], "origin_type (minterpy.transformations.lagrange.lagrangetocanonical attribute)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical.origin_type", false]], "origin_type (minterpy.transformations.lagrange.lagrangetonewton attribute)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton.origin_type", false]], "origin_type (minterpy.transformations.newton.newtontocanonical attribute)": [[35, "minterpy.transformations.newton.NewtonToCanonical.origin_type", false]], "origin_type (minterpy.transformations.newton.newtontolagrange attribute)": [[35, "minterpy.transformations.newton.NewtonToLagrange.origin_type", false]], "partial_diff() (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc method)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.partial_diff", false]], "partial_diff() (minterpy.polynomials.canonical_polynomial.canonicalpolynomial method)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.partial_diff", false]], "partial_diff() (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial method)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.partial_diff", false]], "partial_diff() (minterpy.polynomials.newton_polynomial.newtonpolynomial method)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.partial_diff", false]], "pep 3119": [[3, "index-0", false]], "poly_degree (minterpy.interpolation.interpolant property)": [[17, "minterpy.interpolation.Interpolant.poly_degree", false]], "python enhancement proposals": [[3, "index-0", false]], "rectify_eval_input() (in module minterpy.core.verification)": [[15, "minterpy.core.verification.rectify_eval_input", false]], "rectify_query_points() (in module minterpy.core.verification)": [[15, "minterpy.core.verification.rectify_query_points", false]], "spatial_dimension (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc property)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.spatial_dimension", false]], "spatial_dimension (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc property)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.spatial_dimension", false]], "spatial_dimension (minterpy.core.grid.grid property)": [[5, "minterpy.core.grid.Grid.spatial_dimension", false]], "spatial_dimension (minterpy.core.multi_index.multiindexset property)": [[7, "minterpy.core.multi_index.MultiIndexSet.spatial_dimension", false]], "spatial_dimension (minterpy.interpolation.interpolant property)": [[17, "minterpy.interpolation.Interpolant.spatial_dimension", false]], "spatial_dimension (minterpy.polynomials.canonical_polynomial.canonicalpolynomial property)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.spatial_dimension", false]], "spatial_dimension (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial property)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.spatial_dimension", false]], "spatial_dimension (minterpy.polynomials.newton_polynomial.newtonpolynomial property)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.spatial_dimension", false]], "stored_masks (minterpy.core.tree.multiindextree property)": [[8, "minterpy.core.tree.MultiIndexTree.stored_masks", false]], "target_type (minterpy.core.abc.transformation_abstract.transformationabc property)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC.target_type", false]], "target_type (minterpy.transformations.canonical.canonicaltolagrange attribute)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange.target_type", false]], "target_type (minterpy.transformations.canonical.canonicaltonewton attribute)": [[32, "minterpy.transformations.canonical.CanonicalToNewton.target_type", false]], "target_type (minterpy.transformations.identity.identity attribute)": [[33, "minterpy.transformations.identity.Identity.target_type", false]], "target_type (minterpy.transformations.lagrange.lagrangetocanonical attribute)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical.target_type", false]], "target_type (minterpy.transformations.lagrange.lagrangetonewton attribute)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton.target_type", false]], "target_type (minterpy.transformations.newton.newtontocanonical attribute)": [[35, "minterpy.transformations.newton.NewtonToCanonical.target_type", false]], "target_type (minterpy.transformations.newton.newtontolagrange attribute)": [[35, "minterpy.transformations.newton.NewtonToLagrange.target_type", false]], "transformation_fct() (minterpy.schemes.barycentric.operators.barycentricdictoperator method)": [[24, "minterpy.schemes.barycentric.operators.BarycentricDictOperator.transformation_fct", false]], "transformation_fct() (minterpy.schemes.barycentric.operators.barycentricfactorisedoperator method)": [[25, "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator.transformation_fct", false]], "transformation_fct() (minterpy.schemes.barycentric.operators.barycentricoperator static method)": [[26, "minterpy.schemes.barycentric.operators.BarycentricOperator.transformation_fct", false]], "transformation_fct() (minterpy.schemes.barycentric.operators.barycentricpiecewiseoperator method)": [[27, "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator.transformation_fct", false]], "transformation_operator (minterpy.core.abc.transformation_abstract.transformationabc property)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC.transformation_operator", false]], "transformation_operator (minterpy.transformations.canonical.canonicaltolagrange property)": [[32, "minterpy.transformations.canonical.CanonicalToLagrange.transformation_operator", false]], "transformation_operator (minterpy.transformations.canonical.canonicaltonewton property)": [[32, "minterpy.transformations.canonical.CanonicalToNewton.transformation_operator", false]], "transformation_operator (minterpy.transformations.identity.identity property)": [[33, "minterpy.transformations.identity.Identity.transformation_operator", false]], "transformation_operator (minterpy.transformations.lagrange.lagrangetocanonical property)": [[34, "minterpy.transformations.lagrange.LagrangeToCanonical.transformation_operator", false]], "transformation_operator (minterpy.transformations.lagrange.lagrangetonewton property)": [[34, "minterpy.transformations.lagrange.LagrangeToNewton.transformation_operator", false]], "transformation_operator (minterpy.transformations.newton.newtontocanonical property)": [[35, "minterpy.transformations.newton.NewtonToCanonical.transformation_operator", false]], "transformation_operator (minterpy.transformations.newton.newtontolagrange property)": [[35, "minterpy.transformations.newton.NewtonToLagrange.transformation_operator", false]], "transformationabc (class in minterpy.core.abc.transformation_abstract)": [[4, "minterpy.core.ABC.transformation_abstract.TransformationABC", false]], "tree (minterpy.core.grid.grid property)": [[5, "minterpy.core.grid.Grid.tree", false]], "union() (minterpy.core.multi_index.multiindexset method)": [[7, "minterpy.core.multi_index.MultiIndexSet.union", false]], "unisolvent_nodes (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialabc property)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.core.abc.multivariate_polynomial_abstract.multivariatepolynomialsingleabc property)": [[3, "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.core.grid.grid property)": [[5, "minterpy.core.grid.Grid.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.polynomials.canonical_polynomial.canonicalpolynomial property)": [[20, "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.polynomials.lagrange_polynomial.lagrangepolynomial property)": [[22, "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial.unisolvent_nodes", false]], "unisolvent_nodes (minterpy.polynomials.newton_polynomial.newtonpolynomial property)": [[23, "minterpy.polynomials.newton_polynomial.NewtonPolynomial.unisolvent_nodes", false]], "verify_domain() (in module minterpy.core.verification)": [[15, "minterpy.core.verification.verify_domain", false]]}, "objects": {"minterpy": [[6, 0, 0, "-", "core"], [12, 0, 0, "-", "jit_compiled_utils"], [14, 0, 0, "-", "utils"]], "minterpy.core": [[1, 0, 0, "-", "ABC"], [5, 0, 0, "-", "grid"], [7, 0, 0, "-", "multi_index"], [8, 0, 0, "-", "tree"], [10, 0, 0, "-", "utils"], [15, 0, 0, "-", "verification"]], "minterpy.core.ABC": [[3, 0, 0, "-", "multivariate_polynomial_abstract"], [2, 0, 0, "-", "operator_abstract"], [4, 0, 0, "-", "transformation_abstract"]], "minterpy.core.ABC.multivariate_polynomial_abstract": [[3, 1, 1, "", "MultivariatePolynomialABC"], [3, 1, 1, "", "MultivariatePolynomialSingleABC"]], "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialABC": [[3, 2, 1, "", "__call__"], [3, 3, 1, "", "__weakref__"], [3, 2, 1, "", "_eval"], [3, 4, 1, "", "coeffs"], [3, 4, 1, "", "nr_active_monomials"], [3, 4, 1, "", "spatial_dimension"], [3, 4, 1, "", "unisolvent_nodes"]], "minterpy.core.ABC.multivariate_polynomial_abstract.MultivariatePolynomialSingleABC": [[3, 2, 1, "", "__add__"], [3, 2, 1, "", "__call__"], [3, 2, 1, "", "__copy__"], [3, 2, 1, "", "__deepcopy__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__mul__"], [3, 2, 1, "", "__neg__"], [3, 2, 1, "", "__pos__"], [3, 2, 1, "", "__radd__"], [3, 2, 1, "", "__rmul__"], [3, 2, 1, "", "__rsub__"], [3, 2, 1, "", "__sub__"], [3, 3, 1, "", "__weakref__"], [3, 2, 1, "", "_eval"], [3, 2, 1, "", "_gen_grid_default"], [3, 2, 1, "", "_new_instance_if_necessary"], [3, 2, 1, "", "add_points"], [3, 4, 1, "", "coeffs"], [3, 2, 1, "", "diff"], [3, 2, 1, "", "expand_dim"], [3, 2, 1, "", "from_degree"], [3, 2, 1, "", "from_poly"], [3, 2, 1, "", "make_complete"], [3, 4, 1, "", "nr_active_monomials"], [3, 2, 1, "", "partial_diff"], [3, 4, 1, "", "spatial_dimension"], [3, 4, 1, "", "unisolvent_nodes"]], "minterpy.core.ABC.operator_abstract": [[2, 1, 1, "", "OperatorABC"]], "minterpy.core.ABC.operator_abstract.OperatorABC": [[2, 2, 1, "", "__matmul__"], [2, 2, 1, "", "_get_array_repr"], [2, 4, 1, "", "array_repr_full"], [2, 4, 1, "", "array_repr_sparse"]], "minterpy.core.ABC.transformation_abstract": [[4, 1, 1, "", "TransformationABC"]], "minterpy.core.ABC.transformation_abstract.TransformationABC": [[4, 2, 1, "", "__call__"], [4, 2, 1, "", "__init__"], [4, 2, 1, "", "__init_subclass__"], [4, 3, 1, "", "__weakref__"], [4, 2, 1, "", "_apply_transformation"], [4, 2, 1, "", "_get_transformation_operator"], [4, 4, 1, "", "_target_indices"], [4, 4, 1, "", "grid"], [4, 4, 1, "", "multi_index"], [4, 4, 1, "", "origin_type"], [4, 4, 1, "", "target_type"], [4, 4, 1, "", "transformation_operator"]], "minterpy.core.grid": [[5, 1, 1, "", "Grid"]], "minterpy.core.grid.Grid": [[5, 2, 1, "", "__copy__"], [5, 2, 1, "", "__deepcopy__"], [5, 2, 1, "", "__init__"], [5, 3, 1, "", "__weakref__"], [5, 2, 1, "", "_new_instance_if_necessary"], [5, 2, 1, "", "add_points"], [5, 2, 1, "", "apply_func"], [5, 2, 1, "", "from_generator"], [5, 2, 1, "", "from_value_set"], [5, 4, 1, "", "generating_values"], [5, 2, 1, "", "make_complete"], [5, 4, 1, "", "spatial_dimension"], [5, 4, 1, "", "tree"], [5, 4, 1, "", "unisolvent_nodes"]], "minterpy.core.multi_index": [[7, 1, 1, "", "MultiIndexSet"]], "minterpy.core.multi_index.MultiIndexSet": [[7, 2, 1, "", "__add__"], [7, 2, 1, "", "__copy__"], [7, 2, 1, "", "__deepcopy__"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__repr__"], [7, 2, 1, "", "__str__"], [7, 3, 1, "", "__weakref__"], [7, 2, 1, "", "_new_instance_if_necessary"], [7, 2, 1, "", "contains_these_exponents"], [7, 2, 1, "", "copy_private_attributes"], [7, 4, 1, "", "exponents"], [7, 4, 1, "", "exponents_completed"], [7, 4, 1, "", "is_complete"], [7, 2, 1, "", "is_sub_index_set_of"], [7, 2, 1, "", "is_super_index_set_of"], [7, 4, 1, "", "lp_degree"], [7, 2, 1, "", "make_complete"], [7, 2, 1, "", "ordering"], [7, 4, 1, "", "spatial_dimension"], [7, 2, 1, "", "union"]], "minterpy.core.tree": [[8, 1, 1, "", "MultiIndexTree"]], "minterpy.core.tree.MultiIndexTree": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "__weakref__"], [8, 4, 1, "", "multi_index"], [8, 4, 1, "", "stored_masks"]], "minterpy.core.utils": [[10, 5, 1, "", "find_match_between"], [10, 5, 1, "", "gen_missing_derivatives"], [10, 5, 1, "", "gen_partial_derivatives"], [10, 5, 1, "", "get_exponent_matrix"], [10, 5, 1, "", "insert_lexicographically"], [10, 5, 1, "", "is_lexicographically_complete"], [10, 5, 1, "", "list_insert_single"], [10, 5, 1, "", "make_complete"], [10, 5, 1, "", "make_derivable"]], "minterpy.core.verification": [[15, 5, 1, "", "check_domain_fit"], [15, 5, 1, "", "check_dtype"], [15, 5, 1, "", "check_shape"], [15, 5, 1, "", "check_type"], [15, 5, 1, "", "check_type_n_values"], [15, 5, 1, "", "check_values"], [15, 5, 1, "", "convert_eval_output"], [15, 5, 1, "", "rectify_eval_input"], [15, 5, 1, "", "rectify_query_points"], [15, 5, 1, "", "verify_domain"]], "minterpy.interpolation": [[17, 1, 1, "", "Interpolant"], [19, 1, 1, "", "Interpolator"], [18, 5, 1, "", "interpolate"]], "minterpy.interpolation.Interpolant": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "__delattr__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "__setattr__"], [17, 3, 1, "", "__weakref__"], [17, 2, 1, "", "from_degree"], [17, 4, 1, "", "lp_degree"], [17, 4, 1, "", "poly_degree"], [17, 4, 1, "", "spatial_dimension"]], "minterpy.interpolation.Interpolator": [[19, 2, 1, "", "__call__"], [19, 2, 1, "", "__delattr__"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__repr__"], [19, 2, 1, "", "__setattr__"], [19, 3, 1, "", "__weakref__"]], "minterpy.jit_compiled_utils": [[12, 5, 1, "", "all_indices_are_contained"], [12, 5, 1, "", "can_eval_mult"], [12, 5, 1, "", "compute_vandermonde_n2c"], [12, 5, 1, "", "eval_newton_monomials_multiple"], [12, 5, 1, "", "eval_newton_monomials_single"], [12, 5, 1, "", "fill_match_positions"], [12, 5, 1, "", "get_match_idx"], [12, 5, 1, "", "have_lexicographical_ordering"], [12, 5, 1, "", "index_is_contained"], [12, 5, 1, "", "lex_smaller_or_equal"]], "minterpy.polynomials": [[20, 0, 0, "-", "canonical_polynomial"], [22, 0, 0, "-", "lagrange_polynomial"], [23, 0, 0, "-", "newton_polynomial"]], "minterpy.polynomials.canonical_polynomial": [[20, 1, 1, "", "CanonicalPolynomial"]], "minterpy.polynomials.canonical_polynomial.CanonicalPolynomial": [[20, 2, 1, "", "__add__"], [20, 2, 1, "", "__call__"], [20, 2, 1, "", "__copy__"], [20, 2, 1, "", "__deepcopy__"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__mul__"], [20, 2, 1, "", "__neg__"], [20, 2, 1, "", "__pos__"], [20, 2, 1, "", "__radd__"], [20, 2, 1, "", "__rmul__"], [20, 2, 1, "", "__rsub__"], [20, 2, 1, "", "__sub__"], [20, 3, 1, "", "__weakref__"], [20, 2, 1, "", "_add"], [20, 2, 1, "", "_diff"], [20, 2, 1, "", "_div"], [20, 2, 1, "", "_eval"], [20, 2, 1, "", "_gen_grid_default"], [20, 2, 1, "", "_mul"], [20, 2, 1, "", "_new_instance_if_necessary"], [20, 2, 1, "", "_partial_diff"], [20, 2, 1, "", "_pow"], [20, 2, 1, "", "_sub"], [20, 2, 1, "", "add_points"], [20, 4, 1, "", "coeffs"], [20, 2, 1, "", "diff"], [20, 2, 1, "", "expand_dim"], [20, 2, 1, "", "from_degree"], [20, 2, 1, "", "from_poly"], [20, 2, 1, "", "generate_internal_domain"], [20, 2, 1, "", "generate_user_domain"], [20, 2, 1, "", "make_complete"], [20, 4, 1, "", "nr_active_monomials"], [20, 2, 1, "", "partial_diff"], [20, 4, 1, "", "spatial_dimension"], [20, 4, 1, "", "unisolvent_nodes"]], "minterpy.polynomials.lagrange_polynomial": [[22, 1, 1, "", "LagrangePolynomial"]], "minterpy.polynomials.lagrange_polynomial.LagrangePolynomial": [[22, 2, 1, "", "__add__"], [22, 2, 1, "", "__call__"], [22, 2, 1, "", "__copy__"], [22, 2, 1, "", "__deepcopy__"], [22, 2, 1, "", "__init__"], [22, 2, 1, "", "__mul__"], [22, 2, 1, "", "__neg__"], [22, 2, 1, "", "__pos__"], [22, 2, 1, "", "__radd__"], [22, 2, 1, "", "__rmul__"], [22, 2, 1, "", "__rsub__"], [22, 2, 1, "", "__sub__"], [22, 3, 1, "", "__weakref__"], [22, 2, 1, "", "_add"], [22, 2, 1, "", "_diff"], [22, 2, 1, "", "_div"], [22, 2, 1, "", "_eval"], [22, 2, 1, "", "_gen_grid_default"], [22, 2, 1, "", "_mul"], [22, 2, 1, "", "_new_instance_if_necessary"], [22, 2, 1, "", "_partial_diff"], [22, 2, 1, "", "_pow"], [22, 2, 1, "", "_sub"], [22, 2, 1, "", "add_points"], [22, 4, 1, "", "coeffs"], [22, 2, 1, "", "diff"], [22, 2, 1, "", "expand_dim"], [22, 2, 1, "", "from_degree"], [22, 2, 1, "", "from_poly"], [22, 2, 1, "", "generate_internal_domain"], [22, 2, 1, "", "generate_user_domain"], [22, 2, 1, "", "make_complete"], [22, 4, 1, "", "nr_active_monomials"], [22, 2, 1, "", "partial_diff"], [22, 4, 1, "", "spatial_dimension"], [22, 4, 1, "", "unisolvent_nodes"]], "minterpy.polynomials.newton_polynomial": [[23, 1, 1, "", "NewtonPolynomial"]], "minterpy.polynomials.newton_polynomial.NewtonPolynomial": [[23, 2, 1, "", "__add__"], [23, 2, 1, "", "__call__"], [23, 2, 1, "", "__copy__"], [23, 2, 1, "", "__deepcopy__"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__mul__"], [23, 2, 1, "", "__neg__"], [23, 2, 1, "", "__pos__"], [23, 2, 1, "", "__radd__"], [23, 2, 1, "", "__rmul__"], [23, 2, 1, "", "__rsub__"], [23, 2, 1, "", "__sub__"], [23, 3, 1, "", "__weakref__"], [23, 2, 1, "", "_add"], [23, 2, 1, "", "_diff"], [23, 2, 1, "", "_div"], [23, 2, 1, "", "_eval"], [23, 2, 1, "", "_gen_grid_default"], [23, 2, 1, "", "_mul"], [23, 2, 1, "", "_new_instance_if_necessary"], [23, 2, 1, "", "_partial_diff"], [23, 2, 1, "", "_pow"], [23, 2, 1, "", "_sub"], [23, 2, 1, "", "add_points"], [23, 4, 1, "", "coeffs"], [23, 2, 1, "", "diff"], [23, 2, 1, "", "expand_dim"], [23, 2, 1, "", "from_degree"], [23, 2, 1, "", "from_poly"], [23, 2, 1, "", "generate_internal_domain"], [23, 2, 1, "", "generate_user_domain"], [23, 2, 1, "", "make_complete"], [23, 4, 1, "", "nr_active_monomials"], [23, 2, 1, "", "partial_diff"], [23, 4, 1, "", "spatial_dimension"], [23, 4, 1, "", "unisolvent_nodes"]], "minterpy.schemes.barycentric.operators": [[24, 1, 1, "", "BarycentricDictOperator"], [25, 1, 1, "", "BarycentricFactorisedOperator"], [26, 1, 1, "", "BarycentricOperator"], [27, 1, 1, "", "BarycentricPiecewiseOperator"]], "minterpy.schemes.barycentric.operators.BarycentricDictOperator": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "__matmul__"], [24, 3, 1, "", "__weakref__"], [24, 2, 1, "", "_get_array_repr"], [24, 4, 1, "", "array_repr_full"], [24, 4, 1, "", "array_repr_sparse"], [24, 4, 1, "", "array_representation"], [24, 2, 1, "", "merging_fct"], [24, 2, 1, "", "transformation_fct"]], "minterpy.schemes.barycentric.operators.BarycentricFactorisedOperator": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "__matmul__"], [25, 3, 1, "", "__weakref__"], [25, 2, 1, "", "_get_array_repr"], [25, 4, 1, "", "array_repr_full"], [25, 4, 1, "", "array_repr_sparse"], [25, 4, 1, "", "array_representation"], [25, 2, 1, "", "merging_fct"], [25, 2, 1, "", "transformation_fct"]], "minterpy.schemes.barycentric.operators.BarycentricOperator": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "__matmul__"], [26, 3, 1, "", "__weakref__"], [26, 2, 1, "", "_get_array_repr"], [26, 4, 1, "", "array_repr_full"], [26, 4, 1, "", "array_repr_sparse"], [26, 4, 1, "", "array_representation"], [26, 2, 1, "", "merging_fct"], [26, 2, 1, "", "transformation_fct"]], "minterpy.schemes.barycentric.operators.BarycentricPiecewiseOperator": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "__matmul__"], [27, 3, 1, "", "__weakref__"], [27, 2, 1, "", "_get_array_repr"], [27, 4, 1, "", "array_repr_full"], [27, 4, 1, "", "array_repr_sparse"], [27, 4, 1, "", "array_representation"], [27, 2, 1, "", "merging_fct"], [27, 2, 1, "", "transformation_fct"]], "minterpy.schemes.matrix_operator": [[29, 1, 1, "", "MatrixOperator"]], "minterpy.schemes.matrix_operator.MatrixOperator": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "__matmul__"], [29, 3, 1, "", "__weakref__"], [29, 2, 1, "", "_get_array_repr"], [29, 4, 1, "", "array_repr_full"], [29, 4, 1, "", "array_repr_sparse"]], "minterpy.transformations": [[32, 0, 0, "-", "canonical"], [33, 0, 0, "-", "identity"], [31, 0, 0, "-", "interface"], [34, 0, 0, "-", "lagrange"], [35, 0, 0, "-", "newton"], [13, 0, 0, "-", "utils"]], "minterpy.transformations.canonical": [[32, 1, 1, "", "CanonicalToLagrange"], [32, 1, 1, "", "CanonicalToNewton"]], "minterpy.transformations.canonical.CanonicalToLagrange": [[32, 2, 1, "", "__call__"], [32, 2, 1, "", "__init__"], [32, 2, 1, "", "__init_subclass__"], [32, 3, 1, "", "__weakref__"], [32, 2, 1, "", "_apply_transformation"], [32, 2, 1, "", "_get_transformation_operator"], [32, 4, 1, "", "_target_indices"], [32, 4, 1, "", "grid"], [32, 4, 1, "", "multi_index"], [32, 3, 1, "", "origin_type"], [32, 3, 1, "", "target_type"], [32, 4, 1, "", "transformation_operator"]], "minterpy.transformations.canonical.CanonicalToNewton": [[32, 2, 1, "", "__call__"], [32, 2, 1, "", "__init__"], [32, 2, 1, "", "__init_subclass__"], [32, 3, 1, "", "__weakref__"], [32, 2, 1, "", "_apply_transformation"], [32, 2, 1, "", "_get_transformation_operator"], [32, 4, 1, "", "_target_indices"], [32, 4, 1, "", "grid"], [32, 4, 1, "", "multi_index"], [32, 3, 1, "", "origin_type"], [32, 3, 1, "", "target_type"], [32, 4, 1, "", "transformation_operator"]], "minterpy.transformations.identity": [[33, 1, 1, "", "Identity"]], "minterpy.transformations.identity.Identity": [[33, 2, 1, "", "__call__"], [33, 2, 1, "", "__init__"], [33, 2, 1, "", "__init_subclass__"], [33, 3, 1, "", "__weakref__"], [33, 2, 1, "", "_apply_transformation"], [33, 2, 1, "", "_get_transformation_operator"], [33, 4, 1, "", "_target_indices"], [33, 4, 1, "", "grid"], [33, 4, 1, "", "multi_index"], [33, 3, 1, "", "origin_type"], [33, 3, 1, "", "target_type"], [33, 4, 1, "", "transformation_operator"]], "minterpy.transformations.interface": [[31, 5, 1, "", "get_transformation"], [31, 5, 1, "", "get_transformation_class"]], "minterpy.transformations.lagrange": [[34, 1, 1, "", "LagrangeToCanonical"], [34, 1, 1, "", "LagrangeToNewton"]], "minterpy.transformations.lagrange.LagrangeToCanonical": [[34, 2, 1, "", "__call__"], [34, 2, 1, "", "__init__"], [34, 2, 1, "", "__init_subclass__"], [34, 3, 1, "", "__weakref__"], [34, 2, 1, "", "_apply_transformation"], [34, 2, 1, "", "_get_transformation_operator"], [34, 4, 1, "", "_target_indices"], [34, 4, 1, "", "grid"], [34, 4, 1, "", "multi_index"], [34, 3, 1, "", "origin_type"], [34, 3, 1, "", "target_type"], [34, 4, 1, "", "transformation_operator"]], "minterpy.transformations.lagrange.LagrangeToNewton": [[34, 2, 1, "", "__call__"], [34, 2, 1, "", "__init__"], [34, 2, 1, "", "__init_subclass__"], [34, 3, 1, "", "__weakref__"], [34, 2, 1, "", "_apply_transformation"], [34, 2, 1, "", "_get_transformation_operator"], [34, 4, 1, "", "_target_indices"], [34, 4, 1, "", "grid"], [34, 4, 1, "", "multi_index"], [34, 3, 1, "", "origin_type"], [34, 3, 1, "", "target_type"], [34, 4, 1, "", "transformation_operator"]], "minterpy.transformations.newton": [[35, 1, 1, "", "NewtonToCanonical"], [35, 1, 1, "", "NewtonToLagrange"]], "minterpy.transformations.newton.NewtonToCanonical": [[35, 2, 1, "", "__call__"], [35, 2, 1, "", "__init__"], [35, 2, 1, "", "__init_subclass__"], [35, 3, 1, "", "__weakref__"], [35, 2, 1, "", "_apply_transformation"], [35, 2, 1, "", "_get_transformation_operator"], [35, 4, 1, "", "_target_indices"], [35, 4, 1, "", "grid"], [35, 4, 1, "", "multi_index"], [35, 3, 1, "", "origin_type"], [35, 3, 1, "", "target_type"], [35, 4, 1, "", "transformation_operator"]], "minterpy.transformations.newton.NewtonToLagrange": [[35, 2, 1, "", "__call__"], [35, 2, 1, "", "__init__"], [35, 2, 1, "", "__init_subclass__"], [35, 3, 1, "", "__weakref__"], [35, 2, 1, "", "_apply_transformation"], [35, 2, 1, "", "_get_transformation_operator"], [35, 4, 1, "", "_target_indices"], [35, 4, 1, "", "grid"], [35, 4, 1, "", "multi_index"], [35, 3, 1, "", "origin_type"], [35, 3, 1, "", "target_type"], [35, 4, 1, "", "transformation_operator"]], "minterpy.utils": [[14, 5, 1, "", "cartesian_product"], [14, 5, 1, "", "chebychev_2nd_order"], [14, 5, 1, "", "eval_newton_monomials"], [14, 5, 1, "", "eval_newton_polynomials"], [14, 5, 1, "", "eval_newton_polynomials_batch"], [14, 5, 1, "", "gen_chebychev_2nd_order_leja_ordered"], [14, 5, 1, "", "lp_norm"], [14, 5, 1, "", "lp_sum"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "terms": {"": [3, 14, 20, 22, 23, 36, 37, 39, 42, 43, 50, 55, 56, 57, 59], "0": [7, 9, 14, 22, 25, 42, 46, 49, 50, 51, 52, 53, 55, 56, 59], "008": [42, 50], "02392": 48, "05": 56, "08": 50, "09": [42, 50], "0_12": 52, "0x7f88e2376800": 56, "0x7f88e23bf520": 56, "0x7f88e56307c0": 56, "0x7f88e77ac250": 56, "1": [0, 3, 9, 10, 12, 14, 15, 18, 20, 22, 23, 37, 39, 42, 46, 48, 49, 50, 51, 52, 53, 55, 56, 59], "10": [0, 42, 48, 49, 50, 51, 52, 53, 55, 56], "100": 56, "1007": [49, 50, 51, 52, 53], "1016": [42, 50], "107": 50, "108": 50, "10824": [48, 49, 50, 51, 59], "109": 56, "11": [50, 55, 56], "116": 50, "118": 50, "12": [0, 49, 50, 51, 52, 55, 56], "13": [0, 49, 50, 55, 56], "14": [50, 56], "145": 50, "15": [50, 56], "16": [0, 50, 55], "163": 46, "17": [9, 50, 59], "177": [42, 50], "18": [50, 55], "181": 50, "1885": 50, "19": 50, "190": 50, "1901": 50, "1912": 50, "1914": 50, "192": 46, "1957": 49, "1959": 50, "1960": 50, "1969": 50, "197": 50, "1970": 50, "1972": [42, 50], "1976": [48, 49], "1977": [42, 50], "1978": [42, 50], "1988": 50, "1990": 50, "1994": 46, "1999": 46, "1d": [3, 14, 15, 20, 22, 23, 24, 25, 46, 47, 50, 52, 59], "1e": 55, "2": [3, 12, 14, 15, 20, 22, 23, 37, 39, 42, 46, 48, 49, 50, 51, 52, 53, 55, 56], "20": [0, 50], "200": [48, 49], "2002": [49, 50, 51, 52], "2004": [46, 50], "2007": 50, "2010": [42, 48, 49, 50, 51, 59], "2012": [49, 50, 51, 52, 53], "2013": [42, 50], "2014": [42, 50], "2017": [39, 50], "2018": [50, 52], "2019": [46, 49], "202": 46, "2020": [48, 49, 50, 51, 59], "2024": [9, 59], "21": 50, "21105": 48, "212": [48, 49], "22": 50, "224": 50, "23": 50, "233": 52, "2392": 48, "24": 50, "243": 50, "245": 50, "249": 0, "25": 50, "251": 50, "27": [42, 50], "28": 46, "280": 50, "282": 52, "287": 39, "2d": [3, 7, 12, 14, 20, 22, 23, 49, 51, 56], "2m": 50, "2y": 52, "2z": 56, "3": [0, 14, 39, 42, 46, 48, 49, 50, 51, 52, 53, 55, 56], "300": 55, "3119": 3, "315": 50, "319": [50, 52], "32": 55, "331": 50, "34": [42, 50], "342": 50, "343": 50, "35": [0, 46], "354": 50, "356": 50, "363": 50, "37": 50, "39": 56, "3d": 49, "4": [0, 14, 42, 46, 48, 49, 50, 51, 52, 55, 56], "400898303793312e": 56, "4064": 49, "42": [42, 50], "46": [46, 50], "47": 56, "4837": 50, "4844": 50, "5": [14, 42, 48, 49, 50, 52, 55, 56], "50": [42, 50], "501": 46, "517": [46, 50], "52": 46, "522": 50, "54": 48, "5697": 14, "57": [42, 50], "6": [0, 42, 49, 50, 55, 56], "62": [42, 50], "633": 50, "639": 50, "64": 55, "7": [0, 50, 55, 56], "7171": 50, "72456": 52, "73": 50, "735": 50, "743": 50, "8": [49, 50, 52, 55, 56], "80": [0, 40], "80013": 50, "80th": 52, "8176": [49, 50, 51, 52, 53], "822": 50, "824": 50, "8259": [49, 50, 51, 52, 53], "9": [0, 50, 55, 56], "90": 50, "9734664973643402": 55, "978": [49, 50, 51, 52, 53], "A": [5, 7, 15, 22, 31, 39, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57], "As": [21, 42, 43, 51], "Being": 37, "By": [25, 42, 43, 49], "For": [3, 5, 15, 16, 20, 22, 23, 30, 37, 42, 43, 44, 49, 50, 52, 56], "If": [3, 4, 5, 7, 14, 15, 17, 18, 19, 20, 22, 23, 32, 33, 34, 35, 39, 42, 43, 50, 53, 54], "In": [22, 39, 46, 48, 49, 50, 51, 52, 53, 56], "It": [0, 1, 3, 6, 7, 12, 14, 20, 22, 23, 39, 42, 43], "On": [39, 42, 44, 50], "One": [42, 54, 59], "Or": [14, 39, 43], "That": [39, 55], "The": [0, 1, 2, 3, 4, 5, 7, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 37, 39, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59], "Then": [43, 48, 51, 53], "There": [39, 42, 44, 50, 51], "These": [3, 7, 20, 22, 23, 43], "To": [42, 43, 50], "With": [3, 14, 20, 22, 23], "_": [42, 50, 52, 53, 55, 56], "_1": 52, "_2": 52, "__add__": [3, 7, 9, 20, 22, 23], "__call__": [3, 4, 9, 17, 19, 20, 22, 23, 32, 33, 34, 35], "__copy__": [0, 3, 5, 7, 9, 20, 22, 23], "__deepcopy__": [3, 5, 7, 9, 20, 22, 23], "__delattr__": [9, 17, 19], "__init__": [3, 4, 5, 7, 8, 9, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35], "__init_subclass__": [4, 9, 32, 33, 34, 35], "__matmul__": [2, 9, 24, 25, 26, 27, 29], "__mul__": [3, 9, 20, 22, 23], "__neg__": [3, 9, 20, 22, 23], "__pos__": [3, 9, 20, 22, 23], "__radd__": [3, 9, 20, 22, 23], "__repr__": [7, 9, 17, 19], "__rmul__": [3, 9, 20, 22, 23], "__rsub__": [3, 9, 20, 22, 23], "__setattr__": [9, 17, 19], "__str__": [7, 9], "__sub__": [3, 9, 20, 22, 23], "__weakref__": [3, 4, 5, 7, 8, 9, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35], "_a": 53, "_add": [3, 9, 20, 22, 23], "_apply_transform": [4, 9, 32, 33, 34, 35], "_code": 42, "_deepai": 42, "_diff": [9, 20, 22, 23], "_div": [9, 20, 22, 23], "_eval": [3, 9, 20, 22, 23], "_gen_grid_default": [3, 9, 20, 22, 23], "_get_array_repr": [2, 9, 24, 25, 26, 27, 29], "_get_transformation_oper": [4, 9, 32, 33, 34, 35], "_mul": [3, 9, 20, 22, 23], "_n": [49, 50], "_new_instance_if_necessari": [0, 3, 5, 7, 9, 20, 22, 23], "_p": [42, 50, 52], "_partial_diff": [9, 20, 22, 23], "_pow": [9, 20, 22, 23], "_radd": [3, 20, 22, 23], "_rmul": [3, 20, 22, 23], "_rsub": [3, 20, 22, 23], "_sub": [3, 9, 20, 22, 23], "_target_indic": [4, 9, 32, 33, 34, 35], "_wikipedia": 42, "a_": [42, 46, 49, 50, 51, 52, 53], "a_1": 52, "a_i": 52, "a_m": 52, "ab": [55, 56], "abc": [0, 1, 6, 9, 29, 32, 33, 34, 35], "abl": 14, "abort": 12, "about": [0, 5, 17, 37, 43, 45, 54, 59], "abov": [39, 42, 43, 51], "absolut": [50, 55], "abstract": [2, 3, 4, 6, 9, 21, 26, 28, 30, 32, 33, 34, 35, 39, 59], "abstractbaseclass": 1, "abus": 37, "acad": 50, "academ": [48, 49], "acceler": [9, 11, 14, 59], "accept": 37, "access": [42, 43, 59], "accord": [0, 14, 39], "accordingli": [42, 46, 48, 51], "accur": [12, 48, 50, 53, 55], "achiev": [22, 42, 46, 50, 54], "acosta": 36, "across": [39, 42], "act": [25, 37], "acta": 50, "action": [37, 42], "activ": [2, 3, 20, 22, 23, 24, 25, 26, 27, 29, 54], "actual": [3, 20, 22, 23, 39, 42, 43], "ad": [3, 5, 20, 22, 23, 42, 43, 59], "adapt": [37, 39], "add": [3, 4, 5, 20, 22, 23, 32, 33, 34, 35, 42], "add_point": [0, 3, 5, 9, 20, 22, 23], "addit": [3, 5, 20, 22, 23, 36, 39, 42, 49, 51], "addition": [21, 39], "address": [0, 37, 43, 50], "admit": 50, "admonit": 40, "advanc": [37, 39, 48], "advantag": 14, "affect": 37, "after": [10, 39, 42, 43, 54], "ag": 37, "against": [14, 15], "agnost": 12, "agrang": [46, 50], "ahead": 43, "aim": [48, 59], "aitken": [48, 49], "akademi": 50, "al": [42, 50, 59], "albert": 52, "algebra": [46, 59], "algorithm": [12, 46, 48, 49, 50, 51, 59], "alia": [32, 33, 34, 35], "align": [37, 56], "all": [0, 1, 2, 3, 4, 9, 10, 11, 12, 14, 15, 16, 19, 22, 25, 28, 37, 39, 42, 43, 49, 50, 51, 52, 53, 54, 56], "all_indices_are_contain": [9, 11, 12], "allow": [3, 20, 22, 23, 28, 42, 46, 51, 53, 56, 59], "almost": [39, 42], "along": [3, 14, 20, 22, 23, 42, 49], "alpha": [14, 15, 42, 48, 49, 50, 51, 52, 53], "alpha_1": [49, 50, 51, 52], "alpha_2": 51, "alpha_3": 51, "alpha_i": [42, 49, 51, 52], "alpha_j": 51, "alpha_m": [49, 50, 51, 52], "alphabet": 42, "alreadi": [10, 15, 39, 42, 43, 46, 53], "also": [3, 4, 16, 20, 22, 23, 30, 32, 33, 34, 35, 39, 42, 43, 49], "altern": [42, 51], "although": [39, 50], "alwai": [7, 22, 42, 54], "american": 50, "amount": [3, 14, 20, 22, 23, 49], "an": [0, 2, 3, 4, 5, 7, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 39, 42, 44, 49, 50, 51, 52, 54, 59], "analog": 51, "analysi": [49, 50, 51, 52, 53], "analyt": 50, "analytisch": 50, "anchor": 42, "ancient": 50, "ani": [3, 4, 10, 12, 14, 15, 20, 22, 23, 32, 33, 34, 35, 37, 39, 42, 43, 46, 49, 50, 51, 52, 56], "annal": 49, "anoth": [0, 2, 3, 4, 7, 10, 12, 20, 22, 23, 42, 53], "answer": 37, "anyon": 37, "anyth": [17, 19], "ap": 49, "apart": [48, 49], "api": [43, 44, 59], "apolog": 37, "appear": [0, 5, 37, 42], "appl": [48, 49], "appli": [2, 4, 5, 24, 25, 26, 27, 29, 32, 33, 34, 35, 37, 43, 48, 50, 51, 53], "applic": [16, 42, 43, 46, 49], "apply_func": [0, 5, 9], "approach": [12, 42, 46, 48, 50], "approch": 48, "appropri": [37, 42], "approx": 50, "approxim": [14, 42, 48, 49, 50, 52, 53, 55], "ar": [0, 2, 3, 4, 5, 6, 7, 10, 12, 14, 17, 20, 21, 22, 23, 25, 26, 28, 30, 32, 34, 35, 36, 37, 39, 42, 43, 44, 46, 49, 50, 51, 52, 53, 56, 57], "arbitrari": [16, 49], "arbitrarili": 51, "archaic": 42, "arg": [0, 3, 15, 20, 22, 23, 26], "arguemnt": [14, 15], "argument": [0, 3, 4, 14, 15, 20, 22, 23, 32, 33, 34, 35, 46, 48, 49], "aris": [42, 53], "arithmet": 50, "around": [43, 54], "arr": [14, 17, 18, 19], "arrai": [0, 2, 3, 5, 7, 10, 12, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 29, 49, 52, 56], "array_lik": [3, 14, 15, 20, 22, 23], "array_repr_ful": [2, 9, 24, 25, 26, 27, 29, 56], "array_repr_spars": [2, 9, 24, 25, 26, 27, 29], "array_represent": [9, 24, 25, 26, 27], "articl": [39, 42], "artifact": 39, "arxiv": [48, 49, 50, 51, 59], "ask": [48, 50, 53], "aspect": 42, "assert": 52, "assign": [3, 20, 22, 23, 25, 42, 43, 51], "assigne": 43, "assum": [7, 12, 14, 20, 39, 42, 49, 52, 54, 56], "assumpt": 51, "astronomi": 50, "atleast_1d": [0, 15], "atom": [24, 25], "attach": [17, 19], "attack": 37, "attent": [3, 10, 37, 42], "attr": [17, 19, 42], "attract": 42, "attribut": [0, 2, 3, 4, 5, 7, 8, 17, 19, 22, 23, 26, 42, 45, 59], "author": [39, 42], "autobuild": 43, "automat": [39, 43], "autosectionlabel": 42, "aux": 49, "avail": [4, 32, 33, 34, 35, 37, 41, 48], "available_transform": 31, "avoid": [0, 14, 39, 42, 50, 53], "awar": 42, "ax": [0, 14, 23], "axi": [3, 7, 14, 20, 22, 23, 51, 55], "b": [42, 50, 57], "b_1": 52, "b_i": 52, "b_m": 52, "back": 50, "background": 39, "backslash": 42, "backtick": 42, "ban": 37, "barycentr": [9, 28, 34, 35, 47, 50, 53, 56, 59], "barycentricdictoper": [9, 24, 28], "barycentricfactorisedoper": [9, 25, 28], "barycentricoper": [9, 24, 25, 26, 27, 28], "barycentricpiecewiseoper": [9, 27, 28], "base": [0, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 17, 19, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 40, 42, 44, 46, 47, 50, 51, 59], "basi": [2, 3, 4, 9, 12, 13, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 48, 50, 53, 56, 59], "basic": [3, 25, 39], "bat": 43, "batch": [3, 14, 20, 22, 23], "batch_siz": 14, "becaus": [0, 39, 43], "becom": [0, 14, 22, 39, 42, 50, 52], "been": [3, 14, 20, 22, 23, 50, 55], "befor": [39, 42, 44, 54], "begin": [39, 51], "beginn": 39, "behav": 3, "behavior": [37, 55], "behind": 39, "being": [3, 22, 42, 51, 52], "belong": [39, 43, 51], "below": [12, 39, 42, 43, 49, 51, 52, 54, 55], "benchmark": 56, "benefit": 53, "ber": 50, "berlin": 50, "bernstein": 50, "berrut": 46, "besid": 42, "best": [37, 42, 44, 54, 56], "beta": [49, 50, 51, 52, 53], "beta_i": 51, "beta_j": 51, "better": [39, 48], "between": [3, 8, 13, 20, 22, 23, 30, 33, 39, 47, 51, 59], "beyond": 42, "bf02165411": 50, "bib": 42, "bibl": [48, 49], "bibliograph": 40, "bibtex": 42, "big": [14, 43, 50, 51], "bigger": 10, "birkh\u00e4us": [49, 50, 51, 52, 53], "birthdai": 52, "bit": 39, "bivari": 50, "black": 59, "blank": 49, "blueprint": [21, 30], "bodi": 37, "boilerpl": [0, 5], "boldsymbol": 42, "book": 42, "bool": [7, 10, 12, 14, 15], "boor": [42, 50], "boston": [49, 50, 51, 52, 53], "both": [10, 14, 15, 27, 39, 43, 46, 48], "bottleneck": 59, "bottom": 42, "bound": [50, 52], "box": [42, 59], "branch": 43, "brandon": 42, "brang": 50, "break": 42, "brief": 42, "briefli": [42, 43], "broad": 59, "broadcast": 14, "broken": 43, "browser": 43, "build": [3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 42, 44, 54, 56], "built": [30, 42, 43], "bulid": 7, "bulirsch": [49, 51, 52], "bulk": 39, "busi": [49, 51, 52], "button": 43, "c": [48, 49, 50, 56, 57], "c_": [48, 49, 50, 52, 53, 56], "c_i": 51, "cach": [3, 16, 19, 20, 22, 23], "calcul": [42, 50], "calgari": [48, 49], "call": [3, 4, 5, 7, 14, 16, 20, 22, 23, 32, 33, 34, 35, 39, 50, 52, 54, 56], "callabl": [3, 5, 16, 17, 18, 19, 20, 22, 23], "can": [0, 3, 4, 10, 12, 14, 15, 16, 17, 20, 22, 23, 31, 32, 33, 34, 35, 39, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56], "can_eval_mult": [9, 11, 12], "cannot": 54, "canon": [9, 12, 13, 21, 30, 34, 35, 47, 49, 50, 53, 59], "canonical_poli": 20, "canonical_polynomi": 20, "canonicalpolynomi": [9, 20, 21, 32, 34, 35], "canonicaltolagrang": [9, 30, 32], "canonicaltonewton": [9, 30, 32], "cap": 51, "capit": [42, 57], "captur": [39, 43], "carl": [42, 50], "carri": 43, "cartesian": [14, 15, 20, 22, 23], "cartesian_product": [9, 11, 14], "case": [3, 20, 21, 22, 23, 24, 25, 28, 30, 34, 35, 37, 42, 46, 48, 51, 53], "categori": [39, 42, 43], "caus": 50, "caveat": 39, "cdot": [49, 50, 51, 52, 53], "celebr": 52, "center": [42, 50], "central": 12, "certain": [42, 49], "cfg": 54, "chain": 12, "challeng": 59, "cham": 52, "chang": [3, 5, 20, 22, 23, 33, 43], "charact": 40, "characterist": 37, "charm": [42, 50], "cheb": 49, "chebfun": 50, "chebpol": 50, "chebychev": 14, "chebychev_2nd_ord": [0, 9, 11, 14], "chebyshev": [42, 49, 50, 57], "check": [0, 7, 12, 14, 15, 23, 42, 43, 54], "check_domain_fit": [0, 9, 11, 15], "check_dtyp": [0, 9, 11, 15], "check_for_inclus": 10, "check_shap": [9, 11, 15], "check_typ": [0, 9, 11, 15], "check_type_n_valu": [0, 9, 11, 15], "check_valu": [0, 9, 11, 15], "choic": [39, 42, 49, 51, 52, 56], "choos": [49, 50, 51], "choosen": 50, "chosen": [49, 51, 52], "chronologi": 50, "chung": 50, "circular": 42, "cirillo": 50, "citat": 40, "cite": 42, "cl": 53, "clarifi": 37, "clariti": 42, "class": [2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 39, 42, 46, 59], "classic": [42, 46, 48, 49, 50, 51, 52, 53], "classmethod": [3, 4, 5, 17, 20, 22, 23, 32, 33, 34, 35], "clean": 43, "cleaner": 42, "clearli": 39, "click": 43, "climb": 39, "clone": [43, 54], "close": [49, 50, 51, 52], "cn": 53, "co": 49, "code": [0, 5, 39, 40, 43, 44, 45, 59], "codebas": [0, 36, 39, 43], "coeff": [3, 9, 12, 14, 20, 22, 23, 24], "coeff_slice_transform": 56, "coeffici": [3, 10, 12, 14, 15, 20, 22, 23, 24, 25, 27, 49, 50, 51, 52, 53, 56], "coeffit": 14, "coeffs_in": [24, 25, 26, 27], "coeffs_lagrang": 56, "coeffs_newton": 56, "coeffs_out": [24, 27], "coeffs_out_placehold": [25, 26, 27], "cohen": 52, "coincid": [50, 51, 53], "collect": 56, "color": 37, "colorbar": 56, "column": [53, 56], "combin": [14, 24, 25, 39, 50, 52, 56], "comcret": 23, "come": [39, 42], "comfort": 39, "command": [43, 54], "comment": [37, 43], "commit": [37, 39], "common": [30, 37, 39, 42], "commun": [37, 59], "compact": 50, "compactifi": [49, 51], "compar": [12, 48, 55], "comparison": [0, 7, 27], "compil": [12, 14], "complaint": 37, "complet": [3, 5, 7, 10, 19, 20, 22, 23, 33, 34, 35, 42], "complex": [12, 14, 46, 48, 49, 51, 59], "compon": [3, 20, 22, 23, 39], "comprehens": 39, "comput": [2, 3, 12, 13, 14, 20, 22, 23, 34, 39, 42, 48, 49, 50, 52, 53, 59], "compute_vandermonde_n2c": [9, 11, 12], "conceiv": 17, "concept": [39, 49], "conceptu": 22, "concret": [2, 3, 4, 14, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35], "conda": 54, "condens": 53, "condit": 50, "conduct": [0, 43, 45, 59], "conf": [42, 48, 49], "conform": 49, "confus": 42, "connect": 5, "consecut": 42, "consequ": [48, 53], "consid": [14, 37, 42, 43, 50, 51, 52, 53], "consist": [5, 39, 42, 43, 46], "consol": 42, "constant": [12, 46, 51], "constraint": [3, 22, 52], "construct": [3, 4, 5, 7, 8, 15, 19, 20, 22, 23, 29, 32, 33, 34, 35, 37, 38, 41, 49, 50, 51, 54, 58], "constructor": [5, 17], "constuct": 51, "consult": 43, "contact": [0, 37], "contain": [1, 3, 4, 7, 10, 12, 15, 19, 20, 22, 23, 25, 32, 33, 34, 35, 39, 42, 43, 44, 57], "contains_these_expon": [7, 9], "contemporari": 52, "content": [37, 39, 40, 42, 43, 45], "context": 39, "contigu": 56, "continu": [39, 50, 51, 59], "contrast": [49, 50], "contrib": [0, 42, 43], "contribut": [0, 37, 39, 42, 45, 59], "contributor": [0, 37, 42, 43, 59], "control": 39, "conveni": [30, 56], "convent": 42, "converg": [50, 55], "convers": [14, 15], "convert": [14, 15, 39], "convert_eval_output": [0, 9, 11, 14, 15], "coordin": [12, 23, 51, 56], "copi": [0, 3, 5, 7, 15, 20, 22, 23, 25, 39, 42], "coppersmith": 50, "copy_private_attribut": [0, 7, 9], "core": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 42, 59], "correct": [15, 31, 37, 43], "correctli": 14, "correspond": [0, 3, 8, 14, 15, 22, 27, 39, 43, 46, 51, 53], "cost": 50, "could": [3, 20, 22, 23, 37], "count": [39, 50], "counter": 49, "coven": 37, "cover": 42, "cran": 50, "creat": [3, 5, 7, 20, 22, 23, 39, 42, 44, 54], "creation": 39, "creativ": [42, 50], "critic": 12, "cross": 40, "crucial": [48, 49, 52], "cup": 51, "curat": 39, "current": [3, 5, 7, 19, 20, 22, 23, 36, 39, 41, 42, 43, 48, 54], "curs": [42, 47, 48, 49, 51, 59], "curse_of_dimension": 42, "curv": 39, "custom": [0, 15, 17, 42], "custom_link_titl": 42, "d": [3, 14, 18, 20, 22, 23, 39, 43, 50], "d_": 53, "damar": 36, "daniel": [36, 39], "darstellbarkeit": 50, "data": [3, 4, 14, 15, 17, 19, 21, 31, 50, 51, 54, 59], "datatyp": [0, 5, 15, 22, 23], "date": 9, "dd": [5, 23, 24, 34, 47, 49, 50, 53, 59], "ddot": 51, "de": [42, 50, 54], "deactiv": 54, "deal": 39, "deboor1972": 42, "deboor1977": 42, "deboor1978": 42, "deboor2010": 42, "dec": [9, 59], "decid": 39, "decod": 51, "decompos": [26, 28], "decomposit": [24, 25, 26, 51], "decompost": 51, "deem": 37, "deepai": 42, "deepcopi": [3, 5, 7, 20, 22, 23], "deeper": 49, "def": 56, "default": [3, 10, 14, 15, 17, 18, 20, 22, 23, 39, 42, 43, 49, 50], "default_domain": [15, 20, 22, 23], "default_lp_deg": 10, "defin": [2, 3, 4, 5, 7, 8, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 39, 42, 43, 50, 51, 52, 54, 55], "definit": [0, 3, 5, 20, 22, 23, 42], "degr": 50, "degre": [0, 3, 5, 7, 10, 12, 14, 17, 18, 19, 20, 22, 23, 46, 47, 49, 50, 51, 54, 56, 57, 59], "delta": [49, 52], "delta_": [49, 52], "demand": 50, "demonstr": [37, 56], "denot": [3, 20, 22, 23, 49, 52, 53, 57], "depend": [24, 42, 43, 46, 48, 50, 51], "deploi": 39, "depth": 39, "der": 50, "deriv": [2, 3, 4, 10, 20, 22, 23, 26, 30, 46, 48, 49, 50, 51], "derogatori": 37, "describ": [7, 10, 23, 39, 43, 44], "descript": [7, 39, 42, 43], "design": [16, 43, 44], "desir": 31, "detail": [39, 42, 44, 57], "detect": 43, "determin": [3, 14, 17, 18, 19, 20, 22, 23, 46, 48, 49, 50, 51, 52], "detriment": 42, "dev": [39, 43, 54], "dev1": [9, 59], "develop": [0, 36, 39, 42, 43, 44, 45, 54, 59], "dick": 52, "dict": [8, 9, 26, 28, 59], "dictionari": [24, 39], "die": 50, "diff": [3, 9, 20, 22, 23], "differ": [3, 7, 12, 19, 20, 22, 23, 24, 37, 39, 42, 47, 49, 50, 59], "difference_polynomi": 20, "differenti": [20, 23, 39, 59], "difficulti": 39, "digit": [42, 59], "dim": [3, 20, 22, 23], "dimens": [3, 5, 7, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 49, 50, 51, 52, 55], "dimension": [3, 5, 14, 15, 17, 20, 22, 23, 42, 46, 47, 48, 49, 51, 54, 59], "dimensiton": 5, "dimenst": 15, "diment": [3, 20, 22, 23], "diments": [7, 15, 20, 22, 23], "dingwal": 42, "direct": [42, 48, 49, 51], "directli": [39, 44, 54], "directori": [42, 43, 54], "disabl": 37, "disclos": 39, "discrib": 22, "discuss": 49, "distanc": 51, "distigush": [3, 20, 22, 23], "distinct": [39, 50, 51], "distinguish": 43, "distribut": [14, 51], "disturb": 43, "divers": 37, "divid": [19, 47, 49, 50, 59], "divio": 39, "do": [6, 14, 15, 17, 30, 39, 42, 43, 54, 56], "doc": [0, 36, 40, 44, 54], "docstr": [0, 20, 39, 44], "document": [0, 9, 14, 37, 39, 43, 45], "doe": [14, 15, 42, 43, 49, 50], "doesn": 42, "doi": [42, 48, 49, 50, 51, 52, 53], "domain": [3, 5, 7, 10, 15, 16, 17, 18, 19, 20, 22, 23, 42, 50, 55, 56], "don": [39, 42, 43, 50], "done": [3, 20, 22, 23, 42], "donn": 50, "dot": [42, 49, 50, 51, 52], "doubl": 42, "doubt": 42, "downright": 43, "downward": [49, 50, 51, 52], "dox": 37, "dresden": 46, "driscol": 50, "dtype": [14, 15], "due": 53, "duplic": [10, 42], "dure": 12, "dyn": [42, 50], "dyn2014": 42, "e": [0, 3, 5, 7, 12, 14, 15, 20, 22, 23, 24, 39, 48, 49, 50, 51, 52, 53, 54, 57], "each": [0, 3, 5, 7, 10, 12, 14, 15, 20, 22, 23, 25, 39, 42, 43, 44, 48, 49, 51, 56], "earli": 12, "earlier": 42, "easi": [16, 39], "easier": 39, "easili": 59, "econom": 37, "ecosystem": 42, "edg": [24, 25], "edit": [37, 49], "editeur": 50, "editor": [42, 52], "educ": 37, "effici": [10, 42, 46, 48, 50, 53], "eidelman": 46, "einer": 50, "either": [3, 14, 15, 20, 22, 23, 39, 42, 53], "element": [12, 14, 39], "elementari": 28, "elimin": 50, "els": 43, "email": [0, 37], "email_address": 37, "embed": [3, 20, 22, 23, 39], "emiliano": 50, "empathi": 37, "empir": 59, "empirisch": 50, "empti": [0, 5, 43, 55], "en": 42, "enabl": [28, 33, 48, 53], "encod": 24, "encourag": [37, 39, 43, 54], "encyclopedia": 39, "end": [39, 42, 51], "enforc": [45, 59], "enhanc": [46, 48], "enough": 55, "ensembl": 49, "ensur": [3, 42], "entri": [0, 7, 12, 14, 42, 51, 52], "enumer": [49, 55], "env": 54, "environ": [37, 54], "eq": [42, 49, 51, 52], "equal": [3, 7, 10, 12, 20, 22, 23, 25, 27, 43], "equat": [42, 46, 50, 56, 59], "equation_nam": 42, "equidist": 49, "equival": [0, 3, 14, 20, 22, 23, 50], "erik": 50, "ermit": [48, 49], "error": [43, 50, 54, 55], "especi": [42, 48], "essenti": [14, 39], "et": [42, 49, 50, 59], "etc": [0, 15, 39, 42, 49], "ethnic": 37, "euclidian": [49, 50, 51], "eval_all_newt_poli": 14, "eval_lp": 14, "eval_newton_monomi": [0, 9, 11, 14], "eval_newton_monomials_multipl": [9, 11, 12], "eval_newton_monomials_singl": [9, 11, 12], "eval_newton_polynomi": [0, 9, 11, 14, 56], "eval_newton_polynomials_batch": [9, 11, 14], "evalautiona": 48, "evalu": [0, 3, 5, 12, 14, 15, 17, 20, 22, 23, 46, 47, 49, 53, 55, 56, 59], "evaluate_multipl": 14, "evaul": 17, "even": 50, "event": 37, "eventu": [39, 43], "everi": [3, 7, 14, 15, 21, 24, 30, 42, 43], "everyon": 37, "everyth": 42, "ewton": [48, 49], "exactli": [6, 42], "exampl": [14, 37, 39, 40, 41, 43, 49, 51], "except": [39, 42], "execut": [26, 28, 39, 46, 49], "exist": [43, 49, 50], "exp": 56, "expand": [3, 20, 22, 23, 42], "expand_dim": [3, 9, 20, 22, 23], "expect": [10, 14, 15, 20, 22, 23, 37, 46], "expected_dtyp": 15, "expected_typ": 15, "expens": 14, "experi": 37, "experiment": [2, 24, 25, 26, 27, 29], "explain": [39, 42, 43], "explan": [0, 3, 14, 42], "explicit": [7, 37, 53], "explicitli": 42, "exploit": [10, 12, 46], "explor": 28, "expomemti": 50, "expon": [0, 3, 5, 7, 9, 10, 12, 14, 15, 20, 22, 23, 42, 56, 57], "exponent_vector": 10, "exponenti": 50, "exponents_complet": [7, 9], "expos": [0, 3, 5, 9, 20, 22, 23, 39], "exposit": 39, "express": 37, "extend": [3, 5, 20, 22, 23, 42, 46, 49, 50, 59], "extens": [39, 42, 43], "extra": 3, "extra_internal_domain": [3, 20, 22, 23], "extra_user_domain": [3, 20, 22, 23], "extras_requir": 54, "f": [46, 48, 49, 50, 51, 52, 54, 55, 56, 59], "f0": 56, "f1": 56, "f_0": 56, "f_1": [51, 56], "f_r": 50, "fact": [46, 49, 50, 51, 52, 53], "factor": 25, "factori": [3, 5, 14, 20, 22, 23], "factoris": [9, 24, 26, 28, 48, 59], "fair": 37, "fairli": 37, "fall": [42, 43], "fals": [10, 12, 14, 56], "familiar": [39, 43, 54], "famou": 50, "faq": 37, "fashion": 48, "fast": [12, 50, 53], "faster": [12, 14, 28, 46, 48, 51, 53, 56], "fct": [17, 18, 19], "featur": [2, 3, 22, 23, 24, 25, 26, 27, 29, 39, 42, 43], "feedback": 37, "feel": 43, "few": 22, "fewer": 22, "field": [43, 59], "figur": [39, 50], "file": [39, 43, 54], "fill": [7, 43], "fill_match_posit": [9, 11, 12], "filter": 43, "final": [43, 54], "find": [10, 12, 31, 34, 35, 42, 43, 44, 56], "find_match_between": [9, 10, 11], "fine_coord": 56, "finer": 54, "first": [3, 7, 20, 22, 23, 42, 43, 49, 51, 52, 57], "first_leaf_solut": 25, "fit": [15, 50, 54], "fit_err": 56, "five": 43, "fix": [14, 15, 22, 34, 35, 42, 43, 46, 49, 51, 53], "flag": 54, "flat": 59, "float": [10, 14], "float64": 56, "floater": [42, 50], "flow": 42, "focus": 37, "follow": [12, 39, 42, 43, 48, 51, 52, 54], "fonction": 50, "font": 42, "footbibliographi": 42, "footcit": 42, "footnot": 39, "footprint": [12, 14], "foral": [50, 51], "forget": [42, 43], "form": [3, 5, 7, 12, 14, 19, 20, 22, 23, 25, 43, 48, 51, 52, 53, 56], "format": [14, 15, 24, 25, 27, 39, 42, 55], "former": [45, 59], "formul": 3, "forward": 48, "found": [12, 42], "four": [39, 43], "frac": [50, 51, 56], "framework": 44, "franciszek": 49, "free": [37, 39, 59], "from": [2, 3, 4, 5, 9, 10, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 37, 39, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 56, 59], "from_degre": [3, 9, 17, 20, 22, 23, 42, 56], "from_gener": [5, 9], "from_poli": [3, 9, 20, 22, 23], "from_value_set": [5, 9], "front": 42, "frozen": [17, 19], "fs_linear_s": 56, "fulfil": 22, "full": [2, 39, 42, 43, 56], "func": [5, 42], "funcion": [0, 5], "function": [0, 2, 3, 4, 5, 7, 9, 11, 16, 17, 19, 20, 22, 23, 30, 32, 33, 34, 35, 39, 42, 46, 48, 49, 50, 51, 54, 56, 59], "fundament": [42, 43, 50, 59], "funktionen": 50, "further": [3, 28, 42, 51, 53, 54, 59], "furthermor": [3, 15, 16, 20, 22, 23, 39, 42], "futher": 3, "futur": 48, "fx": [42, 55], "fx_interp": 55, "fx_interpol": 42, "g": [0, 3, 5, 14, 15, 20, 22, 23, 24, 39, 48, 49, 50, 51, 52, 53, 57], "g7205332": [9, 59], "gain": 39, "gaur": 50, "gauss": 49, "gaussian": 50, "gautschi": [49, 50, 51, 52, 53], "gave": 50, "gen_chebychev_2nd_order_leja_ord": [0, 5, 9, 11, 14], "gen_missing_deriv": [9, 10, 11], "gen_partial_deriv": [9, 10, 11], "gender": 37, "gener": [3, 5, 10, 12, 14, 17, 19, 21, 39, 42, 43, 46, 47, 48, 50, 51, 52, 54, 59], "generalis": [0, 15, 48, 49, 50, 51, 52], "generate_internal_domain": [9, 20, 22, 23], "generate_user_domain": [9, 20, 22, 23], "generating_funct": 5, "generating_point": [0, 5, 12, 14, 56], "generating_valu": [0, 5, 9], "generation_point": [0, 5, 14], "geometr": 51, "geometri": 59, "geq": [42, 49, 50, 51, 53], "get": [3, 5, 20, 22, 23, 39, 42, 43, 59], "get_exponent_matrix": [9, 10, 11], "get_match_idx": [9, 11, 12], "get_regression_matrix": 56, "get_transform": [9, 30, 31, 56], "get_transformation_class": [9, 30, 31], "getter": [0, 5], "giovanni": 52, "git": 54, "gitlab": 54, "give": [0, 14, 37, 43, 51, 56], "given": [0, 3, 5, 7, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 42, 48, 49, 50, 51, 52, 53, 56], "glimps": 39, "global": [2, 12, 24, 25, 26, 27, 28, 29, 59], "glossari": [40, 59], "go": [31, 42, 43], "goal": [42, 46], "goe": [19, 50], "gohberg": 46, "gonciarz": [48, 49, 50, 51, 59], "good": [39, 56], "gp": [49, 52], "gracefulli": 37, "grammat": 43, "graph": 51, "great": 39, "greatest": 55, "grei": 51, "grid": [0, 3, 4, 6, 8, 9, 12, 14, 15, 19, 20, 22, 23, 32, 33, 34, 35, 42, 49, 50, 51, 52, 54, 59], "groundtruth": 54, "group": [39, 43, 46], "gt": 56, "gt_coord": 56, "gt_data": 56, "guarante": [49, 50], "guenther": 50, "guid": [42, 43, 44, 50, 54], "guidelin": [37, 42, 45, 59], "h": [48, 49, 50, 51, 52], "h_": 51, "h_0": 51, "h_1": 51, "h_2": 51, "h_3": 51, "h_i": 51, "ha": [7, 12, 15, 39, 43, 48, 50, 55], "had": 15, "hale": 50, "half": 42, "handl": [14, 33], "harass": 37, "hard": [39, 42], "harder": 42, "hardli": 55, "harm": 37, "hasn": 15, "hat": 55, "have": [3, 4, 5, 10, 12, 14, 20, 22, 23, 25, 32, 33, 34, 35, 37, 39, 41, 42, 43, 50, 54, 56], "have_lexicographical_ord": [9, 11, 12], "hayez": 50, "he": 42, "healthi": 37, "heavi": 42, "hebychev": [48, 49], "hecht": [36, 48, 49, 50, 51, 59], "help": [39, 43, 44, 54], "helper": [9, 11, 30, 33, 59], "here": [0, 5, 7, 9, 10, 11, 14, 15, 22, 23, 37, 39, 42, 51, 53, 56], "hernandez": 36, "hierarchi": 43, "high": [30, 31, 33, 49, 50], "higher": [3, 20, 22, 23, 50, 51], "highest": 51, "highli": [48, 50], "highlight": 42, "histori": 39, "hold": [14, 49], "home": [0, 56], "homepag": 43, "hook": [0, 7], "hormann": 50, "horner": 48, "host": 39, "how": [0, 41, 42, 45, 48, 53, 54, 56, 59], "howev": [3, 12, 20, 22, 23, 39, 42, 43, 48, 49, 50], "html": [39, 43], "http": [42, 48, 50, 54], "hyper": 51, "hypercub": 50, "hyperlink": 42, "hyperplan": [14, 51], "hypersurfac": 50, "hzdr": 54, "i": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 58], "ian": 52, "idea": [0, 14, 43], "ideal": 50, "ident": [9, 10, 30, 37, 51, 59], "identifi": 42, "ieee": 50, "ignor": 42, "ii": [50, 51, 53], "iii": 50, "ill": 50, "illustr": [39, 42], "imag": [42, 50], "imageri": 37, "immedi": 39, "immun": 42, "impact": [37, 49], "implac": [0, 7], "implement": [0, 2, 3, 4, 5, 7, 14, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 39, 42, 46, 48, 49, 51, 52, 53, 54, 59], "implent": [2, 4], "impli": 52, "import": [39, 42, 50, 55, 56], "imprecis": 43, "imprimeur": 50, "improv": [0, 14, 39, 42, 43, 44, 48, 59], "imshow": 56, "inactiv": 22, "inappropri": 37, "incid": 37, "includ": [37, 39, 42, 43, 50, 59], "inclus": 37, "incomplet": 22, "increas": [10, 54], "inde": [50, 51, 52], "independ": [7, 51], "index": [3, 4, 5, 6, 9, 10, 12, 14, 15, 19, 20, 22, 23, 32, 33, 34, 35, 42, 43, 47, 48, 49, 50, 53, 57, 59], "index1": 12, "index2": 12, "index2insert": 10, "index_is_contain": [9, 11, 12], "indic": [3, 4, 5, 7, 10, 12, 14, 20, 22, 23, 32, 33, 34, 35, 42, 49, 51, 52, 55], "indices2insert": 10, "indici": 51, "individu": [37, 43], "induc": [51, 52], "ineffici": [34, 56], "inf": [10, 15], "infer": 15, "infin": 55, "inform": [14, 37, 39, 42, 43, 44, 56], "infrastructur": 36, "infti": [46, 50, 52, 55], "ingredi": 16, "initialis": [3, 5, 20, 22, 23, 25], "inlin": 55, "inplac": 5, "input": [2, 3, 5, 10, 14, 15, 20, 22, 23, 24, 25, 26, 27, 29, 56], "insert": [0, 5, 10], "insert_lexicograph": [9, 10, 11], "insid": [39, 42, 43], "inspir": 37, "instal": [43, 59], "instanc": [0, 3, 4, 5, 7, 10, 14, 17, 19, 20, 22, 23, 31, 32, 33, 34, 35, 37, 39, 42, 48, 52], "instead": [0, 7, 14, 15, 39, 42, 43, 48], "institut": [42, 50], "instruct": [39, 42], "insult": 37, "int": [3, 5, 7, 8, 10, 12, 14, 15, 17, 18, 19, 20, 22, 23, 24], "integ": [3, 10, 14, 15, 20, 22, 23], "integr": [39, 46, 59], "intend": 39, "intention": 42, "interact": [37, 42], "interfac": [0, 3, 4, 5, 16, 28, 31, 42], "intermediari": 14, "intern": [3, 9, 14, 20, 22, 23, 42, 59], "internal_domain": [0, 3, 15, 20, 22, 23], "interpol": [9, 14, 21, 39, 42, 46, 47, 48, 51, 53, 54, 57, 59], "interpolationerror": 19, "interpret": [15, 51, 53], "intersphinx": 42, "intersphinx_map": 42, "interview": [42, 50], "introduc": [51, 52], "introduct": [0, 3, 5, 20, 22, 23, 47, 49, 51, 52, 59], "inv": 34, "invers": [0, 2, 34, 46, 50, 53], "invert": [46, 50], "investig": 37, "invis": 37, "invok": 43, "involv": [39, 42], "ipynb": [39, 42], "irregular": 51, "irrevers": 42, "is_complet": [7, 9], "is_lexicographically_complet": [9, 10, 11], "is_sub_index_set_of": [0, 7, 9], "is_super_index_set_of": [0, 7, 9], "isinst": [0, 15], "isn": 39, "issu": [0, 5, 37, 39, 42, 44, 50, 53], "iter": [0, 10, 12, 14], "itken": [48, 49], "its": [15, 28, 36, 37, 39, 42, 43, 46, 48, 49, 50, 52], "itself": [39, 42], "ivo": [48, 49, 50, 51, 59], "j": [42, 49, 50, 51, 52], "jannik": [36, 48, 49, 50, 51, 59], "jargon": 39, "jat": [42, 50], "jean": [46, 50], "jit": 14, "jit_compiled_util": 12, "join": [39, 43], "josef": [49, 51, 52], "joss": 48, "journal": [42, 48, 50], "judici": [39, 42], "jupyt": [39, 40, 42, 43, 44], "just": [3, 12, 14, 17, 37, 49, 52], "k": [12, 14, 15, 49, 50, 56], "kai": 50, "keep": [25, 42], "keepdim": 14, "kei": 42, "ker": 50, "kind": [14, 37, 39, 49, 57], "klau": 50, "know": [6, 39, 42, 43], "known": [42, 50, 54], "kotik": 36, "kroneck": [49, 52], "krzysztof": [48, 49, 50, 51, 59], "kuntzmann": 50, "kuo": 52, "kwarg": [0, 4, 15, 32, 33, 34, 35], "k\u00f6niglich": 50, "l": [46, 50], "l2n": 56, "l_": [48, 49, 50, 52, 53], "l_1": [46, 50], "l_2": [49, 50], "l_inf": 56, "l_p": [3, 7, 17, 18, 19, 20, 22, 23, 50, 51, 52], "la": [49, 50], "label": [42, 43, 55], "ladder": 37, "lag": 53, "lag_poli": 56, "lagrang": [3, 9, 13, 14, 15, 20, 21, 23, 25, 30, 32, 35, 42, 46, 47, 50, 53, 56, 59], "lagrange2newton": [14, 15], "lagrange_polynomi": [0, 22], "lagrange_to_newton": 34, "lagrangepolynomi": [0, 9, 21, 22, 32, 34, 35, 56], "lagrangetocanon": [9, 30, 34], "lagrangetonewton": [9, 30, 34], "lambda": [42, 55], "languag": [37, 39, 42, 43], "larg": 39, "larger": [10, 12, 22], "larger_idx_set": [10, 12], "last": [14, 52, 59], "later": [3, 20, 22, 23, 39, 42], "latex": 42, "latter": 15, "lattic": 50, "layer": [28, 39], "layout": 43, "lazili": 5, "lc": 53, "ldot": [46, 49, 50, 51, 52], "lead": [42, 51], "leaf": [24, 25, 51], "leaf_factor": 25, "leaf_posit": [24, 25], "leaf_siz": 25, "learn": [17, 37, 39, 42, 54, 59], "least": [0, 5, 15, 23, 39, 42, 43, 54, 56], "left": [8, 14, 42, 49, 50, 51, 52], "legend": 55, "legendr": 49, "leja": [14, 48, 49, 50], "len": 55, "length": [3, 12, 20, 22, 23, 42], "leq": [42, 49, 50, 51, 52, 55], "less": [14, 15, 28, 39], "lesson": 39, "let": [43, 48, 51, 53, 55, 56], "letter": 57, "leur": 49, "level": [3, 5, 7, 20, 22, 23, 24, 30, 31, 33, 37, 42, 43, 59], "lex_smaller_or_equ": [9, 11, 12], "lexicograph": [7, 10, 12, 19, 22, 50, 52], "librari": [3, 5, 7, 12, 20, 22, 23, 42], "lift": [47, 48, 49, 51, 59], "light": 51, "like": [3, 14, 20, 22, 23, 39, 42, 43, 54], "limit": [42, 50, 59], "linalg": [14, 56], "line": [0, 51], "linear": [26, 28, 46, 49, 50, 56, 59], "linear_s": 56, "linefe": 42, "liner": 42, "link": [42, 43, 54], "linspac": [55, 56], "linux": 43, "list": [3, 4, 5, 7, 8, 10, 11, 14, 15, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 43, 59], "list_insert_singl": [9, 10, 11], "list_of_indic": 10, "live": [3, 5, 7, 14, 17, 20, 22, 23, 42, 43, 50], "li\u00e9e": 49, "ll": [39, 43, 44], "llig": 50, "lloyd": [46, 49, 50], "ln": 53, "load": 42, "lobatto": [49, 50], "local": [39, 42, 44], "locat": [0, 14, 42, 46, 54], "log": [46, 55], "long": 42, "longrightarrow": [46, 49, 50, 51], "longstand": 42, "look": [39, 41, 43], "lookup": 31, "loop": [0, 14], "lot": 42, "loui": 50, "lower": [12, 14, 25, 42, 50, 51, 53], "lp": [7, 10, 14], "lp_degre": [3, 7, 9, 10, 17, 18, 19, 20, 22, 23], "lp_norm": [9, 11, 14], "lp_sum": [9, 11, 14], "lstsq": 56, "lt": 56, "m": [12, 14, 15, 42, 46, 48, 49, 50, 51, 52, 53], "mac": 43, "machin": [42, 48, 50, 55, 59], "machineri": 39, "maco": 43, "made": 36, "madison": [42, 50], "mai": [3, 17, 20, 22, 23, 37, 39, 42, 43, 48, 49, 50, 53, 54], "main": [16, 36, 39, 42, 43], "mainli": 39, "maintain": [4, 10, 31, 37, 39, 42, 43, 44, 45, 50, 59], "major": 39, "make": [0, 10, 11, 14, 27, 28, 37, 42, 43, 48, 49, 50, 59], "make_complet": [0, 3, 5, 7, 9, 10, 11, 20, 22, 23], "make_deriv": [9, 10, 11], "manag": [36, 54], "mani": 42, "manipul": [42, 50], "map": [3, 10, 42], "mapping_kei": 42, "markdown": [39, 43], "markup": [39, 42, 43], "mask": [8, 51], "match": [12, 15, 42, 51], "math": [42, 50], "mathbb": [42, 46, 48, 49, 50, 51, 52, 53], "mathbf": 56, "mathcal": [46, 48, 49, 50, 51, 53], "mathemat": [3, 5, 20, 22, 23, 39, 40, 50, 52], "mathematica": 50, "mathematici": 49, "mathematik": 50, "mathematisch": 50, "mathjax": 42, "mathrm": [12, 49, 50, 52, 53], "matplolib": 42, "matplotlib": [55, 56], "matric": [13, 14, 15, 22, 27, 46, 53], "matrix": [0, 2, 9, 10, 12, 14, 24, 25, 26, 27, 28, 50, 51, 53, 54, 59], "matrix_oper": 29, "matrix_piec": [27, 56], "matrixoper": [9, 24, 25, 26, 27, 28, 29, 32, 35], "max": [3, 15, 20, 22, 23, 49, 55, 56], "max_": 49, "max_expon": 12, "maxim": 25, "maximum": 12, "mayb": [0, 7, 15], "md": [38, 50], "me": 50, "mean": [15, 22, 39, 42, 43, 54], "meaning": 39, "meant": 43, "measur": 55, "mechan": 43, "media": [49, 51, 52], "meijer": 50, "meilleur": 50, "mem": [3, 5, 20, 22, 23], "member": [0, 7, 37], "memo": 7, "memori": [12, 14], "merg": [39, 43], "merging_fct": [9, 24, 25, 26, 27], "meshgrid": 56, "meta": 39, "meth": 42, "method": [3, 5, 14, 17, 19, 20, 22, 23, 26, 42, 59], "mi": [42, 50, 56], "michael": [36, 42, 48, 49, 50, 51, 59], "michelfeit": [36, 48, 49, 50, 51, 59], "middl": [49, 51], "might": [3, 24, 42, 43], "migliorati": 52, "min": [3, 15, 20, 22, 23], "mind": [42, 50], "minim": [39, 57], "minimis": 25, "minor": 39, "minterpi": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 48, 50, 53, 55], "minuend": 20, "mip": 59, "mislead": [0, 14, 15, 43], "miss": [7, 10, 43, 49, 50], "mistak": [37, 43], "mn": [12, 14, 46], "mod": 42, "model": 54, "modern": 50, "modif": [42, 43], "modul": [2, 3, 4, 5, 7, 8, 9, 12, 23, 31, 39, 42, 59], "monimi": 49, "monomi": [0, 2, 3, 10, 12, 14, 15, 20, 22, 23, 24, 25, 26, 27, 29, 48, 50, 51, 52, 56], "monomials_placehold": 12, "more": [12, 14, 24, 39, 42, 48, 51, 54], "moreov": 42, "mosaic": 46, "most": [3, 21, 30, 39, 42, 43, 46, 49, 59], "move": 54, "mozilla": 37, "mp": [42, 55, 56], "much": [0, 28, 43, 46, 48, 50, 53], "multi": [3, 4, 5, 6, 9, 10, 12, 14, 15, 19, 20, 22, 23, 32, 33, 34, 35, 42, 46, 47, 48, 49, 50, 53, 57, 59], "multi_index": [0, 3, 4, 5, 7, 8, 9, 10, 19, 20, 22, 23, 32, 33, 34, 35, 56], "multi_indic": [3, 20, 22, 23], "multi_indices_new": 5, "multiindex": [0, 8, 14, 15], "multiindexset": [0, 3, 4, 5, 6, 7, 8, 9, 20, 22, 23, 32, 33, 34, 35, 42, 56], "multiindextre": [5, 6, 8, 9], "multipl": [3, 10, 12, 14, 20, 22, 23, 28, 42, 46, 50, 53], "multipli": [3, 12, 20, 22, 23, 46, 56], "multitud": [3, 20, 22, 23], "multivar_horn": 48, "multivari": [1, 5, 6, 9, 15, 16, 17, 20, 22, 23, 42, 46, 47, 49, 53, 57, 59], "multivariate_polynomial_abstract": 3, "multivariatepolynomialabc": [1, 3, 9, 33], "multivariatepolynomialsingleabc": [0, 1, 3, 4, 5, 9, 20, 22, 23, 31, 32, 33, 34, 35], "multpli": [3, 20, 22, 23], "must": [2, 3, 10, 20, 21, 25, 30, 42, 43, 54], "my": 42, "m\u00fchlbach": [48, 49], "n": [0, 3, 12, 14, 15, 17, 18, 19, 20, 22, 23, 42, 46, 48, 49, 50, 51, 52, 53, 56], "n_": [42, 48, 49, 51, 52, 53], "n_i": [49, 51], "naiv": 12, "name": [0, 5, 17, 19, 42], "nan": 15, "narr": [39, 42, 43], "nation": [37, 42, 50], "navi": 20, "navig": 43, "na\u00efv": [48, 50], "na\u00efvli": 48, "nc": 53, "ndarrai": [2, 3, 5, 7, 8, 10, 12, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 42], "nderlichen": 50, "nearest": 42, "necessari": [0, 5, 15, 16, 42, 43], "necessarili": 52, "need": [0, 3, 5, 7, 14, 17, 18, 19, 20, 22, 23, 33, 37, 39, 42, 43, 51], "negat": [3, 20, 22, 23], "neither": [15, 17], "nevil": [48, 49], "new": [3, 5, 7, 20, 22, 23, 39, 42, 43, 48, 49, 50, 54], "new_coeff": [3, 20, 22, 23], "new_expon": 7, "new_grid": [3, 20, 22, 23], "new_indic": [3, 5, 20, 22, 23], "new_inst": 7, "newaxi": 55, "newt": 53, "newt_ev": 23, "newt_poli": 56, "newton": [0, 9, 12, 13, 14, 15, 16, 19, 21, 30, 32, 34, 42, 46, 47, 50, 51, 53, 56, 59], "newton_ev": 0, "newton_poli": 23, "newton_polynomi": [0, 14, 23], "newton_polynomial_basi": 42, "newton_to_lagrang": 34, "newtonpolynomi": [0, 9, 19, 21, 23, 32, 34, 35, 56], "newtontocanon": [9, 30, 35], "newtontolagrang": [9, 30, 35], "next": [51, 59], "nichola": 50, "nira": [42, 50], "nl": 53, "node": [0, 3, 5, 8, 12, 14, 20, 22, 23, 24, 25, 34, 35, 42, 46, 47, 48, 50, 52, 53, 57, 59], "non": [15, 22, 39, 49, 50, 51, 59], "none": [3, 4, 5, 7, 8, 10, 12, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 32, 33, 34, 35], "nor": [15, 17], "norm": [3, 7, 10, 14, 17, 18, 19, 20, 22, 23, 50, 52, 55], "normal": 51, "not_found": 12, "notabl": 39, "notat": [12, 14, 42], "note": [2, 3, 4, 5, 10, 12, 14, 15, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 43, 50], "notebook": [39, 40, 42, 43, 44], "notic": [14, 42, 43], "notimplementederror": [5, 7], "notion": [47, 52, 59], "novel": 59, "now": [3, 20, 22, 23, 56], "np": [0, 3, 5, 7, 10, 14, 15, 17, 18, 19, 20, 22, 23, 42, 55, 56], "nr_": 12, "nr_active_monomi": [3, 9, 20, 22, 23], "nr_point": 15, "nr_polynomi": [12, 15], "null": 50, "num": 50, "numba": [9, 11, 14, 59], "numbaperformancewarn": 56, "number": [0, 3, 5, 7, 12, 14, 15, 20, 22, 23, 49, 51, 55], "number_of_monomi": 10, "number_of_point": 20, "numer": [12, 14, 39, 48, 49, 50, 51, 52, 53, 55, 59], "numerisch": 50, "numpi": [0, 5, 12, 14, 15, 17, 18, 19, 42, 55, 56], "o": [12, 14, 43, 46, 48, 49, 50, 51, 53], "object": [3, 4, 5, 7, 8, 15, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 42], "oblig": 37, "observ": [49, 50, 51, 52, 54], "obstruct": 42, "obtain": 56, "occupi": 51, "occur": [43, 53, 59], "off": [3, 14, 20, 22, 23], "offens": 37, "offer": 42, "offici": [0, 37], "offlin": 37, "often": 42, "olshevski": 46, "omega": [42, 46, 48, 49, 50, 52, 53], "onboard": 39, "onc": [4, 12, 32, 33, 34, 35, 48, 49, 54], "one": [2, 3, 4, 5, 7, 10, 12, 14, 15, 16, 20, 22, 23, 39, 41, 42, 43, 48, 50, 51, 56], "ones": [3, 20, 22, 23, 42, 51], "ongo": [2, 24, 25, 26, 27, 29, 46], "onli": [0, 2, 3, 5, 7, 14, 20, 22, 23, 24, 25, 26, 27, 29, 46, 49, 50, 52, 54], "onlin": [37, 39], "onto": [3, 10], "open": [37, 39, 43, 48, 59], "oper": [1, 3, 4, 5, 6, 7, 9, 14, 20, 22, 23, 32, 33, 34, 35, 46, 48, 50, 53, 56, 59], "operator_abstract": [0, 2], "operatorabc": [1, 2, 4, 9, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35], "opinion": 37, "oplus_": [49, 52], "oppos": 42, "optim": [12, 42, 50, 59], "option": [3, 4, 5, 10, 14, 15, 20, 22, 23, 32, 33, 34, 35, 42, 54], "order": [0, 3, 7, 9, 10, 12, 14, 20, 22, 23, 42, 48, 49, 50, 51, 52, 53], "orderd": 52, "ordinaten": 50, "ordr": 50, "org": [42, 48, 50], "organ": [39, 43], "orient": [37, 39], "origin": [0, 3, 4, 14, 20, 22, 23, 31, 32, 33, 34, 35], "origin_poli": [4, 32, 33, 34, 35], "origin_polynomi": 31, "origin_typ": [4, 9, 31, 32, 33, 34, 35], "orner": 48, "other": [2, 3, 4, 17, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 37, 39, 48, 49, 50, 51, 52], "otherwis": [3, 5, 12, 20, 22, 23, 37, 42], "our": [45, 46, 52, 59], "ourselv": 39, "out": [5, 43, 50, 54], "outcom": 39, "outlin": [39, 44], "output": [2, 3, 5, 12, 14, 20, 22, 23, 24, 25, 26, 27, 29, 39, 43], "over": [0, 14, 50, 55], "overal": 37, "overfit": 50, "overload": 28, "overwritten": [2, 3, 4, 29, 32, 33, 34, 35], "own": [37, 42, 43], "oxford": 50, "p": [3, 12, 14, 20, 22, 23, 42, 46, 48, 49, 50, 51, 52, 53, 55], "p1": [3, 20, 22, 23], "p2": [3, 20, 22, 23], "p_": [42, 49, 50, 51, 52, 53], "p_0": [49, 50, 51], "p_1": 51, "p_2": 51, "p_a": [42, 49, 50, 51, 52, 53], "p_i": [49, 50, 51, 52], "p_j": [49, 51], "p_k": 49, "p_n": [50, 51], "p_x": 49, "p_y": 49, "packag": [14, 39, 42, 48, 50, 54, 59], "pafnuti": 50, "page": [38, 39, 41, 43, 44, 50, 52, 58], "pain": 39, "panel": 51, "par": 50, "parallel": 51, "paramet": [0, 3, 4, 5, 7, 10, 12, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 43, 56], "parametr": [0, 14], "pari": 50, "pars": 42, "part": [1, 2, 3, 19, 24, 25, 26, 27, 28, 29, 42, 43, 49], "partial": [3, 10, 20, 22, 23, 46, 59], "partial_": 51, "partial_diff": [3, 9, 20, 22, 23], "particip": 37, "particitp": [3, 20, 22, 23], "particular": [3, 20, 22, 23, 39, 42, 54], "particularli": 39, "pass": [0, 3, 4, 14, 15, 20, 22, 23, 32, 33, 34, 35], "passiv": [3, 20, 22, 23], "past": [39, 42], "path": 42, "pathcollect": 56, "paul": 46, "pde": 59, "pdf": 39, "peopl": [37, 39, 42], "pep": [3, 39], "per": 22, "perform": [2, 12, 14, 23, 24, 31, 34, 35, 48, 53], "perhap": [42, 43], "period": 59, "perman": 37, "permiss": 37, "permit": 14, "person": 37, "perspect": [49, 51], "phenomenon": [50, 57], "physic": 37, "physik": 50, "pi": [49, 50, 56], "pi_": [51, 52], "pi_a": [48, 49, 50, 51, 52, 53], "piec": 24, "piecewis": [9, 26, 28, 59], "pin": [3, 20, 22, 23], "pioneer": 50, "pip": [43, 54], "place": 37, "placehold": [2, 3, 4, 12, 20, 22, 23, 24, 25, 27, 29, 32, 33, 34, 35], "plai": 54, "plain": 39, "plan": 49, "plane": 51, "pleas": 38, "pledg": [45, 59], "plot": [39, 55], "plt": [55, 56], "plu": [3, 14, 20, 22, 23], "point": [0, 3, 5, 12, 14, 15, 17, 20, 22, 23, 42, 51, 52, 55, 56], "pole": 50, "poli": [20, 23], "polit": 37, "polonici": 49, "poly1": [20, 22], "poly2": [20, 22], "poly_deg": 56, "poly_degre": [3, 9, 10, 17, 18, 19, 20, 22, 23, 55, 56], "polyn": 50, "polynom": 50, "polynomi": [0, 1, 2, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 28, 31, 32, 33, 34, 35, 42, 47, 49, 51, 53, 54, 55, 57, 59], "polyomi": 14, "posit": [7, 10, 12, 24, 27, 37, 51], "possess": 22, "possibl": [0, 10, 14, 27, 37, 39, 42, 43, 49, 50], "possibli": [3, 10, 20, 22, 23, 42], "potenti": 26, "power": [7, 14, 49, 50, 52], "powerd": 7, "pp": [48, 49, 50], "practic": [22, 39, 42, 44, 48, 49, 50, 54], "pre": [12, 14], "preced": 42, "preceq": 52, "precis": [48, 50, 55], "precomput": [12, 14, 16, 24, 25, 27, 46, 51, 53], "precomut": 19, "prefer": [42, 43], "preliminari": [46, 53], "preprint": [48, 49, 50, 51, 59], "present": [3, 12, 20, 22, 23, 43, 50, 54], "press": [48, 49], "preu\u00dfischen": 50, "previou": [42, 50], "previous": 42, "primarili": 42, "primer": 42, "principl": [39, 51], "print": 56, "prior": [14, 15, 51], "privaci": 37, "privat": [7, 37], "probabl": 39, "problem": [24, 25, 39, 42, 43, 50, 51, 54], "problem_s": 8, "proc": [48, 49], "procedur": 21, "proceed": 50, "process": [36, 39, 50], "procida": 39, "prod_": [42, 49, 51, 52], "product": [12, 14, 15, 20, 22, 23, 42, 50], "products_placehold": 12, "profession": 37, "profici": 39, "program": 42, "progress": [39, 50], "project": [0, 37, 39, 43, 45, 50, 51, 59], "promin": [49, 50], "promptli": 37, "proof": 50, "propag": [3, 5, 17, 20, 22, 23], "proper": 42, "properli": 15, "properti": [0, 2, 3, 4, 5, 7, 8, 14, 17, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 42, 49, 53], "propos": 43, "prototyp": [54, 59], "proven": 50, "provid": [0, 2, 4, 5, 7, 21, 22, 23, 28, 30, 31, 32, 34, 35, 37, 39, 42, 43, 49, 51, 54, 55, 59], "pt": [17, 20], "public": [37, 50], "publish": [37, 39], "purpos": [0, 5, 16, 39], "put": 42, "py": [0, 39, 42, 54, 56], "pycon": [39, 42], "pyplot": [55, 56], "pytest": 54, "python": [3, 5, 7, 16, 20, 22, 23, 39, 42, 44, 48, 54, 59], "q": [48, 50, 51, 52, 53], "q_": [46, 49, 50, 51], "q_0": 51, "q_1": 51, "q_2": 51, "q_h": 51, "q_i": 51, "q_j": 51, "q_n": 51, "quad": [48, 49, 50, 51, 52, 53], "quadrat": [48, 49, 50], "quantiz": 51, "queri": [12, 14], "question": 37, "quidistanten": 50, "r": [7, 46, 48, 49, 50, 51, 52, 53, 56], "race": 37, "rais": [3, 5, 7, 14, 15, 19, 20, 22, 23], "random": 55, "rapidli": 50, "rate": 50, "rather": [0, 7, 49], "ration": [42, 50], "re": [17, 18, 19, 39, 43, 44, 51, 54, 59], "reach": [46, 50, 55], "read": [39, 42, 43, 54], "readabl": [42, 43], "reader": [42, 43], "real": [14, 51], "realis": [48, 49, 50, 51, 52, 53], "realiz": [25, 28, 39], "realli": [0, 5], "reason": [33, 37, 43, 48], "rebas": 10, "rebuild": 43, "recaptur": 51, "recip": 39, "recommend": [42, 44, 54], "recomput": 14, "reconstruct": [24, 25, 26, 27, 54, 59], "reconstruct_v": 56, "rectifi": [14, 15], "rectify_eval_input": [0, 9, 11, 15], "rectify_query_point": [9, 11, 15], "recurs": [14, 28, 47, 53, 59], "red": 49, "reduc": 46, "reellen": 50, "ref": [42, 48, 49], "refac": [0, 14, 15], "refactor": [0, 5, 14], "refer": [0, 3, 4, 5, 7, 8, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 38, 40, 43, 44, 47, 54], "referenc": 3, "reflecet": 51, "reflect": [39, 43, 51], "reg_val": 56, "regard": [39, 43], "regardless": 37, "registri": [4, 31, 32, 33, 34, 35], "regress": [14, 39, 54, 59], "regular": [24, 50, 59], "reject": 37, "rel": 42, "relat": [3, 5, 20, 22, 23, 39, 42, 43], "releas": 9, "relev": [14, 19, 39, 42, 43, 52], "reli": 50, "religion": 37, "reload": 43, "remov": [0, 14, 15, 37], "renam": [0, 14, 42], "render": 42, "repeat": [15, 20, 22, 23, 51], "replac": [42, 48], "report": [42, 45, 46, 50, 59], "repositori": [37, 38, 39, 41, 44], "repr": 7, "repres": [3, 16, 17, 18, 20, 22, 23], "represent": [0, 2, 7, 14, 17, 24, 25, 26, 27, 28, 29, 48, 53], "repr\u00e9sent": 49, "request": [39, 43], "requir": [5, 10, 12, 28, 42, 43, 46, 48, 49, 50, 51, 52, 54], "resampl": 54, "research": [42, 46, 50], "reset": 42, "reshap": 56, "resist": 50, "resolv": [37, 50], "resourc": 42, "respect": [0, 15, 22, 24, 25, 37, 42, 50, 51, 52], "respons": [36, 43, 45, 59], "rest": [39, 40, 42, 43, 44, 48, 51], "restructuredtext": [39, 43, 44], "result": [0, 3, 5, 10, 12, 14, 15, 17, 20, 22, 23, 46, 49, 50, 51, 53], "result_placehold": 12, "results_placehold": 15, "retriev": 31, "return": [0, 2, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 56], "reus": [3, 4, 20, 22, 23, 32, 33, 34, 35, 42], "review": [37, 39, 43, 46], "rho": 50, "rhode": 42, "richard": 42, "right": [0, 3, 7, 8, 15, 20, 22, 23, 37, 42, 49, 50, 51, 52], "rightarrow": [50, 51], "riqu": 50, "riv": 50, "rlicher": 50, "robust": [14, 48], "roetman": 50, "roland": [49, 51, 52], "role": 42, "root": [42, 43, 57], "royal": 50, "rst": [0, 39, 42, 43], "rule": 40, "ruler": 42, "run": [39, 54], "rung": [50, 57], "runner": [0, 56], "runtim": [46, 48, 49, 50, 51], "s0747": 50, "sachin": 36, "sai": 42, "sake": 42, "same": [3, 4, 5, 10, 12, 20, 22, 23, 32, 33, 34, 35, 39, 42, 51], "sampl": [50, 56], "satisfi": [49, 50, 51, 52], "sauer": 50, "save": [39, 42, 43], "sbalzarini": [48, 49, 50, 51, 59], "scalar": [3, 20, 22, 23], "scale": 50, "scatter": 56, "scheme": [5, 12, 17, 19, 24, 25, 26, 27, 29, 46, 47, 48, 49, 50, 53, 56, 59], "schroedinger2d": 56, "scienc": [42, 49, 50, 51, 52, 59], "scientif": [42, 50], "scipi": [42, 56], "scope": [45, 59], "screen": 42, "searrow": 51, "second": [3, 7, 14, 20, 22, 23, 43, 49], "section": [0, 39, 43, 44, 54], "secur": 37, "see": [3, 5, 14, 20, 22, 23, 37, 42, 43, 44, 46, 49, 50, 51, 52, 56, 57], "seealso": 42, "seem": 42, "seemingli": 55, "select": 39, "self": [3, 7, 17, 19, 20, 22, 23, 42, 54], "semant": 42, "sens": [42, 48, 49, 56], "sentenc": 42, "sep": 50, "separ": [0, 7, 34, 35, 39, 42, 44, 51], "sequenc": 50, "serg": 50, "serv": [39, 43], "server": 43, "servic": 39, "session": 42, "set": [3, 4, 5, 6, 8, 9, 10, 12, 14, 19, 20, 22, 23, 32, 33, 34, 35, 37, 39, 42, 47, 48, 49, 50, 51, 53, 57, 59], "setminu": [51, 52], "setup": [52, 54], "sever": [12, 42, 50, 56], "sex": 37, "sexual": 37, "shall": [0, 3, 5, 7, 14, 17, 18, 19, 20, 22, 23], "shallow": [3, 5, 7, 20, 22, 23], "shape": [3, 5, 10, 12, 14, 15, 17, 18, 19, 20, 22, 23], "ship": [0, 14], "shmuel": 50, "short": [0, 22, 23, 42], "should": [0, 2, 3, 4, 6, 7, 14, 15, 20, 22, 23, 39, 42, 43], "show": [50, 51, 55], "shown": [43, 51, 55], "siam": [46, 49, 50], "side": [3, 20, 22, 23], "sidon": 50, "sign": [3, 20, 22, 23], "signal": 50, "signatur": [0, 15, 17, 18, 19], "simen": 50, "similar": [0, 3, 5, 20, 22, 23, 39, 43, 46], "similarli": 50, "simpl": 42, "simpli": 42, "simplifi": [39, 51], "sin": [42, 55], "sinc": [0, 5, 7, 22, 54, 56], "singapor": [42, 50], "singl": [3, 10, 12, 14, 20, 22, 23, 39, 42], "site": 54, "sitzungsbericht": 50, "sivkin": [46, 48, 49, 50, 51, 59], "size": [0, 14, 15, 24, 25, 37, 48, 51, 55], "sketch": [48, 51, 53], "skip": [12, 14], "slice": [24, 25, 27], "slice_in": 56, "sloan": 52, "slow": 50, "small": [0, 5, 42, 43, 55], "smaller": [10, 12, 14], "smaller_idx_set": [10, 12], "smallest": 14, "smooth": 50, "so": [0, 3, 14, 22, 39, 42, 43, 50], "societi": 50, "socio": 37, "softwar": [39, 48, 59], "sogenannt": 50, "solid": 51, "solut": [25, 34, 35, 43, 50, 51, 59], "solv": [39, 50, 56], "solver": 59, "some": [2, 3, 5, 12, 14, 22, 39, 42, 43, 50, 51, 52, 56], "someon": 43, "somewhat": [0, 15], "sort": 42, "sourc": [37, 39, 42, 44, 48, 54, 59], "space": [3, 5, 7, 10, 14, 15, 17, 18, 19, 20, 22, 23, 42, 49, 50, 51, 52], "spacial": 14, "span": [15, 49, 50, 51, 52], "spare": 39, "sparingli": 42, "spars": [22, 28, 42, 46, 49, 53], "sparsiti": [0, 14], "spatial": [3, 12, 15, 20, 22, 23], "spatial_dimens": [3, 5, 7, 9, 10, 15, 17, 18, 19, 20, 22, 23, 55, 56], "special": [0, 14, 22, 26, 39, 42, 51], "specif": [28, 42], "specifi": [3, 14, 20, 22, 23, 42, 49, 52, 55], "spectral": 59, "speed": 14, "spend": 39, "sphinx": [39, 42, 43], "spline": [42, 50], "split": [47, 59], "split_posit": 8, "sponsor": [45, 59], "springer": [42, 49, 50, 51, 52], "sqrt": [50, 52, 56], "squar": [22, 25, 56], "squeez": [14, 15], "src": [0, 56], "stabil": [14, 49], "stabl": [14, 43], "stack": [3, 15, 20, 22, 23], "stai": [3, 5, 20, 22, 23], "standard": [3, 5, 7, 15, 20, 22, 23, 42, 45, 59], "start": [24, 27, 39, 42, 43, 51, 59], "start_positions_in": 27, "start_positions_out": 27, "state": [50, 51], "statement": [42, 43], "static": [3, 20, 22, 23, 26, 39], "staticmethod": [0, 23], "statu": 37, "steep": 39, "step": [37, 39, 42, 43, 51], "still": [0, 22, 38, 41, 42, 43, 50, 58], "stoer": [49, 51, 52], "stone": 50, "storag": [25, 28, 48, 49, 53], "store": [3, 4, 5, 7, 8, 10, 12, 14, 20, 22, 23, 32, 33, 34, 35, 39, 43, 51], "stored_mask": [8, 9], "storrag": 7, "str": 7, "straight": 48, "straightforward": 42, "strassen": 50, "strongli": [43, 50], "structur": [28, 39, 44, 46, 51, 53], "style": 43, "sub": [2, 24, 25, 26, 27, 29, 42, 47, 49, 50, 52, 53, 59], "sub_set": 7, "subclass": 3, "subgrid": 50, "submatrix": 27, "submodul": [0, 1, 14], "subsect": 43, "subset": [3, 5, 7, 10, 12, 20, 22, 23, 51], "subset_indic": 12, "subseteq": [48, 49, 50, 51, 52, 53], "substract": [3, 20, 22, 23], "subtract": 22, "subtrahend": 20, "subtre": 51, "subtree_s": 8, "suggest": [39, 43, 50], "suit": 49, "suitabl": [15, 20, 22, 23, 48, 51], "sum": [14, 20, 22, 24], "sum_": [48, 49, 50, 51, 52, 53], "summand": 20, "summar": 39, "summari": [39, 42, 46], "summed_polynomi": 20, "sup_": 55, "super": 7, "super_set": 7, "superset": 7, "support": [42, 43], "suppress": 42, "supremum": [3, 20, 22, 23], "sur": [49, 50], "sure": [42, 43, 54], "surfac": 59, "surround": 39, "switch": [3, 20, 22, 23, 39], "symbol": 50, "symmetr": 49, "synchron": [0, 43], "syntax": 42, "system": [39, 43, 48, 49, 50, 56], "t": [4, 7, 15, 32, 33, 34, 35, 39, 42, 43, 50], "tabl": [39, 42], "take": [3, 20, 22, 23, 37], "talk": 39, "target": [4, 31, 32, 33, 34, 35, 42, 50], "target_poli": [4, 32, 33, 34, 35], "target_typ": [4, 9, 31, 32, 33, 34, 35], "task": [39, 54, 59], "technic": [36, 39, 42, 43, 46, 50], "tell": 10, "temporarili": 37, "tend": [39, 42], "tensor": [42, 50], "tensori": [42, 49, 50, 51], "terminologi": [42, 52], "ters": 39, "test": [12, 27, 55, 59], "text": [39, 42, 43, 50, 52], "textbook": 39, "than": [0, 3, 7, 10, 12, 14, 15, 22, 39, 42, 46, 53], "thei": [0, 3, 12, 17, 37, 39, 42, 43, 49, 51, 57], "thekk": 36, "them": [0, 14, 19, 23, 39, 42, 43, 51, 52, 55], "theor": [48, 49], "theorem": [47, 48, 50, 53, 59], "theoret": [39, 42, 49], "theori": [42, 46, 49, 50], "therebi": [48, 49, 50, 51, 53, 59], "therefor": [39, 42, 50], "therein": 50, "thi": [0, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 46, 48, 50, 51, 52, 54, 56, 58, 59], "thing": [39, 43], "think": [0, 5, 39, 42, 43], "thode": 50, "thoma": 50, "thorough": 39, "those": 37, "though": [42, 48], "threaten": 37, "three": [21, 39, 42, 51], "through": [5, 39, 43], "thu": 51, "time": [12, 14, 39, 43, 50, 53], "tip": 42, "titl": [42, 43], "tobin": 50, "todo": [34, 35, 59], "togeth": 43, "too": [17, 42], "tool": [43, 44], "top": [3, 5, 7, 20, 22, 23, 39, 43], "topic": [3, 39, 43], "touch": 6, "toward": [37, 46], "track": 43, "tracker": [39, 43], "trafo_dict": 24, "transcendent": 56, "transform": [0, 1, 2, 3, 6, 9, 11, 12, 14, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 42, 47, 48, 56, 59], "transformation_abstract": 4, "transformation_data": [2, 24, 25, 26, 27, 29], "transformation_fct": [9, 24, 25, 26, 27, 56], "transformation_oper": [4, 9, 32, 33, 34, 35, 56], "transformationabc": [1, 2, 4, 9, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35], "translat": 37, "transpon": [14, 15], "treat": [39, 49, 51], "tree": [0, 5, 6, 9, 14, 47, 59], "trefethen": [46, 49, 50], "triangualr": 53, "triangular": [0, 12, 14, 24, 25, 28, 46, 53], "tricki": 39, "trivial": [39, 49, 50], "troll": 37, "troubl": 42, "troubleshoot": 43, "true": [7, 10, 12, 14, 55, 56], "try": [42, 43, 56], "tu": 46, "tupl": [3, 8, 14, 15, 20, 22, 23, 24], "turn": [14, 50], "tutori": [41, 43, 59], "two": [3, 12, 20, 22, 23, 42, 51], "type": [3, 4, 5, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 34, 35, 39, 42, 43, 44, 50, 54], "typeerror": [14, 15], "typic": [39, 42], "typo": 43, "u": [37, 39, 42, 43, 45, 56, 59], "unaccept": 37, "und": 50, "under": [38, 41, 58], "underli": [21, 39, 43, 44, 48, 51], "understand": 39, "undisput": 50, "unidolv": 5, "uniform": [4, 28, 50], "uniformli": 50, "union": [7, 9], "uniqu": [42, 49, 50, 51, 52], "unisolv": [0, 3, 5, 12, 14, 20, 22, 23, 34, 35, 47, 48, 52, 53, 59], "unisolvent_nod": [3, 5, 9, 20, 22, 23], "unit": 54, "univ": [42, 50], "univers": [0, 5, 17, 18, 19, 42, 50], "unknown": 56, "unless": [6, 43], "unnecessari": 39, "unod": 50, "unsisolv": 49, "until": [43, 51], "up": [24, 39], "updat": [42, 59], "upper": [50, 53], "url": [42, 48, 50], "us": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 30, 32, 33, 34, 35, 37, 39, 42, 43, 50, 51, 53, 54, 55, 57], "usag": [39, 42, 43, 50], "user": [17, 39, 42], "user_domain": [3, 20, 22, 23], "userwarn": 56, "usual": [3, 20, 22, 23], "util": [0, 9, 11, 56, 59], "uw": 36, "v": [46, 50], "v_n2c": 12, "val": 56, "valu": [3, 5, 12, 14, 15, 17, 19, 20, 22, 23, 39, 43, 48, 50, 51, 56], "valueerror": [3, 5, 7, 15, 20, 22, 23], "vandermond": [12, 50, 53], "vanish": [3, 22, 51], "varepsilon": 50, "vari": 50, "variabl": [7, 15, 42, 48, 51], "variat": 7, "variou": [3, 42], "vdot": 51, "ve": 43, "vector": [7, 10, 14, 23, 46, 56], "veettil": 36, "ver": 50, "veri": [0, 22, 42, 43, 55], "verif": [0, 9, 11, 20, 22, 23, 59], "verifi": [14, 15, 20, 22, 23, 43], "verified_domain": [15, 20, 22, 23], "verify_domain": [9, 11, 15], "verify_input": [14, 15], "verlag": [42, 50], "versa": 53, "version": [0, 7, 10, 14, 15, 26, 37, 39, 42, 43, 48, 50, 51, 54], "vertic": 42, "via": [42, 50], "vice": 53, "viewpoint": 37, "violat": 37, "virtual": 54, "visibl": 37, "visual": 39, "visualis": 51, "visulais": [49, 51], "vladimir": [46, 48, 49, 50, 51, 59], "volker": 50, "volum": [42, 49, 50, 51, 52], "vvv": 54, "w": 7, "wai": [30, 37, 39, 42, 43, 44, 48, 49, 51, 54], "wait": 43, "walter": [49, 50, 51, 52, 53], "want": [17, 39, 43, 54], "warn": [0, 15, 42, 56], "watch": [39, 43], "we": [7, 10, 11, 14, 16, 37, 39, 43, 46, 48, 49, 50, 51, 52, 53, 54, 56], "weak": [3, 4, 5, 7, 8, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35], "weather": [10, 14, 15], "web": [42, 43], "websit": 39, "weierstrass": 50, "weight": 46, "welcom": [37, 59], "well": [0, 7, 22, 37, 39, 42, 43, 50, 51, 56], "were": [5, 37, 42], "what": [6, 37, 39, 42, 44, 56], "when": [3, 4, 12, 14, 20, 22, 23, 32, 33, 34, 35, 39, 42, 43, 44, 50, 51, 52], "whenev": [37, 49, 51, 52], "where": [3, 5, 7, 12, 14, 15, 17, 18, 19, 20, 22, 23, 39, 42, 43, 49, 52, 53, 54], "wherea": 50, "whether": [12, 37, 43], "which": [2, 3, 4, 5, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 42, 43, 48, 50, 51, 52, 53], "while": [28, 39, 42, 43, 49, 50, 51, 52, 59], "who": [17, 36, 37, 39], "whole": [2, 14, 24, 25, 26, 27, 29, 42, 55], "whose": 10, "why": [0, 7, 15, 39], "wicaksono": 36, "wide": 14, "width": 40, "wiki": [37, 42], "wikipedia": [39, 42], "willk": 50, "window": [3, 20, 22, 23, 42, 43], "wing": [42, 50], "winograd": 50, "wisconsin": [42, 50], "wissenschaften": 50, "within": [5, 12, 42, 43, 54, 56], "without": [3, 4, 14, 15, 32, 33, 34, 35, 37, 42, 43], "word": [51, 52], "work": [0, 2, 3, 14, 20, 24, 25, 26, 27, 29, 39, 42, 43, 44, 50, 56], "workflow": [39, 42], "world": [42, 50], "would": [12, 14, 39, 42, 50, 54], "wo\u017aniakowski": 52, "wrapper": 23, "write": [39, 43], "writer": 36, "written": [39, 42, 43], "wrong": [19, 42, 43], "x": [0, 3, 4, 12, 14, 15, 20, 22, 23, 32, 33, 34, 35, 42, 48, 49, 50, 51, 52, 53, 55, 56], "x_1": [49, 50, 51, 52], "x_i": 42, "x_j": 51, "x_m": [49, 50, 51, 52], "x_multipl": 12, "x_singl": 12, "xrightarrow": 50, "xx": [12, 14], "y": [14, 46, 49, 51, 55, 56], "y_interp": 55, "yaml": 54, "yao": 50, "year": 42, "yet": [3, 5, 7, 20, 22, 23, 39], "yield": [10, 50, 51, 52, 53], "ylim": 55, "york": [42, 48, 49, 50], "you": [6, 39, 42, 43, 44, 54, 55, 56], "your": [39, 42, 43, 54, 56], "yourself": 43, "yscale": 55, "z": 56, "zeitschrift": 50, "zero": [0, 3, 14, 20, 22, 23, 51], "zoom": 27, "zu": 50, "zwischen": 50, "\u00e0": 49, "\u00e4": 50, "\u00e9": 50, "\u00f4": 50, "\u00f6": 50, "\u00fc": 50}, "titles": ["TODO lists", "Abstract base classes", "Operator ABC", "Multivariate polynomial ABC", "Transformation ABC", "Grid", "Core modules", "Multi index sets", "Multi index tree", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minterpy</span></code> API Reference", "core utility functions", "Internal API", "numba accelerated utility functions", "transformation utility functions", "utility functions", "verification functions", "Interpolation", "Interpolant class", "interpolate function", "Interpolator class", "Canonical Polynomial Base", "Polynomial Base classes", "Lagrange Polynomial Base", "Newton Polynomial Base", "Barycentric Dict Operator", "Barycentric Factorised Operator", "Barycentric Operator", "Barycentric Piecewise Operator", "Transformation Operator classes", "Matrix Operator", "Polynomial Transformation classes", "Helper functions", "From Canonical basis", "Identity transformation", "From Lagrange basis", "From Newton basis", "About Us", "Code of conduct", "Contributing to the Development", "About the Docs", "Documentation contribution guidelines", "Writing Jupyter Notebooks", "Writing reStructuredText Docs", "How to Contribute to the Docs", "Contributing to the Documentation", "Contributors Guide", "Barycentric transformation", "Fundamentals of <code class=\"docutils literal notranslate\"><span class=\"pre\">minterpy</span></code>", "Evaluation of multivariate polynomials", "Interpolation in unisolvent nodes", "Introduction", "Multivariate divided difference scheme (DDS)", "Multivariate polynomial bases", "Transformation between bases", "Getting started with <code class=\"docutils literal notranslate\"><span class=\"pre\">minterpy</span></code>", "One-dimensional function interpolation", "Polynomial Regression with minterpy", "Glossary", "How-to Guides", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minterpy</span></code> Documentation"], "titleterms": {"": 54, "1d": 51, "80": 42, "In": 42, "One": 55, "The": 50, "abc": [2, 3, 4], "about": [36, 39, 44], "abstract": 1, "acceler": 12, "admonit": 42, "an": [43, 55], "api": [9, 11, 39, 42], "attribut": 37, "avail": 42, "barycentr": [24, 25, 26, 27, 46], "base": [1, 20, 21, 22, 23, 52, 53], "basi": [32, 34, 35], "befor": 43, "between": 53, "bibliograph": 42, "bibliographi": 42, "block": 42, "build": 43, "canon": [20, 32, 48, 52], "charact": 42, "citat": 42, "class": [1, 17, 19, 21, 28, 30], "code": [37, 42], "conduct": 37, "construct": 56, "content": [54, 59], "contribut": [38, 40, 43, 44], "contributor": [36, 39, 45], "core": [6, 10], "creat": [43, 55], "cross": 42, "curs": 50, "data": 56, "dd": 51, "degre": [52, 55], "design": 39, "develop": 38, "dict": 24, "differ": 51, "dimension": [50, 55], "directli": 43, "displai": 42, "divid": 51, "doc": [39, 42, 43], "document": [40, 42, 44, 59], "element": 42, "enforc": 37, "error": 56, "evalu": 48, "exampl": 42, "explan": 39, "extern": 42, "factoris": 25, "file": 42, "finer": 56, "fit": 56, "former": 36, "framework": 39, "from": [32, 34, 35], "full": 59, "function": [10, 12, 13, 14, 15, 18, 31, 55], "fundament": [39, 47], "gener": [49, 56], "get": 54, "glossari": [42, 57], "grid": [5, 56], "groundtruth": 56, "guid": [39, 45, 58], "guidelin": [40, 44], "head": 42, "helper": 31, "how": [39, 43, 44, 58], "i": [56, 59], "ident": 33, "increas": 55, "index": [7, 8, 51, 52], "inlin": 42, "instal": 54, "intern": 11, "interpol": [16, 17, 18, 19, 49, 50, 55], "introduct": 50, "issu": 43, "jupyt": 41, "known": 56, "lagrang": [22, 34, 48, 49, 52], "lift": 50, "line": 42, "list": [0, 42], "local": 43, "locat": 56, "maintain": 36, "mathemat": 42, "matrix": [29, 56], "minterpi": [9, 42, 47, 54, 56, 59], "model": 56, "modul": 6, "multi": [7, 8, 51, 52], "multivari": [3, 48, 50, 51, 52], "newton": [23, 35, 48, 49, 52], "next": 54, "node": [49, 51], "note": 42, "notebook": 41, "notion": 50, "numba": 12, "number": 42, "observ": 56, "oper": [2, 24, 25, 26, 27, 28, 29], "other": 42, "our": 37, "page": 42, "piecewis": 27, "pledg": 37, "polynomi": [3, 20, 21, 22, 23, 30, 48, 50, 52, 56], "problem": 56, "project": [36, 42], "reconstruct": 56, "recurs": 51, "refer": [9, 39, 42, 46, 48, 49, 50, 51, 52, 53, 59], "referenc": 42, "regress": 56, "report": 37, "repositori": 43, "resampl": 56, "respons": 37, "restructuredtext": 42, "rule": 42, "scheme": 51, "scope": 37, "section": 42, "set": [7, 52], "setup": 55, "sourc": 43, "split": 51, "sponsor": 36, "standard": 37, "start": 54, "structur": 43, "sub": 51, "tabl": [54, 59], "term": 42, "test": 54, "theorem": 51, "theori": 39, "todo": [0, 2, 5, 7, 14, 15, 22, 23, 37, 43], "tool": 39, "transform": [4, 13, 28, 30, 33, 46, 53], "tree": [8, 51], "tutori": [39, 54], "u": 36, "unisolv": [49, 50, 51], "us": 56, "util": [10, 12, 13, 14], "verif": 15, "what": [43, 54, 59], "where": 56, "width": 42, "write": [41, 42]}})